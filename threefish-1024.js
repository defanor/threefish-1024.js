// https://github.com/wernerd/Skein3Fish/blob/master/c/src/threefish1024Block.c

// \([bkt][0-9]+\) >> (
// \1.shiftRightUnsigned(

// \([bkt][0-9]+\) << \([0-9]+\)
// \1.shiftLeft(\2)

// ) | (
// ).or(

// ) \^ \([bkt][0-9]+\)
// ).xor(\1)

// \([bkt][0-9]+\) \+=
// \1 = \1 +

// \([bkt][0-9]+\) \+ \([bkt][0-9]+\)
// \1.add(\2)

//  \+ \([bkt][0-9]+\)
// .add(\1)

// ) \+ \([0-9]+\)
// ).add(new int64(\1, 0))

// tmp >> \([0-9]+\)
// tmp.shiftRightUnsigned(\1)

// tmp << (
// tmp.shiftLeft(

// tmp = \([bkt][0-9]+\) \^ \([bkt][0-9]+\);
// tmp = \1.xor(\2);

// \([bkt][0-9]+\) -= \(.+?\);
// \1 = \1.subtract(\2);

// (\([bkt][0-9]+\) \+ \([0-9]+\))
// (\1.add(new int64(\2, 0)))


function test(){
    var key = stringToBytes("I'm almost 1024-bit key for threefish!");
    var tweak = [0x07, 0x06, 0x05, 0x04, 0x03, 0x02, 0x01, 0x00, 0x0F, 0x0E, 0x0D, 0x0C, 0x0B, 0x0A, 0x09, 0x08];
    var input = stringToBytes("I'm very important и достаточно длинное сообщение that must be encrypted with Threefish-1024, причём в CBC-mode, для чего нужно набрать более 1024 бит, " + 
			      "то есть 128 байт, но лучше бы получить побольше блоков, а это относительно много текста, но с юникодом, конечно, задача становится полегче.");
    console.log('inp: ' + bytesToString(input));
    var enc = encryptBytesCBC(key, tweak, input);
    console.log('enc: ' + enc);
    var dec = decryptBytesCBC(key, tweak, enc);
    console.log('dec: ' + bytesToString(dec));
}

function encryptBytesCBC(keyBytes, tweakBytes, plaintextBytes){
    var key = bytesToInt64Array(arrayFillTo1024Bits(keyBytes));
    var tweak = bytesToInt64Array(tweakBytes);
    var inpBlocks = bytesToInt64Blocks(plaintextBytes);
    var encBlocks = [threefishEncrypt1024(key, tweak, IV1024Int64Array())];
    for(var i=0; i < inpBlocks.length; i++){
	encBlocks.push(threefishEncrypt1024(key, tweak, xorInt64Blocks(inpBlocks[i], encBlocks[i])));
    }
    return int64BlocksToBytes(encBlocks);
}
function decryptBytesCBC(keyBytes, tweakBytes, encryptedBytes){
    var key = bytesToInt64Array(arrayFillTo1024Bits(keyBytes));
    var tweak = bytesToInt64Array(tweakBytes);
    var encBlocks = bytesToInt64Blocks(encryptedBytes);
    var decBlocks = [];
    for(var i=1; i < encBlocks.length; i++){
	decBlocks.push(xorInt64Blocks(threefishDecrypt1024(key, tweak, encBlocks[i]), encBlocks[i - 1]));
    }
    return int64BlocksToBytes(decBlocks);
}

function xorInt64Blocks(b1, b2){
    var r = [];
    for(i=0;i<b1.length;i++){
	r.push(b1[i].xor(b2[i]));
    }
    return r;
}
function rand(n){
    return Math.floor(Math.random()*n);
}
function IV1024Int64Array(){
    var time = new Date().getTime();
    var IV = [];
    for(var i=0; i < 4; i++){
	IV.push(time & 0xFF);
	time >>= 8;
    }
    do {
	IV.push(rand(256))
    } while(IV.length < 128);
    return bytesToInt64Array(IV);
}
function arrayFillTo1024Bits(arr){
    while(arr.length % 128) arr.push(0);
    return arr;
}


function bytesToInt64Blocks(bytes){
    return bytesToBlocks1024(bytes).map(function(block){return bytesToInt64Array(block);});
}
function int64BlocksToBytes(blocks){
    return blocksToBytes(blocks.map(function(block){return int64ArrayToBytes(block);}));
}

function bytesToBlocks1024(bytes){
    var blocks = [];
    for(var i=0; i < bytes.length; i += 128){
	blocks.push(arrayFillTo1024Bits(bytes.slice(i, i + 128)));
    }
    return blocks;
}
function blocksToBytes(blocks){
    return [].concat.apply([], blocks);
}

function stringToBytes(str){
    return Utf8Utils.encode(str);
}
function bytesToString(bytes){
    return Utf8Utils.decode(bytes);
}


function bytesToInt64Array(byteArray){
    var ints = [];
    for(var i = 0; i * 8 < byteArray.length; i++){
	var bytes = [];
	for(var j = 0; j < 8; j++){
	    var k = i * 8 + j;
	    bytes[j] = (k >= byteArray.length) ? 0 : byteArray[k];
	}
	ints[i] = int64.fromBytes(bytes[0], bytes[1], bytes[2], bytes[3], bytes[4], bytes[5], bytes[6], bytes[7]);
    }
    return ints;
}
function int64ArrayToBytes(int64Array){
    return int64Array.map(function(elem){return elem.toBytes();}).reduce(function(a, b){return a.concat(b);});
}



function keyParity(key){
    var parity = new int64(0xA9FC1A22, 0x1BD11BDA);
    for (i = 0; i < 16; i++){
	parity = parity.xor(key[i]);
    }
    return parity;
}

function threefishEncrypt1024(key, tweak, input) {

    var b0 = input[0], b1 = input[1], b2 = input[2], b3 = input[3], b4 = input[4], b5 = input[5], b6 = input[6], b7 = input[7];
    var b8 = input[8], b9 = input[9], b10 = input[10], b11 = input[11], b12 = input[12], b13 = input[13], b14 = input[14], b15 = input[15];
    var k0 = key[0], k1 = key[1], k2 = key[2], k3 = key[3], k4 = key[4], k5 = key[5], k6 = key[6], k7 = key[7];
    var k8 = key[8], k9 = key[9], k10 = key[10], k11 = key[11], k12 = key[12], k13 = key[13], k14 = key[14], k15 = key[15], k16 = keyParity(key);
    var t0 = tweak[0], t1 = tweak[1], t2 = t0.xor(t1);

    var output = [];

    b1 = b1.add(k1); b0 = b0.add(b1).add(k0); b1 = ((b1.shiftLeft(24)).or(b1.shiftRightUnsigned(64 - 24))).xor(b0);
    b3 = b3.add(k3); b2 = b2.add(b3).add(k2); b3 = ((b3.shiftLeft(13)).or(b3.shiftRightUnsigned(64 - 13))).xor(b2);
    b5 = b5.add(k5); b4 = b4.add(b5).add(k4); b5 = ((b5.shiftLeft(8)).or(b5.shiftRightUnsigned(64 - 8))).xor(b4);
    b7 = b7.add(k7); b6 = b6.add(b7).add(k6); b7 = ((b7.shiftLeft(47)).or(b7.shiftRightUnsigned(64 - 47))).xor(b6);
    b9 = b9.add(k9); b8 = b8.add(b9).add(k8); b9 = ((b9.shiftLeft(8)).or(b9.shiftRightUnsigned(64 - 8))).xor(b8);
    b11 = b11.add(k11); b10 = b10.add(b11).add(k10); b11 = ((b11.shiftLeft(17)).or(b11.shiftRightUnsigned(64 - 17))).xor(b10);
    b13 = b13.add(k13).add(t0); b12 = b12.add(b13).add(k12); b13 = ((b13.shiftLeft(22)).or(b13.shiftRightUnsigned(64 - 22))).xor(b12);
    b15 = b15.add(k15); b14 = b14.add(b15).add(k14).add(t1); b15 = ((b15.shiftLeft(37)).or(b15.shiftRightUnsigned(64 - 37))).xor(b14);
    b0 = b0.add(b9); b9 = ((b9.shiftLeft(38)).or(b9.shiftRightUnsigned(64 - 38))).xor(b0);
    b2 = b2.add(b13); b13 = ((b13.shiftLeft(19)).or(b13.shiftRightUnsigned(64 - 19))).xor(b2);
    b6 = b6.add(b11); b11 = ((b11.shiftLeft(10)).or(b11.shiftRightUnsigned(64 - 10))).xor(b6);
    b4 = b4.add(b15); b15 = ((b15.shiftLeft(55)).or(b15.shiftRightUnsigned(64 - 55))).xor(b4);
    b10 = b10.add(b7); b7 = ((b7.shiftLeft(49)).or(b7.shiftRightUnsigned(64 - 49))).xor(b10);
    b12 = b12.add(b3); b3 = ((b3.shiftLeft(18)).or(b3.shiftRightUnsigned(64 - 18))).xor(b12);
    b14 = b14.add(b5); b5 = ((b5.shiftLeft(23)).or(b5.shiftRightUnsigned(64 - 23))).xor(b14);
    b8 = b8.add(b1); b1 = ((b1.shiftLeft(52)).or(b1.shiftRightUnsigned(64 - 52))).xor(b8);
    b0 = b0.add(b7); b7 = ((b7.shiftLeft(33)).or(b7.shiftRightUnsigned(64 - 33))).xor(b0);
    b2 = b2.add(b5); b5 = ((b5.shiftLeft(4)).or(b5.shiftRightUnsigned(64 - 4))).xor(b2);
    b4 = b4.add(b3); b3 = ((b3.shiftLeft(51)).or(b3.shiftRightUnsigned(64 - 51))).xor(b4);
    b6 = b6.add(b1); b1 = ((b1.shiftLeft(13)).or(b1.shiftRightUnsigned(64 - 13))).xor(b6);
    b12 = b12.add(b15); b15 = ((b15.shiftLeft(34)).or(b15.shiftRightUnsigned(64 - 34))).xor(b12);
    b14 = b14.add(b13); b13 = ((b13.shiftLeft(41)).or(b13.shiftRightUnsigned(64 - 41))).xor(b14);
    b8 = b8.add(b11); b11 = ((b11.shiftLeft(59)).or(b11.shiftRightUnsigned(64 - 59))).xor(b8);
    b10 = b10.add(b9); b9 = ((b9.shiftLeft(17)).or(b9.shiftRightUnsigned(64 - 17))).xor(b10);
    b0 = b0.add(b15); b15 = ((b15.shiftLeft(5)).or(b15.shiftRightUnsigned(64 - 5))).xor(b0);
    b2 = b2.add(b11); b11 = ((b11.shiftLeft(20)).or(b11.shiftRightUnsigned(64 - 20))).xor(b2);
    b6 = b6.add(b13); b13 = ((b13.shiftLeft(48)).or(b13.shiftRightUnsigned(64 - 48))).xor(b6);
    b4 = b4.add(b9); b9 = ((b9.shiftLeft(41)).or(b9.shiftRightUnsigned(64 - 41))).xor(b4);
    b14 = b14.add(b1); b1 = ((b1.shiftLeft(47)).or(b1.shiftRightUnsigned(64 - 47))).xor(b14);
    b8 = b8.add(b5); b5 = ((b5.shiftLeft(28)).or(b5.shiftRightUnsigned(64 - 28))).xor(b8);
    b10 = b10.add(b3); b3 = ((b3.shiftLeft(16)).or(b3.shiftRightUnsigned(64 - 16))).xor(b10);
    b12 = b12.add(b7); b7 = ((b7.shiftLeft(25)).or(b7.shiftRightUnsigned(64 - 25))).xor(b12);
    b1 = b1.add(k2); b0 = b0.add(b1).add(k1); b1 = ((b1.shiftLeft(41)).or(b1.shiftRightUnsigned(64 - 41))).xor(b0);
    b3 = b3.add(k4); b2 = b2.add(b3).add(k3); b3 = ((b3.shiftLeft(9)).or(b3.shiftRightUnsigned(64 - 9))).xor(b2);
    b5 = b5.add(k6); b4 = b4.add(b5).add(k5); b5 = ((b5.shiftLeft(37)).or(b5.shiftRightUnsigned(64 - 37))).xor(b4);
    b7 = b7.add(k8); b6 = b6.add(b7).add(k7); b7 = ((b7.shiftLeft(31)).or(b7.shiftRightUnsigned(64 - 31))).xor(b6);
    b9 = b9.add(k10); b8 = b8.add(b9).add(k9); b9 = ((b9.shiftLeft(12)).or(b9.shiftRightUnsigned(64 - 12))).xor(b8);
    b11 = b11.add(k12); b10 = b10.add(b11).add(k11); b11 = ((b11.shiftLeft(47)).or(b11.shiftRightUnsigned(64 - 47))).xor(b10);
    b13 = b13.add(k14).add(t1); b12 = b12.add(b13).add(k13); b13 = ((b13.shiftLeft(44)).or(b13.shiftRightUnsigned(64 - 44))).xor(b12);
    b15 = b15.add(k16).add(new int64(1, 0)); b14 = b14.add(b15).add(k15).add(t2); b15 = ((b15.shiftLeft(30)).or(b15.shiftRightUnsigned(64 - 30))).xor(b14);
    b0 = b0.add(b9); b9 = ((b9.shiftLeft(16)).or(b9.shiftRightUnsigned(64 - 16))).xor(b0);
    b2 = b2.add(b13); b13 = ((b13.shiftLeft(34)).or(b13.shiftRightUnsigned(64 - 34))).xor(b2);
    b6 = b6.add(b11); b11 = ((b11.shiftLeft(56)).or(b11.shiftRightUnsigned(64 - 56))).xor(b6);
    b4 = b4.add(b15); b15 = ((b15.shiftLeft(51)).or(b15.shiftRightUnsigned(64 - 51))).xor(b4);
    b10 = b10.add(b7); b7 = ((b7.shiftLeft(4)).or(b7.shiftRightUnsigned(64 - 4))).xor(b10);
    b12 = b12.add(b3); b3 = ((b3.shiftLeft(53)).or(b3.shiftRightUnsigned(64 - 53))).xor(b12);
    b14 = b14.add(b5); b5 = ((b5.shiftLeft(42)).or(b5.shiftRightUnsigned(64 - 42))).xor(b14);
    b8 = b8.add(b1); b1 = ((b1.shiftLeft(41)).or(b1.shiftRightUnsigned(64 - 41))).xor(b8);
    b0 = b0.add(b7); b7 = ((b7.shiftLeft(31)).or(b7.shiftRightUnsigned(64 - 31))).xor(b0);
    b2 = b2.add(b5); b5 = ((b5.shiftLeft(44)).or(b5.shiftRightUnsigned(64 - 44))).xor(b2);
    b4 = b4.add(b3); b3 = ((b3.shiftLeft(47)).or(b3.shiftRightUnsigned(64 - 47))).xor(b4);
    b6 = b6.add(b1); b1 = ((b1.shiftLeft(46)).or(b1.shiftRightUnsigned(64 - 46))).xor(b6);
    b12 = b12.add(b15); b15 = ((b15.shiftLeft(19)).or(b15.shiftRightUnsigned(64 - 19))).xor(b12);
    b14 = b14.add(b13); b13 = ((b13.shiftLeft(42)).or(b13.shiftRightUnsigned(64 - 42))).xor(b14);
    b8 = b8.add(b11); b11 = ((b11.shiftLeft(44)).or(b11.shiftRightUnsigned(64 - 44))).xor(b8);
    b10 = b10.add(b9); b9 = ((b9.shiftLeft(25)).or(b9.shiftRightUnsigned(64 - 25))).xor(b10);
    b0 = b0.add(b15); b15 = ((b15.shiftLeft(9)).or(b15.shiftRightUnsigned(64 - 9))).xor(b0);
    b2 = b2.add(b11); b11 = ((b11.shiftLeft(48)).or(b11.shiftRightUnsigned(64 - 48))).xor(b2);
    b6 = b6.add(b13); b13 = ((b13.shiftLeft(35)).or(b13.shiftRightUnsigned(64 - 35))).xor(b6);
    b4 = b4.add(b9); b9 = ((b9.shiftLeft(52)).or(b9.shiftRightUnsigned(64 - 52))).xor(b4);
    b14 = b14.add(b1); b1 = ((b1.shiftLeft(23)).or(b1.shiftRightUnsigned(64 - 23))).xor(b14);
    b8 = b8.add(b5); b5 = ((b5.shiftLeft(31)).or(b5.shiftRightUnsigned(64 - 31))).xor(b8);
    b10 = b10.add(b3); b3 = ((b3.shiftLeft(37)).or(b3.shiftRightUnsigned(64 - 37))).xor(b10);
    b12 = b12.add(b7); b7 = ((b7.shiftLeft(20)).or(b7.shiftRightUnsigned(64 - 20))).xor(b12);
    b1 = b1.add(k3); b0 = b0.add(b1).add(k2); b1 = ((b1.shiftLeft(24)).or(b1.shiftRightUnsigned(64 - 24))).xor(b0);
    b3 = b3.add(k5); b2 = b2.add(b3).add(k4); b3 = ((b3.shiftLeft(13)).or(b3.shiftRightUnsigned(64 - 13))).xor(b2);
    b5 = b5.add(k7); b4 = b4.add(b5).add(k6); b5 = ((b5.shiftLeft(8)).or(b5.shiftRightUnsigned(64 - 8))).xor(b4);
    b7 = b7.add(k9); b6 = b6.add(b7).add(k8); b7 = ((b7.shiftLeft(47)).or(b7.shiftRightUnsigned(64 - 47))).xor(b6);
    b9 = b9.add(k11); b8 = b8.add(b9).add(k10); b9 = ((b9.shiftLeft(8)).or(b9.shiftRightUnsigned(64 - 8))).xor(b8);
    b11 = b11.add(k13); b10 = b10.add(b11).add(k12); b11 = ((b11.shiftLeft(17)).or(b11.shiftRightUnsigned(64 - 17))).xor(b10);
    b13 = b13.add(k15).add(t2); b12 = b12.add(b13).add(k14); b13 = ((b13.shiftLeft(22)).or(b13.shiftRightUnsigned(64 - 22))).xor(b12);
    b15 = b15.add(k0).add(new int64(2, 0)); b14 = b14.add(b15).add(k16).add(t0); b15 = ((b15.shiftLeft(37)).or(b15.shiftRightUnsigned(64 - 37))).xor(b14);
    b0 = b0.add(b9); b9 = ((b9.shiftLeft(38)).or(b9.shiftRightUnsigned(64 - 38))).xor(b0);
    b2 = b2.add(b13); b13 = ((b13.shiftLeft(19)).or(b13.shiftRightUnsigned(64 - 19))).xor(b2);
    b6 = b6.add(b11); b11 = ((b11.shiftLeft(10)).or(b11.shiftRightUnsigned(64 - 10))).xor(b6);
    b4 = b4.add(b15); b15 = ((b15.shiftLeft(55)).or(b15.shiftRightUnsigned(64 - 55))).xor(b4);
    b10 = b10.add(b7); b7 = ((b7.shiftLeft(49)).or(b7.shiftRightUnsigned(64 - 49))).xor(b10);
    b12 = b12.add(b3); b3 = ((b3.shiftLeft(18)).or(b3.shiftRightUnsigned(64 - 18))).xor(b12);
    b14 = b14.add(b5); b5 = ((b5.shiftLeft(23)).or(b5.shiftRightUnsigned(64 - 23))).xor(b14);
    b8 = b8.add(b1); b1 = ((b1.shiftLeft(52)).or(b1.shiftRightUnsigned(64 - 52))).xor(b8);
    b0 = b0.add(b7); b7 = ((b7.shiftLeft(33)).or(b7.shiftRightUnsigned(64 - 33))).xor(b0);
    b2 = b2.add(b5); b5 = ((b5.shiftLeft(4)).or(b5.shiftRightUnsigned(64 - 4))).xor(b2);
    b4 = b4.add(b3); b3 = ((b3.shiftLeft(51)).or(b3.shiftRightUnsigned(64 - 51))).xor(b4);
    b6 = b6.add(b1); b1 = ((b1.shiftLeft(13)).or(b1.shiftRightUnsigned(64 - 13))).xor(b6);
    b12 = b12.add(b15); b15 = ((b15.shiftLeft(34)).or(b15.shiftRightUnsigned(64 - 34))).xor(b12);
    b14 = b14.add(b13); b13 = ((b13.shiftLeft(41)).or(b13.shiftRightUnsigned(64 - 41))).xor(b14);
    b8 = b8.add(b11); b11 = ((b11.shiftLeft(59)).or(b11.shiftRightUnsigned(64 - 59))).xor(b8);
    b10 = b10.add(b9); b9 = ((b9.shiftLeft(17)).or(b9.shiftRightUnsigned(64 - 17))).xor(b10);
    b0 = b0.add(b15); b15 = ((b15.shiftLeft(5)).or(b15.shiftRightUnsigned(64 - 5))).xor(b0);
    b2 = b2.add(b11); b11 = ((b11.shiftLeft(20)).or(b11.shiftRightUnsigned(64 - 20))).xor(b2);
    b6 = b6.add(b13); b13 = ((b13.shiftLeft(48)).or(b13.shiftRightUnsigned(64 - 48))).xor(b6);
    b4 = b4.add(b9); b9 = ((b9.shiftLeft(41)).or(b9.shiftRightUnsigned(64 - 41))).xor(b4);
    b14 = b14.add(b1); b1 = ((b1.shiftLeft(47)).or(b1.shiftRightUnsigned(64 - 47))).xor(b14);
    b8 = b8.add(b5); b5 = ((b5.shiftLeft(28)).or(b5.shiftRightUnsigned(64 - 28))).xor(b8);
    b10 = b10.add(b3); b3 = ((b3.shiftLeft(16)).or(b3.shiftRightUnsigned(64 - 16))).xor(b10);
    b12 = b12.add(b7); b7 = ((b7.shiftLeft(25)).or(b7.shiftRightUnsigned(64 - 25))).xor(b12);
    b1 = b1.add(k4); b0 = b0.add(b1).add(k3); b1 = ((b1.shiftLeft(41)).or(b1.shiftRightUnsigned(64 - 41))).xor(b0);
    b3 = b3.add(k6); b2 = b2.add(b3).add(k5); b3 = ((b3.shiftLeft(9)).or(b3.shiftRightUnsigned(64 - 9))).xor(b2);
    b5 = b5.add(k8); b4 = b4.add(b5).add(k7); b5 = ((b5.shiftLeft(37)).or(b5.shiftRightUnsigned(64 - 37))).xor(b4);
    b7 = b7.add(k10); b6 = b6.add(b7).add(k9); b7 = ((b7.shiftLeft(31)).or(b7.shiftRightUnsigned(64 - 31))).xor(b6);
    b9 = b9.add(k12); b8 = b8.add(b9).add(k11); b9 = ((b9.shiftLeft(12)).or(b9.shiftRightUnsigned(64 - 12))).xor(b8);
    b11 = b11.add(k14); b10 = b10.add(b11).add(k13); b11 = ((b11.shiftLeft(47)).or(b11.shiftRightUnsigned(64 - 47))).xor(b10);
    b13 = b13.add(k16).add(t0); b12 = b12.add(b13).add(k15); b13 = ((b13.shiftLeft(44)).or(b13.shiftRightUnsigned(64 - 44))).xor(b12);
    b15 = b15.add(k1).add(new int64(3, 0)); b14 = b14.add(b15).add(k0).add(t1); b15 = ((b15.shiftLeft(30)).or(b15.shiftRightUnsigned(64 - 30))).xor(b14);
    b0 = b0.add(b9); b9 = ((b9.shiftLeft(16)).or(b9.shiftRightUnsigned(64 - 16))).xor(b0);
    b2 = b2.add(b13); b13 = ((b13.shiftLeft(34)).or(b13.shiftRightUnsigned(64 - 34))).xor(b2);
    b6 = b6.add(b11); b11 = ((b11.shiftLeft(56)).or(b11.shiftRightUnsigned(64 - 56))).xor(b6);
    b4 = b4.add(b15); b15 = ((b15.shiftLeft(51)).or(b15.shiftRightUnsigned(64 - 51))).xor(b4);
    b10 = b10.add(b7); b7 = ((b7.shiftLeft(4)).or(b7.shiftRightUnsigned(64 - 4))).xor(b10);
    b12 = b12.add(b3); b3 = ((b3.shiftLeft(53)).or(b3.shiftRightUnsigned(64 - 53))).xor(b12);
    b14 = b14.add(b5); b5 = ((b5.shiftLeft(42)).or(b5.shiftRightUnsigned(64 - 42))).xor(b14);
    b8 = b8.add(b1); b1 = ((b1.shiftLeft(41)).or(b1.shiftRightUnsigned(64 - 41))).xor(b8);
    b0 = b0.add(b7); b7 = ((b7.shiftLeft(31)).or(b7.shiftRightUnsigned(64 - 31))).xor(b0);
    b2 = b2.add(b5); b5 = ((b5.shiftLeft(44)).or(b5.shiftRightUnsigned(64 - 44))).xor(b2);
    b4 = b4.add(b3); b3 = ((b3.shiftLeft(47)).or(b3.shiftRightUnsigned(64 - 47))).xor(b4);
    b6 = b6.add(b1); b1 = ((b1.shiftLeft(46)).or(b1.shiftRightUnsigned(64 - 46))).xor(b6);
    b12 = b12.add(b15); b15 = ((b15.shiftLeft(19)).or(b15.shiftRightUnsigned(64 - 19))).xor(b12);
    b14 = b14.add(b13); b13 = ((b13.shiftLeft(42)).or(b13.shiftRightUnsigned(64 - 42))).xor(b14);
    b8 = b8.add(b11); b11 = ((b11.shiftLeft(44)).or(b11.shiftRightUnsigned(64 - 44))).xor(b8);
    b10 = b10.add(b9); b9 = ((b9.shiftLeft(25)).or(b9.shiftRightUnsigned(64 - 25))).xor(b10);
    b0 = b0.add(b15); b15 = ((b15.shiftLeft(9)).or(b15.shiftRightUnsigned(64 - 9))).xor(b0);
    b2 = b2.add(b11); b11 = ((b11.shiftLeft(48)).or(b11.shiftRightUnsigned(64 - 48))).xor(b2);
    b6 = b6.add(b13); b13 = ((b13.shiftLeft(35)).or(b13.shiftRightUnsigned(64 - 35))).xor(b6);
    b4 = b4.add(b9); b9 = ((b9.shiftLeft(52)).or(b9.shiftRightUnsigned(64 - 52))).xor(b4);
    b14 = b14.add(b1); b1 = ((b1.shiftLeft(23)).or(b1.shiftRightUnsigned(64 - 23))).xor(b14);
    b8 = b8.add(b5); b5 = ((b5.shiftLeft(31)).or(b5.shiftRightUnsigned(64 - 31))).xor(b8);
    b10 = b10.add(b3); b3 = ((b3.shiftLeft(37)).or(b3.shiftRightUnsigned(64 - 37))).xor(b10);
    b12 = b12.add(b7); b7 = ((b7.shiftLeft(20)).or(b7.shiftRightUnsigned(64 - 20))).xor(b12);
    b1 = b1.add(k5); b0 = b0.add(b1).add(k4); b1 = ((b1.shiftLeft(24)).or(b1.shiftRightUnsigned(64 - 24))).xor(b0);
    b3 = b3.add(k7); b2 = b2.add(b3).add(k6); b3 = ((b3.shiftLeft(13)).or(b3.shiftRightUnsigned(64 - 13))).xor(b2);
    b5 = b5.add(k9); b4 = b4.add(b5).add(k8); b5 = ((b5.shiftLeft(8)).or(b5.shiftRightUnsigned(64 - 8))).xor(b4);
    b7 = b7.add(k11); b6 = b6.add(b7).add(k10); b7 = ((b7.shiftLeft(47)).or(b7.shiftRightUnsigned(64 - 47))).xor(b6);
    b9 = b9.add(k13); b8 = b8.add(b9).add(k12); b9 = ((b9.shiftLeft(8)).or(b9.shiftRightUnsigned(64 - 8))).xor(b8);
    b11 = b11.add(k15); b10 = b10.add(b11).add(k14); b11 = ((b11.shiftLeft(17)).or(b11.shiftRightUnsigned(64 - 17))).xor(b10);
    b13 = b13.add(k0).add(t1); b12 = b12.add(b13).add(k16); b13 = ((b13.shiftLeft(22)).or(b13.shiftRightUnsigned(64 - 22))).xor(b12);
    b15 = b15.add(k2).add(new int64(4, 0)); b14 = b14.add(b15).add(k1).add(t2); b15 = ((b15.shiftLeft(37)).or(b15.shiftRightUnsigned(64 - 37))).xor(b14);
    b0 = b0.add(b9); b9 = ((b9.shiftLeft(38)).or(b9.shiftRightUnsigned(64 - 38))).xor(b0);
    b2 = b2.add(b13); b13 = ((b13.shiftLeft(19)).or(b13.shiftRightUnsigned(64 - 19))).xor(b2);
    b6 = b6.add(b11); b11 = ((b11.shiftLeft(10)).or(b11.shiftRightUnsigned(64 - 10))).xor(b6);
    b4 = b4.add(b15); b15 = ((b15.shiftLeft(55)).or(b15.shiftRightUnsigned(64 - 55))).xor(b4);
    b10 = b10.add(b7); b7 = ((b7.shiftLeft(49)).or(b7.shiftRightUnsigned(64 - 49))).xor(b10);
    b12 = b12.add(b3); b3 = ((b3.shiftLeft(18)).or(b3.shiftRightUnsigned(64 - 18))).xor(b12);
    b14 = b14.add(b5); b5 = ((b5.shiftLeft(23)).or(b5.shiftRightUnsigned(64 - 23))).xor(b14);
    b8 = b8.add(b1); b1 = ((b1.shiftLeft(52)).or(b1.shiftRightUnsigned(64 - 52))).xor(b8);
    b0 = b0.add(b7); b7 = ((b7.shiftLeft(33)).or(b7.shiftRightUnsigned(64 - 33))).xor(b0);
    b2 = b2.add(b5); b5 = ((b5.shiftLeft(4)).or(b5.shiftRightUnsigned(64 - 4))).xor(b2);
    b4 = b4.add(b3); b3 = ((b3.shiftLeft(51)).or(b3.shiftRightUnsigned(64 - 51))).xor(b4);
    b6 = b6.add(b1); b1 = ((b1.shiftLeft(13)).or(b1.shiftRightUnsigned(64 - 13))).xor(b6);
    b12 = b12.add(b15); b15 = ((b15.shiftLeft(34)).or(b15.shiftRightUnsigned(64 - 34))).xor(b12);
    b14 = b14.add(b13); b13 = ((b13.shiftLeft(41)).or(b13.shiftRightUnsigned(64 - 41))).xor(b14);
    b8 = b8.add(b11); b11 = ((b11.shiftLeft(59)).or(b11.shiftRightUnsigned(64 - 59))).xor(b8);
    b10 = b10.add(b9); b9 = ((b9.shiftLeft(17)).or(b9.shiftRightUnsigned(64 - 17))).xor(b10);
    b0 = b0.add(b15); b15 = ((b15.shiftLeft(5)).or(b15.shiftRightUnsigned(64 - 5))).xor(b0);
    b2 = b2.add(b11); b11 = ((b11.shiftLeft(20)).or(b11.shiftRightUnsigned(64 - 20))).xor(b2);
    b6 = b6.add(b13); b13 = ((b13.shiftLeft(48)).or(b13.shiftRightUnsigned(64 - 48))).xor(b6);
    b4 = b4.add(b9); b9 = ((b9.shiftLeft(41)).or(b9.shiftRightUnsigned(64 - 41))).xor(b4);
    b14 = b14.add(b1); b1 = ((b1.shiftLeft(47)).or(b1.shiftRightUnsigned(64 - 47))).xor(b14);
    b8 = b8.add(b5); b5 = ((b5.shiftLeft(28)).or(b5.shiftRightUnsigned(64 - 28))).xor(b8);
    b10 = b10.add(b3); b3 = ((b3.shiftLeft(16)).or(b3.shiftRightUnsigned(64 - 16))).xor(b10);
    b12 = b12.add(b7); b7 = ((b7.shiftLeft(25)).or(b7.shiftRightUnsigned(64 - 25))).xor(b12);
    b1 = b1.add(k6); b0 = b0.add(b1).add(k5); b1 = ((b1.shiftLeft(41)).or(b1.shiftRightUnsigned(64 - 41))).xor(b0);
    b3 = b3.add(k8); b2 = b2.add(b3).add(k7); b3 = ((b3.shiftLeft(9)).or(b3.shiftRightUnsigned(64 - 9))).xor(b2);
    b5 = b5.add(k10); b4 = b4.add(b5).add(k9); b5 = ((b5.shiftLeft(37)).or(b5.shiftRightUnsigned(64 - 37))).xor(b4);
    b7 = b7.add(k12); b6 = b6.add(b7).add(k11); b7 = ((b7.shiftLeft(31)).or(b7.shiftRightUnsigned(64 - 31))).xor(b6);
    b9 = b9.add(k14); b8 = b8.add(b9).add(k13); b9 = ((b9.shiftLeft(12)).or(b9.shiftRightUnsigned(64 - 12))).xor(b8);
    b11 = b11.add(k16); b10 = b10.add(b11).add(k15); b11 = ((b11.shiftLeft(47)).or(b11.shiftRightUnsigned(64 - 47))).xor(b10);
    b13 = b13.add(k1).add(t2); b12 = b12.add(b13).add(k0); b13 = ((b13.shiftLeft(44)).or(b13.shiftRightUnsigned(64 - 44))).xor(b12);
    b15 = b15.add(k3).add(new int64(5, 0)); b14 = b14.add(b15).add(k2).add(t0); b15 = ((b15.shiftLeft(30)).or(b15.shiftRightUnsigned(64 - 30))).xor(b14);
    b0 = b0.add(b9); b9 = ((b9.shiftLeft(16)).or(b9.shiftRightUnsigned(64 - 16))).xor(b0);
    b2 = b2.add(b13); b13 = ((b13.shiftLeft(34)).or(b13.shiftRightUnsigned(64 - 34))).xor(b2);
    b6 = b6.add(b11); b11 = ((b11.shiftLeft(56)).or(b11.shiftRightUnsigned(64 - 56))).xor(b6);
    b4 = b4.add(b15); b15 = ((b15.shiftLeft(51)).or(b15.shiftRightUnsigned(64 - 51))).xor(b4);
    b10 = b10.add(b7); b7 = ((b7.shiftLeft(4)).or(b7.shiftRightUnsigned(64 - 4))).xor(b10);
    b12 = b12.add(b3); b3 = ((b3.shiftLeft(53)).or(b3.shiftRightUnsigned(64 - 53))).xor(b12);
    b14 = b14.add(b5); b5 = ((b5.shiftLeft(42)).or(b5.shiftRightUnsigned(64 - 42))).xor(b14);
    b8 = b8.add(b1); b1 = ((b1.shiftLeft(41)).or(b1.shiftRightUnsigned(64 - 41))).xor(b8);
    b0 = b0.add(b7); b7 = ((b7.shiftLeft(31)).or(b7.shiftRightUnsigned(64 - 31))).xor(b0);
    b2 = b2.add(b5); b5 = ((b5.shiftLeft(44)).or(b5.shiftRightUnsigned(64 - 44))).xor(b2);
    b4 = b4.add(b3); b3 = ((b3.shiftLeft(47)).or(b3.shiftRightUnsigned(64 - 47))).xor(b4);
    b6 = b6.add(b1); b1 = ((b1.shiftLeft(46)).or(b1.shiftRightUnsigned(64 - 46))).xor(b6);
    b12 = b12.add(b15); b15 = ((b15.shiftLeft(19)).or(b15.shiftRightUnsigned(64 - 19))).xor(b12);
    b14 = b14.add(b13); b13 = ((b13.shiftLeft(42)).or(b13.shiftRightUnsigned(64 - 42))).xor(b14);
    b8 = b8.add(b11); b11 = ((b11.shiftLeft(44)).or(b11.shiftRightUnsigned(64 - 44))).xor(b8);
    b10 = b10.add(b9); b9 = ((b9.shiftLeft(25)).or(b9.shiftRightUnsigned(64 - 25))).xor(b10);
    b0 = b0.add(b15); b15 = ((b15.shiftLeft(9)).or(b15.shiftRightUnsigned(64 - 9))).xor(b0);
    b2 = b2.add(b11); b11 = ((b11.shiftLeft(48)).or(b11.shiftRightUnsigned(64 - 48))).xor(b2);
    b6 = b6.add(b13); b13 = ((b13.shiftLeft(35)).or(b13.shiftRightUnsigned(64 - 35))).xor(b6);
    b4 = b4.add(b9); b9 = ((b9.shiftLeft(52)).or(b9.shiftRightUnsigned(64 - 52))).xor(b4);
    b14 = b14.add(b1); b1 = ((b1.shiftLeft(23)).or(b1.shiftRightUnsigned(64 - 23))).xor(b14);
    b8 = b8.add(b5); b5 = ((b5.shiftLeft(31)).or(b5.shiftRightUnsigned(64 - 31))).xor(b8);
    b10 = b10.add(b3); b3 = ((b3.shiftLeft(37)).or(b3.shiftRightUnsigned(64 - 37))).xor(b10);
    b12 = b12.add(b7); b7 = ((b7.shiftLeft(20)).or(b7.shiftRightUnsigned(64 - 20))).xor(b12);
    b1 = b1.add(k7); b0 = b0.add(b1).add(k6); b1 = ((b1.shiftLeft(24)).or(b1.shiftRightUnsigned(64 - 24))).xor(b0);
    b3 = b3.add(k9); b2 = b2.add(b3).add(k8); b3 = ((b3.shiftLeft(13)).or(b3.shiftRightUnsigned(64 - 13))).xor(b2);
    b5 = b5.add(k11); b4 = b4.add(b5).add(k10); b5 = ((b5.shiftLeft(8)).or(b5.shiftRightUnsigned(64 - 8))).xor(b4);
    b7 = b7.add(k13); b6 = b6.add(b7).add(k12); b7 = ((b7.shiftLeft(47)).or(b7.shiftRightUnsigned(64 - 47))).xor(b6);
    b9 = b9.add(k15); b8 = b8.add(b9).add(k14); b9 = ((b9.shiftLeft(8)).or(b9.shiftRightUnsigned(64 - 8))).xor(b8);
    b11 = b11.add(k0); b10 = b10.add(b11).add(k16); b11 = ((b11.shiftLeft(17)).or(b11.shiftRightUnsigned(64 - 17))).xor(b10);
    b13 = b13.add(k2).add(t0); b12 = b12.add(b13).add(k1); b13 = ((b13.shiftLeft(22)).or(b13.shiftRightUnsigned(64 - 22))).xor(b12);
    b15 = b15.add(k4).add(new int64(6, 0)); b14 = b14.add(b15).add(k3).add(t1); b15 = ((b15.shiftLeft(37)).or(b15.shiftRightUnsigned(64 - 37))).xor(b14);
    b0 = b0.add(b9); b9 = ((b9.shiftLeft(38)).or(b9.shiftRightUnsigned(64 - 38))).xor(b0);
    b2 = b2.add(b13); b13 = ((b13.shiftLeft(19)).or(b13.shiftRightUnsigned(64 - 19))).xor(b2);
    b6 = b6.add(b11); b11 = ((b11.shiftLeft(10)).or(b11.shiftRightUnsigned(64 - 10))).xor(b6);
    b4 = b4.add(b15); b15 = ((b15.shiftLeft(55)).or(b15.shiftRightUnsigned(64 - 55))).xor(b4);
    b10 = b10.add(b7); b7 = ((b7.shiftLeft(49)).or(b7.shiftRightUnsigned(64 - 49))).xor(b10);
    b12 = b12.add(b3); b3 = ((b3.shiftLeft(18)).or(b3.shiftRightUnsigned(64 - 18))).xor(b12);
    b14 = b14.add(b5); b5 = ((b5.shiftLeft(23)).or(b5.shiftRightUnsigned(64 - 23))).xor(b14);
    b8 = b8.add(b1); b1 = ((b1.shiftLeft(52)).or(b1.shiftRightUnsigned(64 - 52))).xor(b8);
    b0 = b0.add(b7); b7 = ((b7.shiftLeft(33)).or(b7.shiftRightUnsigned(64 - 33))).xor(b0);
    b2 = b2.add(b5); b5 = ((b5.shiftLeft(4)).or(b5.shiftRightUnsigned(64 - 4))).xor(b2);
    b4 = b4.add(b3); b3 = ((b3.shiftLeft(51)).or(b3.shiftRightUnsigned(64 - 51))).xor(b4);
    b6 = b6.add(b1); b1 = ((b1.shiftLeft(13)).or(b1.shiftRightUnsigned(64 - 13))).xor(b6);
    b12 = b12.add(b15); b15 = ((b15.shiftLeft(34)).or(b15.shiftRightUnsigned(64 - 34))).xor(b12);
    b14 = b14.add(b13); b13 = ((b13.shiftLeft(41)).or(b13.shiftRightUnsigned(64 - 41))).xor(b14);
    b8 = b8.add(b11); b11 = ((b11.shiftLeft(59)).or(b11.shiftRightUnsigned(64 - 59))).xor(b8);
    b10 = b10.add(b9); b9 = ((b9.shiftLeft(17)).or(b9.shiftRightUnsigned(64 - 17))).xor(b10);
    b0 = b0.add(b15); b15 = ((b15.shiftLeft(5)).or(b15.shiftRightUnsigned(64 - 5))).xor(b0);
    b2 = b2.add(b11); b11 = ((b11.shiftLeft(20)).or(b11.shiftRightUnsigned(64 - 20))).xor(b2);
    b6 = b6.add(b13); b13 = ((b13.shiftLeft(48)).or(b13.shiftRightUnsigned(64 - 48))).xor(b6);
    b4 = b4.add(b9); b9 = ((b9.shiftLeft(41)).or(b9.shiftRightUnsigned(64 - 41))).xor(b4);
    b14 = b14.add(b1); b1 = ((b1.shiftLeft(47)).or(b1.shiftRightUnsigned(64 - 47))).xor(b14);
    b8 = b8.add(b5); b5 = ((b5.shiftLeft(28)).or(b5.shiftRightUnsigned(64 - 28))).xor(b8);
    b10 = b10.add(b3); b3 = ((b3.shiftLeft(16)).or(b3.shiftRightUnsigned(64 - 16))).xor(b10);
    b12 = b12.add(b7); b7 = ((b7.shiftLeft(25)).or(b7.shiftRightUnsigned(64 - 25))).xor(b12);
    b1 = b1.add(k8); b0 = b0.add(b1).add(k7); b1 = ((b1.shiftLeft(41)).or(b1.shiftRightUnsigned(64 - 41))).xor(b0);
    b3 = b3.add(k10); b2 = b2.add(b3).add(k9); b3 = ((b3.shiftLeft(9)).or(b3.shiftRightUnsigned(64 - 9))).xor(b2);
    b5 = b5.add(k12); b4 = b4.add(b5).add(k11); b5 = ((b5.shiftLeft(37)).or(b5.shiftRightUnsigned(64 - 37))).xor(b4);
    b7 = b7.add(k14); b6 = b6.add(b7).add(k13); b7 = ((b7.shiftLeft(31)).or(b7.shiftRightUnsigned(64 - 31))).xor(b6);
    b9 = b9.add(k16); b8 = b8.add(b9).add(k15); b9 = ((b9.shiftLeft(12)).or(b9.shiftRightUnsigned(64 - 12))).xor(b8);
    b11 = b11.add(k1); b10 = b10.add(b11).add(k0); b11 = ((b11.shiftLeft(47)).or(b11.shiftRightUnsigned(64 - 47))).xor(b10);
    b13 = b13.add(k3).add(t1); b12 = b12.add(b13).add(k2); b13 = ((b13.shiftLeft(44)).or(b13.shiftRightUnsigned(64 - 44))).xor(b12);
    b15 = b15.add(k5).add(new int64(7, 0)); b14 = b14.add(b15).add(k4).add(t2); b15 = ((b15.shiftLeft(30)).or(b15.shiftRightUnsigned(64 - 30))).xor(b14);
    b0 = b0.add(b9); b9 = ((b9.shiftLeft(16)).or(b9.shiftRightUnsigned(64 - 16))).xor(b0);
    b2 = b2.add(b13); b13 = ((b13.shiftLeft(34)).or(b13.shiftRightUnsigned(64 - 34))).xor(b2);
    b6 = b6.add(b11); b11 = ((b11.shiftLeft(56)).or(b11.shiftRightUnsigned(64 - 56))).xor(b6);
    b4 = b4.add(b15); b15 = ((b15.shiftLeft(51)).or(b15.shiftRightUnsigned(64 - 51))).xor(b4);
    b10 = b10.add(b7); b7 = ((b7.shiftLeft(4)).or(b7.shiftRightUnsigned(64 - 4))).xor(b10);
    b12 = b12.add(b3); b3 = ((b3.shiftLeft(53)).or(b3.shiftRightUnsigned(64 - 53))).xor(b12);
    b14 = b14.add(b5); b5 = ((b5.shiftLeft(42)).or(b5.shiftRightUnsigned(64 - 42))).xor(b14);
    b8 = b8.add(b1); b1 = ((b1.shiftLeft(41)).or(b1.shiftRightUnsigned(64 - 41))).xor(b8);
    b0 = b0.add(b7); b7 = ((b7.shiftLeft(31)).or(b7.shiftRightUnsigned(64 - 31))).xor(b0);
    b2 = b2.add(b5); b5 = ((b5.shiftLeft(44)).or(b5.shiftRightUnsigned(64 - 44))).xor(b2);
    b4 = b4.add(b3); b3 = ((b3.shiftLeft(47)).or(b3.shiftRightUnsigned(64 - 47))).xor(b4);
    b6 = b6.add(b1); b1 = ((b1.shiftLeft(46)).or(b1.shiftRightUnsigned(64 - 46))).xor(b6);
    b12 = b12.add(b15); b15 = ((b15.shiftLeft(19)).or(b15.shiftRightUnsigned(64 - 19))).xor(b12);
    b14 = b14.add(b13); b13 = ((b13.shiftLeft(42)).or(b13.shiftRightUnsigned(64 - 42))).xor(b14);
    b8 = b8.add(b11); b11 = ((b11.shiftLeft(44)).or(b11.shiftRightUnsigned(64 - 44))).xor(b8);
    b10 = b10.add(b9); b9 = ((b9.shiftLeft(25)).or(b9.shiftRightUnsigned(64 - 25))).xor(b10);
    b0 = b0.add(b15); b15 = ((b15.shiftLeft(9)).or(b15.shiftRightUnsigned(64 - 9))).xor(b0);
    b2 = b2.add(b11); b11 = ((b11.shiftLeft(48)).or(b11.shiftRightUnsigned(64 - 48))).xor(b2);
    b6 = b6.add(b13); b13 = ((b13.shiftLeft(35)).or(b13.shiftRightUnsigned(64 - 35))).xor(b6);
    b4 = b4.add(b9); b9 = ((b9.shiftLeft(52)).or(b9.shiftRightUnsigned(64 - 52))).xor(b4);
    b14 = b14.add(b1); b1 = ((b1.shiftLeft(23)).or(b1.shiftRightUnsigned(64 - 23))).xor(b14);
    b8 = b8.add(b5); b5 = ((b5.shiftLeft(31)).or(b5.shiftRightUnsigned(64 - 31))).xor(b8);
    b10 = b10.add(b3); b3 = ((b3.shiftLeft(37)).or(b3.shiftRightUnsigned(64 - 37))).xor(b10);
    b12 = b12.add(b7); b7 = ((b7.shiftLeft(20)).or(b7.shiftRightUnsigned(64 - 20))).xor(b12);
    b1 = b1.add(k9); b0 = b0.add(b1).add(k8); b1 = ((b1.shiftLeft(24)).or(b1.shiftRightUnsigned(64 - 24))).xor(b0);
    b3 = b3.add(k11); b2 = b2.add(b3).add(k10); b3 = ((b3.shiftLeft(13)).or(b3.shiftRightUnsigned(64 - 13))).xor(b2);
    b5 = b5.add(k13); b4 = b4.add(b5).add(k12); b5 = ((b5.shiftLeft(8)).or(b5.shiftRightUnsigned(64 - 8))).xor(b4);
    b7 = b7.add(k15); b6 = b6.add(b7).add(k14); b7 = ((b7.shiftLeft(47)).or(b7.shiftRightUnsigned(64 - 47))).xor(b6);
    b9 = b9.add(k0); b8 = b8.add(b9).add(k16); b9 = ((b9.shiftLeft(8)).or(b9.shiftRightUnsigned(64 - 8))).xor(b8);
    b11 = b11.add(k2); b10 = b10.add(b11).add(k1); b11 = ((b11.shiftLeft(17)).or(b11.shiftRightUnsigned(64 - 17))).xor(b10);
    b13 = b13.add(k4).add(t2); b12 = b12.add(b13).add(k3); b13 = ((b13.shiftLeft(22)).or(b13.shiftRightUnsigned(64 - 22))).xor(b12);
    b15 = b15.add(k6).add(new int64(8, 0)); b14 = b14.add(b15).add(k5).add(t0); b15 = ((b15.shiftLeft(37)).or(b15.shiftRightUnsigned(64 - 37))).xor(b14);
    b0 = b0.add(b9); b9 = ((b9.shiftLeft(38)).or(b9.shiftRightUnsigned(64 - 38))).xor(b0);
    b2 = b2.add(b13); b13 = ((b13.shiftLeft(19)).or(b13.shiftRightUnsigned(64 - 19))).xor(b2);
    b6 = b6.add(b11); b11 = ((b11.shiftLeft(10)).or(b11.shiftRightUnsigned(64 - 10))).xor(b6);
    b4 = b4.add(b15); b15 = ((b15.shiftLeft(55)).or(b15.shiftRightUnsigned(64 - 55))).xor(b4);
    b10 = b10.add(b7); b7 = ((b7.shiftLeft(49)).or(b7.shiftRightUnsigned(64 - 49))).xor(b10);
    b12 = b12.add(b3); b3 = ((b3.shiftLeft(18)).or(b3.shiftRightUnsigned(64 - 18))).xor(b12);
    b14 = b14.add(b5); b5 = ((b5.shiftLeft(23)).or(b5.shiftRightUnsigned(64 - 23))).xor(b14);
    b8 = b8.add(b1); b1 = ((b1.shiftLeft(52)).or(b1.shiftRightUnsigned(64 - 52))).xor(b8);
    b0 = b0.add(b7); b7 = ((b7.shiftLeft(33)).or(b7.shiftRightUnsigned(64 - 33))).xor(b0);
    b2 = b2.add(b5); b5 = ((b5.shiftLeft(4)).or(b5.shiftRightUnsigned(64 - 4))).xor(b2);
    b4 = b4.add(b3); b3 = ((b3.shiftLeft(51)).or(b3.shiftRightUnsigned(64 - 51))).xor(b4);
    b6 = b6.add(b1); b1 = ((b1.shiftLeft(13)).or(b1.shiftRightUnsigned(64 - 13))).xor(b6);
    b12 = b12.add(b15); b15 = ((b15.shiftLeft(34)).or(b15.shiftRightUnsigned(64 - 34))).xor(b12);
    b14 = b14.add(b13); b13 = ((b13.shiftLeft(41)).or(b13.shiftRightUnsigned(64 - 41))).xor(b14);
    b8 = b8.add(b11); b11 = ((b11.shiftLeft(59)).or(b11.shiftRightUnsigned(64 - 59))).xor(b8);
    b10 = b10.add(b9); b9 = ((b9.shiftLeft(17)).or(b9.shiftRightUnsigned(64 - 17))).xor(b10);
    b0 = b0.add(b15); b15 = ((b15.shiftLeft(5)).or(b15.shiftRightUnsigned(64 - 5))).xor(b0);
    b2 = b2.add(b11); b11 = ((b11.shiftLeft(20)).or(b11.shiftRightUnsigned(64 - 20))).xor(b2);
    b6 = b6.add(b13); b13 = ((b13.shiftLeft(48)).or(b13.shiftRightUnsigned(64 - 48))).xor(b6);
    b4 = b4.add(b9); b9 = ((b9.shiftLeft(41)).or(b9.shiftRightUnsigned(64 - 41))).xor(b4);
    b14 = b14.add(b1); b1 = ((b1.shiftLeft(47)).or(b1.shiftRightUnsigned(64 - 47))).xor(b14);
    b8 = b8.add(b5); b5 = ((b5.shiftLeft(28)).or(b5.shiftRightUnsigned(64 - 28))).xor(b8);
    b10 = b10.add(b3); b3 = ((b3.shiftLeft(16)).or(b3.shiftRightUnsigned(64 - 16))).xor(b10);
    b12 = b12.add(b7); b7 = ((b7.shiftLeft(25)).or(b7.shiftRightUnsigned(64 - 25))).xor(b12);
    b1 = b1.add(k10); b0 = b0.add(b1).add(k9); b1 = ((b1.shiftLeft(41)).or(b1.shiftRightUnsigned(64 - 41))).xor(b0);
    b3 = b3.add(k12); b2 = b2.add(b3).add(k11); b3 = ((b3.shiftLeft(9)).or(b3.shiftRightUnsigned(64 - 9))).xor(b2);
    b5 = b5.add(k14); b4 = b4.add(b5).add(k13); b5 = ((b5.shiftLeft(37)).or(b5.shiftRightUnsigned(64 - 37))).xor(b4);
    b7 = b7.add(k16); b6 = b6.add(b7).add(k15); b7 = ((b7.shiftLeft(31)).or(b7.shiftRightUnsigned(64 - 31))).xor(b6);
    b9 = b9.add(k1); b8 = b8.add(b9).add(k0); b9 = ((b9.shiftLeft(12)).or(b9.shiftRightUnsigned(64 - 12))).xor(b8);
    b11 = b11.add(k3); b10 = b10.add(b11).add(k2); b11 = ((b11.shiftLeft(47)).or(b11.shiftRightUnsigned(64 - 47))).xor(b10);
    b13 = b13.add(k5).add(t0); b12 = b12.add(b13).add(k4); b13 = ((b13.shiftLeft(44)).or(b13.shiftRightUnsigned(64 - 44))).xor(b12);
    b15 = b15.add(k7).add(new int64(9, 0)); b14 = b14.add(b15).add(k6).add(t1); b15 = ((b15.shiftLeft(30)).or(b15.shiftRightUnsigned(64 - 30))).xor(b14);
    b0 = b0.add(b9); b9 = ((b9.shiftLeft(16)).or(b9.shiftRightUnsigned(64 - 16))).xor(b0);
    b2 = b2.add(b13); b13 = ((b13.shiftLeft(34)).or(b13.shiftRightUnsigned(64 - 34))).xor(b2);
    b6 = b6.add(b11); b11 = ((b11.shiftLeft(56)).or(b11.shiftRightUnsigned(64 - 56))).xor(b6);
    b4 = b4.add(b15); b15 = ((b15.shiftLeft(51)).or(b15.shiftRightUnsigned(64 - 51))).xor(b4);
    b10 = b10.add(b7); b7 = ((b7.shiftLeft(4)).or(b7.shiftRightUnsigned(64 - 4))).xor(b10);
    b12 = b12.add(b3); b3 = ((b3.shiftLeft(53)).or(b3.shiftRightUnsigned(64 - 53))).xor(b12);
    b14 = b14.add(b5); b5 = ((b5.shiftLeft(42)).or(b5.shiftRightUnsigned(64 - 42))).xor(b14);
    b8 = b8.add(b1); b1 = ((b1.shiftLeft(41)).or(b1.shiftRightUnsigned(64 - 41))).xor(b8);
    b0 = b0.add(b7); b7 = ((b7.shiftLeft(31)).or(b7.shiftRightUnsigned(64 - 31))).xor(b0);
    b2 = b2.add(b5); b5 = ((b5.shiftLeft(44)).or(b5.shiftRightUnsigned(64 - 44))).xor(b2);
    b4 = b4.add(b3); b3 = ((b3.shiftLeft(47)).or(b3.shiftRightUnsigned(64 - 47))).xor(b4);
    b6 = b6.add(b1); b1 = ((b1.shiftLeft(46)).or(b1.shiftRightUnsigned(64 - 46))).xor(b6);
    b12 = b12.add(b15); b15 = ((b15.shiftLeft(19)).or(b15.shiftRightUnsigned(64 - 19))).xor(b12);
    b14 = b14.add(b13); b13 = ((b13.shiftLeft(42)).or(b13.shiftRightUnsigned(64 - 42))).xor(b14);
    b8 = b8.add(b11); b11 = ((b11.shiftLeft(44)).or(b11.shiftRightUnsigned(64 - 44))).xor(b8);
    b10 = b10.add(b9); b9 = ((b9.shiftLeft(25)).or(b9.shiftRightUnsigned(64 - 25))).xor(b10);
    b0 = b0.add(b15); b15 = ((b15.shiftLeft(9)).or(b15.shiftRightUnsigned(64 - 9))).xor(b0);
    b2 = b2.add(b11); b11 = ((b11.shiftLeft(48)).or(b11.shiftRightUnsigned(64 - 48))).xor(b2);
    b6 = b6.add(b13); b13 = ((b13.shiftLeft(35)).or(b13.shiftRightUnsigned(64 - 35))).xor(b6);
    b4 = b4.add(b9); b9 = ((b9.shiftLeft(52)).or(b9.shiftRightUnsigned(64 - 52))).xor(b4);
    b14 = b14.add(b1); b1 = ((b1.shiftLeft(23)).or(b1.shiftRightUnsigned(64 - 23))).xor(b14);
    b8 = b8.add(b5); b5 = ((b5.shiftLeft(31)).or(b5.shiftRightUnsigned(64 - 31))).xor(b8);
    b10 = b10.add(b3); b3 = ((b3.shiftLeft(37)).or(b3.shiftRightUnsigned(64 - 37))).xor(b10);
    b12 = b12.add(b7); b7 = ((b7.shiftLeft(20)).or(b7.shiftRightUnsigned(64 - 20))).xor(b12);
    b1 = b1.add(k11); b0 = b0.add(b1).add(k10); b1 = ((b1.shiftLeft(24)).or(b1.shiftRightUnsigned(64 - 24))).xor(b0);
    b3 = b3.add(k13); b2 = b2.add(b3).add(k12); b3 = ((b3.shiftLeft(13)).or(b3.shiftRightUnsigned(64 - 13))).xor(b2);
    b5 = b5.add(k15); b4 = b4.add(b5).add(k14); b5 = ((b5.shiftLeft(8)).or(b5.shiftRightUnsigned(64 - 8))).xor(b4);
    b7 = b7.add(k0); b6 = b6.add(b7).add(k16); b7 = ((b7.shiftLeft(47)).or(b7.shiftRightUnsigned(64 - 47))).xor(b6);
    b9 = b9.add(k2); b8 = b8.add(b9).add(k1); b9 = ((b9.shiftLeft(8)).or(b9.shiftRightUnsigned(64 - 8))).xor(b8);
    b11 = b11.add(k4); b10 = b10.add(b11).add(k3); b11 = ((b11.shiftLeft(17)).or(b11.shiftRightUnsigned(64 - 17))).xor(b10);
    b13 = b13.add(k6).add(t1); b12 = b12.add(b13).add(k5); b13 = ((b13.shiftLeft(22)).or(b13.shiftRightUnsigned(64 - 22))).xor(b12);
    b15 = b15.add(k8).add(new int64(10, 0)); b14 = b14.add(b15).add(k7).add(t2); b15 = ((b15.shiftLeft(37)).or(b15.shiftRightUnsigned(64 - 37))).xor(b14);
    b0 = b0.add(b9); b9 = ((b9.shiftLeft(38)).or(b9.shiftRightUnsigned(64 - 38))).xor(b0);
    b2 = b2.add(b13); b13 = ((b13.shiftLeft(19)).or(b13.shiftRightUnsigned(64 - 19))).xor(b2);
    b6 = b6.add(b11); b11 = ((b11.shiftLeft(10)).or(b11.shiftRightUnsigned(64 - 10))).xor(b6);
    b4 = b4.add(b15); b15 = ((b15.shiftLeft(55)).or(b15.shiftRightUnsigned(64 - 55))).xor(b4);
    b10 = b10.add(b7); b7 = ((b7.shiftLeft(49)).or(b7.shiftRightUnsigned(64 - 49))).xor(b10);
    b12 = b12.add(b3); b3 = ((b3.shiftLeft(18)).or(b3.shiftRightUnsigned(64 - 18))).xor(b12);
    b14 = b14.add(b5); b5 = ((b5.shiftLeft(23)).or(b5.shiftRightUnsigned(64 - 23))).xor(b14);
    b8 = b8.add(b1); b1 = ((b1.shiftLeft(52)).or(b1.shiftRightUnsigned(64 - 52))).xor(b8);
    b0 = b0.add(b7); b7 = ((b7.shiftLeft(33)).or(b7.shiftRightUnsigned(64 - 33))).xor(b0);
    b2 = b2.add(b5); b5 = ((b5.shiftLeft(4)).or(b5.shiftRightUnsigned(64 - 4))).xor(b2);
    b4 = b4.add(b3); b3 = ((b3.shiftLeft(51)).or(b3.shiftRightUnsigned(64 - 51))).xor(b4);
    b6 = b6.add(b1); b1 = ((b1.shiftLeft(13)).or(b1.shiftRightUnsigned(64 - 13))).xor(b6);
    b12 = b12.add(b15); b15 = ((b15.shiftLeft(34)).or(b15.shiftRightUnsigned(64 - 34))).xor(b12);
    b14 = b14.add(b13); b13 = ((b13.shiftLeft(41)).or(b13.shiftRightUnsigned(64 - 41))).xor(b14);
    b8 = b8.add(b11); b11 = ((b11.shiftLeft(59)).or(b11.shiftRightUnsigned(64 - 59))).xor(b8);
    b10 = b10.add(b9); b9 = ((b9.shiftLeft(17)).or(b9.shiftRightUnsigned(64 - 17))).xor(b10);
    b0 = b0.add(b15); b15 = ((b15.shiftLeft(5)).or(b15.shiftRightUnsigned(64 - 5))).xor(b0);
    b2 = b2.add(b11); b11 = ((b11.shiftLeft(20)).or(b11.shiftRightUnsigned(64 - 20))).xor(b2);
    b6 = b6.add(b13); b13 = ((b13.shiftLeft(48)).or(b13.shiftRightUnsigned(64 - 48))).xor(b6);
    b4 = b4.add(b9); b9 = ((b9.shiftLeft(41)).or(b9.shiftRightUnsigned(64 - 41))).xor(b4);
    b14 = b14.add(b1); b1 = ((b1.shiftLeft(47)).or(b1.shiftRightUnsigned(64 - 47))).xor(b14);
    b8 = b8.add(b5); b5 = ((b5.shiftLeft(28)).or(b5.shiftRightUnsigned(64 - 28))).xor(b8);
    b10 = b10.add(b3); b3 = ((b3.shiftLeft(16)).or(b3.shiftRightUnsigned(64 - 16))).xor(b10);
    b12 = b12.add(b7); b7 = ((b7.shiftLeft(25)).or(b7.shiftRightUnsigned(64 - 25))).xor(b12);
    b1 = b1.add(k12); b0 = b0.add(b1).add(k11); b1 = ((b1.shiftLeft(41)).or(b1.shiftRightUnsigned(64 - 41))).xor(b0);
    b3 = b3.add(k14); b2 = b2.add(b3).add(k13); b3 = ((b3.shiftLeft(9)).or(b3.shiftRightUnsigned(64 - 9))).xor(b2);
    b5 = b5.add(k16); b4 = b4.add(b5).add(k15); b5 = ((b5.shiftLeft(37)).or(b5.shiftRightUnsigned(64 - 37))).xor(b4);
    b7 = b7.add(k1); b6 = b6.add(b7).add(k0); b7 = ((b7.shiftLeft(31)).or(b7.shiftRightUnsigned(64 - 31))).xor(b6);
    b9 = b9.add(k3); b8 = b8.add(b9).add(k2); b9 = ((b9.shiftLeft(12)).or(b9.shiftRightUnsigned(64 - 12))).xor(b8);
    b11 = b11.add(k5); b10 = b10.add(b11).add(k4); b11 = ((b11.shiftLeft(47)).or(b11.shiftRightUnsigned(64 - 47))).xor(b10);
    b13 = b13.add(k7).add(t2); b12 = b12.add(b13).add(k6); b13 = ((b13.shiftLeft(44)).or(b13.shiftRightUnsigned(64 - 44))).xor(b12);
    b15 = b15.add(k9).add(new int64(11, 0)); b14 = b14.add(b15).add(k8).add(t0); b15 = ((b15.shiftLeft(30)).or(b15.shiftRightUnsigned(64 - 30))).xor(b14);
    b0 = b0.add(b9); b9 = ((b9.shiftLeft(16)).or(b9.shiftRightUnsigned(64 - 16))).xor(b0);
    b2 = b2.add(b13); b13 = ((b13.shiftLeft(34)).or(b13.shiftRightUnsigned(64 - 34))).xor(b2);
    b6 = b6.add(b11); b11 = ((b11.shiftLeft(56)).or(b11.shiftRightUnsigned(64 - 56))).xor(b6);
    b4 = b4.add(b15); b15 = ((b15.shiftLeft(51)).or(b15.shiftRightUnsigned(64 - 51))).xor(b4);
    b10 = b10.add(b7); b7 = ((b7.shiftLeft(4)).or(b7.shiftRightUnsigned(64 - 4))).xor(b10);
    b12 = b12.add(b3); b3 = ((b3.shiftLeft(53)).or(b3.shiftRightUnsigned(64 - 53))).xor(b12);
    b14 = b14.add(b5); b5 = ((b5.shiftLeft(42)).or(b5.shiftRightUnsigned(64 - 42))).xor(b14);
    b8 = b8.add(b1); b1 = ((b1.shiftLeft(41)).or(b1.shiftRightUnsigned(64 - 41))).xor(b8);
    b0 = b0.add(b7); b7 = ((b7.shiftLeft(31)).or(b7.shiftRightUnsigned(64 - 31))).xor(b0);
    b2 = b2.add(b5); b5 = ((b5.shiftLeft(44)).or(b5.shiftRightUnsigned(64 - 44))).xor(b2);
    b4 = b4.add(b3); b3 = ((b3.shiftLeft(47)).or(b3.shiftRightUnsigned(64 - 47))).xor(b4);
    b6 = b6.add(b1); b1 = ((b1.shiftLeft(46)).or(b1.shiftRightUnsigned(64 - 46))).xor(b6);
    b12 = b12.add(b15); b15 = ((b15.shiftLeft(19)).or(b15.shiftRightUnsigned(64 - 19))).xor(b12);
    b14 = b14.add(b13); b13 = ((b13.shiftLeft(42)).or(b13.shiftRightUnsigned(64 - 42))).xor(b14);
    b8 = b8.add(b11); b11 = ((b11.shiftLeft(44)).or(b11.shiftRightUnsigned(64 - 44))).xor(b8);
    b10 = b10.add(b9); b9 = ((b9.shiftLeft(25)).or(b9.shiftRightUnsigned(64 - 25))).xor(b10);
    b0 = b0.add(b15); b15 = ((b15.shiftLeft(9)).or(b15.shiftRightUnsigned(64 - 9))).xor(b0);
    b2 = b2.add(b11); b11 = ((b11.shiftLeft(48)).or(b11.shiftRightUnsigned(64 - 48))).xor(b2);
    b6 = b6.add(b13); b13 = ((b13.shiftLeft(35)).or(b13.shiftRightUnsigned(64 - 35))).xor(b6);
    b4 = b4.add(b9); b9 = ((b9.shiftLeft(52)).or(b9.shiftRightUnsigned(64 - 52))).xor(b4);
    b14 = b14.add(b1); b1 = ((b1.shiftLeft(23)).or(b1.shiftRightUnsigned(64 - 23))).xor(b14);
    b8 = b8.add(b5); b5 = ((b5.shiftLeft(31)).or(b5.shiftRightUnsigned(64 - 31))).xor(b8);
    b10 = b10.add(b3); b3 = ((b3.shiftLeft(37)).or(b3.shiftRightUnsigned(64 - 37))).xor(b10);
    b12 = b12.add(b7); b7 = ((b7.shiftLeft(20)).or(b7.shiftRightUnsigned(64 - 20))).xor(b12);
    b1 = b1.add(k13); b0 = b0.add(b1).add(k12); b1 = ((b1.shiftLeft(24)).or(b1.shiftRightUnsigned(64 - 24))).xor(b0);
    b3 = b3.add(k15); b2 = b2.add(b3).add(k14); b3 = ((b3.shiftLeft(13)).or(b3.shiftRightUnsigned(64 - 13))).xor(b2);
    b5 = b5.add(k0); b4 = b4.add(b5).add(k16); b5 = ((b5.shiftLeft(8)).or(b5.shiftRightUnsigned(64 - 8))).xor(b4);
    b7 = b7.add(k2); b6 = b6.add(b7).add(k1); b7 = ((b7.shiftLeft(47)).or(b7.shiftRightUnsigned(64 - 47))).xor(b6);
    b9 = b9.add(k4); b8 = b8.add(b9).add(k3); b9 = ((b9.shiftLeft(8)).or(b9.shiftRightUnsigned(64 - 8))).xor(b8);
    b11 = b11.add(k6); b10 = b10.add(b11).add(k5); b11 = ((b11.shiftLeft(17)).or(b11.shiftRightUnsigned(64 - 17))).xor(b10);
    b13 = b13.add(k8).add(t0); b12 = b12.add(b13).add(k7); b13 = ((b13.shiftLeft(22)).or(b13.shiftRightUnsigned(64 - 22))).xor(b12);
    b15 = b15.add(k10).add(new int64(12, 0)); b14 = b14.add(b15).add(k9).add(t1); b15 = ((b15.shiftLeft(37)).or(b15.shiftRightUnsigned(64 - 37))).xor(b14);
    b0 = b0.add(b9); b9 = ((b9.shiftLeft(38)).or(b9.shiftRightUnsigned(64 - 38))).xor(b0);
    b2 = b2.add(b13); b13 = ((b13.shiftLeft(19)).or(b13.shiftRightUnsigned(64 - 19))).xor(b2);
    b6 = b6.add(b11); b11 = ((b11.shiftLeft(10)).or(b11.shiftRightUnsigned(64 - 10))).xor(b6);
    b4 = b4.add(b15); b15 = ((b15.shiftLeft(55)).or(b15.shiftRightUnsigned(64 - 55))).xor(b4);
    b10 = b10.add(b7); b7 = ((b7.shiftLeft(49)).or(b7.shiftRightUnsigned(64 - 49))).xor(b10);
    b12 = b12.add(b3); b3 = ((b3.shiftLeft(18)).or(b3.shiftRightUnsigned(64 - 18))).xor(b12);
    b14 = b14.add(b5); b5 = ((b5.shiftLeft(23)).or(b5.shiftRightUnsigned(64 - 23))).xor(b14);
    b8 = b8.add(b1); b1 = ((b1.shiftLeft(52)).or(b1.shiftRightUnsigned(64 - 52))).xor(b8);
    b0 = b0.add(b7); b7 = ((b7.shiftLeft(33)).or(b7.shiftRightUnsigned(64 - 33))).xor(b0);
    b2 = b2.add(b5); b5 = ((b5.shiftLeft(4)).or(b5.shiftRightUnsigned(64 - 4))).xor(b2);
    b4 = b4.add(b3); b3 = ((b3.shiftLeft(51)).or(b3.shiftRightUnsigned(64 - 51))).xor(b4);
    b6 = b6.add(b1); b1 = ((b1.shiftLeft(13)).or(b1.shiftRightUnsigned(64 - 13))).xor(b6);
    b12 = b12.add(b15); b15 = ((b15.shiftLeft(34)).or(b15.shiftRightUnsigned(64 - 34))).xor(b12);
    b14 = b14.add(b13); b13 = ((b13.shiftLeft(41)).or(b13.shiftRightUnsigned(64 - 41))).xor(b14);
    b8 = b8.add(b11); b11 = ((b11.shiftLeft(59)).or(b11.shiftRightUnsigned(64 - 59))).xor(b8);
    b10 = b10.add(b9); b9 = ((b9.shiftLeft(17)).or(b9.shiftRightUnsigned(64 - 17))).xor(b10);
    b0 = b0.add(b15); b15 = ((b15.shiftLeft(5)).or(b15.shiftRightUnsigned(64 - 5))).xor(b0);
    b2 = b2.add(b11); b11 = ((b11.shiftLeft(20)).or(b11.shiftRightUnsigned(64 - 20))).xor(b2);
    b6 = b6.add(b13); b13 = ((b13.shiftLeft(48)).or(b13.shiftRightUnsigned(64 - 48))).xor(b6);
    b4 = b4.add(b9); b9 = ((b9.shiftLeft(41)).or(b9.shiftRightUnsigned(64 - 41))).xor(b4);
    b14 = b14.add(b1); b1 = ((b1.shiftLeft(47)).or(b1.shiftRightUnsigned(64 - 47))).xor(b14);
    b8 = b8.add(b5); b5 = ((b5.shiftLeft(28)).or(b5.shiftRightUnsigned(64 - 28))).xor(b8);
    b10 = b10.add(b3); b3 = ((b3.shiftLeft(16)).or(b3.shiftRightUnsigned(64 - 16))).xor(b10);
    b12 = b12.add(b7); b7 = ((b7.shiftLeft(25)).or(b7.shiftRightUnsigned(64 - 25))).xor(b12);
    b1 = b1.add(k14); b0 = b0.add(b1).add(k13); b1 = ((b1.shiftLeft(41)).or(b1.shiftRightUnsigned(64 - 41))).xor(b0);
    b3 = b3.add(k16); b2 = b2.add(b3).add(k15); b3 = ((b3.shiftLeft(9)).or(b3.shiftRightUnsigned(64 - 9))).xor(b2);
    b5 = b5.add(k1); b4 = b4.add(b5).add(k0); b5 = ((b5.shiftLeft(37)).or(b5.shiftRightUnsigned(64 - 37))).xor(b4);
    b7 = b7.add(k3); b6 = b6.add(b7).add(k2); b7 = ((b7.shiftLeft(31)).or(b7.shiftRightUnsigned(64 - 31))).xor(b6);
    b9 = b9.add(k5); b8 = b8.add(b9).add(k4); b9 = ((b9.shiftLeft(12)).or(b9.shiftRightUnsigned(64 - 12))).xor(b8);
    b11 = b11.add(k7); b10 = b10.add(b11).add(k6); b11 = ((b11.shiftLeft(47)).or(b11.shiftRightUnsigned(64 - 47))).xor(b10);
    b13 = b13.add(k9).add(t1); b12 = b12.add(b13).add(k8); b13 = ((b13.shiftLeft(44)).or(b13.shiftRightUnsigned(64 - 44))).xor(b12);
    b15 = b15.add(k11).add(new int64(13, 0)); b14 = b14.add(b15).add(k10).add(t2); b15 = ((b15.shiftLeft(30)).or(b15.shiftRightUnsigned(64 - 30))).xor(b14);
    b0 = b0.add(b9); b9 = ((b9.shiftLeft(16)).or(b9.shiftRightUnsigned(64 - 16))).xor(b0);
    b2 = b2.add(b13); b13 = ((b13.shiftLeft(34)).or(b13.shiftRightUnsigned(64 - 34))).xor(b2);
    b6 = b6.add(b11); b11 = ((b11.shiftLeft(56)).or(b11.shiftRightUnsigned(64 - 56))).xor(b6);
    b4 = b4.add(b15); b15 = ((b15.shiftLeft(51)).or(b15.shiftRightUnsigned(64 - 51))).xor(b4);
    b10 = b10.add(b7); b7 = ((b7.shiftLeft(4)).or(b7.shiftRightUnsigned(64 - 4))).xor(b10);
    b12 = b12.add(b3); b3 = ((b3.shiftLeft(53)).or(b3.shiftRightUnsigned(64 - 53))).xor(b12);
    b14 = b14.add(b5); b5 = ((b5.shiftLeft(42)).or(b5.shiftRightUnsigned(64 - 42))).xor(b14);
    b8 = b8.add(b1); b1 = ((b1.shiftLeft(41)).or(b1.shiftRightUnsigned(64 - 41))).xor(b8);
    b0 = b0.add(b7); b7 = ((b7.shiftLeft(31)).or(b7.shiftRightUnsigned(64 - 31))).xor(b0);
    b2 = b2.add(b5); b5 = ((b5.shiftLeft(44)).or(b5.shiftRightUnsigned(64 - 44))).xor(b2);
    b4 = b4.add(b3); b3 = ((b3.shiftLeft(47)).or(b3.shiftRightUnsigned(64 - 47))).xor(b4);
    b6 = b6.add(b1); b1 = ((b1.shiftLeft(46)).or(b1.shiftRightUnsigned(64 - 46))).xor(b6);
    b12 = b12.add(b15); b15 = ((b15.shiftLeft(19)).or(b15.shiftRightUnsigned(64 - 19))).xor(b12);
    b14 = b14.add(b13); b13 = ((b13.shiftLeft(42)).or(b13.shiftRightUnsigned(64 - 42))).xor(b14);
    b8 = b8.add(b11); b11 = ((b11.shiftLeft(44)).or(b11.shiftRightUnsigned(64 - 44))).xor(b8);
    b10 = b10.add(b9); b9 = ((b9.shiftLeft(25)).or(b9.shiftRightUnsigned(64 - 25))).xor(b10);
    b0 = b0.add(b15); b15 = ((b15.shiftLeft(9)).or(b15.shiftRightUnsigned(64 - 9))).xor(b0);
    b2 = b2.add(b11); b11 = ((b11.shiftLeft(48)).or(b11.shiftRightUnsigned(64 - 48))).xor(b2);
    b6 = b6.add(b13); b13 = ((b13.shiftLeft(35)).or(b13.shiftRightUnsigned(64 - 35))).xor(b6);
    b4 = b4.add(b9); b9 = ((b9.shiftLeft(52)).or(b9.shiftRightUnsigned(64 - 52))).xor(b4);
    b14 = b14.add(b1); b1 = ((b1.shiftLeft(23)).or(b1.shiftRightUnsigned(64 - 23))).xor(b14);
    b8 = b8.add(b5); b5 = ((b5.shiftLeft(31)).or(b5.shiftRightUnsigned(64 - 31))).xor(b8);
    b10 = b10.add(b3); b3 = ((b3.shiftLeft(37)).or(b3.shiftRightUnsigned(64 - 37))).xor(b10);
    b12 = b12.add(b7); b7 = ((b7.shiftLeft(20)).or(b7.shiftRightUnsigned(64 - 20))).xor(b12);
    b1 = b1.add(k15); b0 = b0.add(b1).add(k14); b1 = ((b1.shiftLeft(24)).or(b1.shiftRightUnsigned(64 - 24))).xor(b0);
    b3 = b3.add(k0); b2 = b2.add(b3).add(k16); b3 = ((b3.shiftLeft(13)).or(b3.shiftRightUnsigned(64 - 13))).xor(b2);
    b5 = b5.add(k2); b4 = b4.add(b5).add(k1); b5 = ((b5.shiftLeft(8)).or(b5.shiftRightUnsigned(64 - 8))).xor(b4);
    b7 = b7.add(k4); b6 = b6.add(b7).add(k3); b7 = ((b7.shiftLeft(47)).or(b7.shiftRightUnsigned(64 - 47))).xor(b6);
    b9 = b9.add(k6); b8 = b8.add(b9).add(k5); b9 = ((b9.shiftLeft(8)).or(b9.shiftRightUnsigned(64 - 8))).xor(b8);
    b11 = b11.add(k8); b10 = b10.add(b11).add(k7); b11 = ((b11.shiftLeft(17)).or(b11.shiftRightUnsigned(64 - 17))).xor(b10);
    b13 = b13.add(k10).add(t2); b12 = b12.add(b13).add(k9); b13 = ((b13.shiftLeft(22)).or(b13.shiftRightUnsigned(64 - 22))).xor(b12);
    b15 = b15.add(k12).add(new int64(14, 0)); b14 = b14.add(b15).add(k11).add(t0); b15 = ((b15.shiftLeft(37)).or(b15.shiftRightUnsigned(64 - 37))).xor(b14);
    b0 = b0.add(b9); b9 = ((b9.shiftLeft(38)).or(b9.shiftRightUnsigned(64 - 38))).xor(b0);
    b2 = b2.add(b13); b13 = ((b13.shiftLeft(19)).or(b13.shiftRightUnsigned(64 - 19))).xor(b2);
    b6 = b6.add(b11); b11 = ((b11.shiftLeft(10)).or(b11.shiftRightUnsigned(64 - 10))).xor(b6);
    b4 = b4.add(b15); b15 = ((b15.shiftLeft(55)).or(b15.shiftRightUnsigned(64 - 55))).xor(b4);
    b10 = b10.add(b7); b7 = ((b7.shiftLeft(49)).or(b7.shiftRightUnsigned(64 - 49))).xor(b10);
    b12 = b12.add(b3); b3 = ((b3.shiftLeft(18)).or(b3.shiftRightUnsigned(64 - 18))).xor(b12);
    b14 = b14.add(b5); b5 = ((b5.shiftLeft(23)).or(b5.shiftRightUnsigned(64 - 23))).xor(b14);
    b8 = b8.add(b1); b1 = ((b1.shiftLeft(52)).or(b1.shiftRightUnsigned(64 - 52))).xor(b8);
    b0 = b0.add(b7); b7 = ((b7.shiftLeft(33)).or(b7.shiftRightUnsigned(64 - 33))).xor(b0);
    b2 = b2.add(b5); b5 = ((b5.shiftLeft(4)).or(b5.shiftRightUnsigned(64 - 4))).xor(b2);
    b4 = b4.add(b3); b3 = ((b3.shiftLeft(51)).or(b3.shiftRightUnsigned(64 - 51))).xor(b4);
    b6 = b6.add(b1); b1 = ((b1.shiftLeft(13)).or(b1.shiftRightUnsigned(64 - 13))).xor(b6);
    b12 = b12.add(b15); b15 = ((b15.shiftLeft(34)).or(b15.shiftRightUnsigned(64 - 34))).xor(b12);
    b14 = b14.add(b13); b13 = ((b13.shiftLeft(41)).or(b13.shiftRightUnsigned(64 - 41))).xor(b14);
    b8 = b8.add(b11); b11 = ((b11.shiftLeft(59)).or(b11.shiftRightUnsigned(64 - 59))).xor(b8);
    b10 = b10.add(b9); b9 = ((b9.shiftLeft(17)).or(b9.shiftRightUnsigned(64 - 17))).xor(b10);
    b0 = b0.add(b15); b15 = ((b15.shiftLeft(5)).or(b15.shiftRightUnsigned(64 - 5))).xor(b0);
    b2 = b2.add(b11); b11 = ((b11.shiftLeft(20)).or(b11.shiftRightUnsigned(64 - 20))).xor(b2);
    b6 = b6.add(b13); b13 = ((b13.shiftLeft(48)).or(b13.shiftRightUnsigned(64 - 48))).xor(b6);
    b4 = b4.add(b9); b9 = ((b9.shiftLeft(41)).or(b9.shiftRightUnsigned(64 - 41))).xor(b4);
    b14 = b14.add(b1); b1 = ((b1.shiftLeft(47)).or(b1.shiftRightUnsigned(64 - 47))).xor(b14);
    b8 = b8.add(b5); b5 = ((b5.shiftLeft(28)).or(b5.shiftRightUnsigned(64 - 28))).xor(b8);
    b10 = b10.add(b3); b3 = ((b3.shiftLeft(16)).or(b3.shiftRightUnsigned(64 - 16))).xor(b10);
    b12 = b12.add(b7); b7 = ((b7.shiftLeft(25)).or(b7.shiftRightUnsigned(64 - 25))).xor(b12);
    b1 = b1.add(k16); b0 = b0.add(b1).add(k15); b1 = ((b1.shiftLeft(41)).or(b1.shiftRightUnsigned(64 - 41))).xor(b0);
    b3 = b3.add(k1); b2 = b2.add(b3).add(k0); b3 = ((b3.shiftLeft(9)).or(b3.shiftRightUnsigned(64 - 9))).xor(b2);
    b5 = b5.add(k3); b4 = b4.add(b5).add(k2); b5 = ((b5.shiftLeft(37)).or(b5.shiftRightUnsigned(64 - 37))).xor(b4);
    b7 = b7.add(k5); b6 = b6.add(b7).add(k4); b7 = ((b7.shiftLeft(31)).or(b7.shiftRightUnsigned(64 - 31))).xor(b6);
    b9 = b9.add(k7); b8 = b8.add(b9).add(k6); b9 = ((b9.shiftLeft(12)).or(b9.shiftRightUnsigned(64 - 12))).xor(b8);
    b11 = b11.add(k9); b10 = b10.add(b11).add(k8); b11 = ((b11.shiftLeft(47)).or(b11.shiftRightUnsigned(64 - 47))).xor(b10);
    b13 = b13.add(k11).add(t0); b12 = b12.add(b13).add(k10); b13 = ((b13.shiftLeft(44)).or(b13.shiftRightUnsigned(64 - 44))).xor(b12);
    b15 = b15.add(k13).add(new int64(15, 0)); b14 = b14.add(b15).add(k12).add(t1); b15 = ((b15.shiftLeft(30)).or(b15.shiftRightUnsigned(64 - 30))).xor(b14);
    b0 = b0.add(b9); b9 = ((b9.shiftLeft(16)).or(b9.shiftRightUnsigned(64 - 16))).xor(b0);
    b2 = b2.add(b13); b13 = ((b13.shiftLeft(34)).or(b13.shiftRightUnsigned(64 - 34))).xor(b2);
    b6 = b6.add(b11); b11 = ((b11.shiftLeft(56)).or(b11.shiftRightUnsigned(64 - 56))).xor(b6);
    b4 = b4.add(b15); b15 = ((b15.shiftLeft(51)).or(b15.shiftRightUnsigned(64 - 51))).xor(b4);
    b10 = b10.add(b7); b7 = ((b7.shiftLeft(4)).or(b7.shiftRightUnsigned(64 - 4))).xor(b10);
    b12 = b12.add(b3); b3 = ((b3.shiftLeft(53)).or(b3.shiftRightUnsigned(64 - 53))).xor(b12);
    b14 = b14.add(b5); b5 = ((b5.shiftLeft(42)).or(b5.shiftRightUnsigned(64 - 42))).xor(b14);
    b8 = b8.add(b1); b1 = ((b1.shiftLeft(41)).or(b1.shiftRightUnsigned(64 - 41))).xor(b8);
    b0 = b0.add(b7); b7 = ((b7.shiftLeft(31)).or(b7.shiftRightUnsigned(64 - 31))).xor(b0);
    b2 = b2.add(b5); b5 = ((b5.shiftLeft(44)).or(b5.shiftRightUnsigned(64 - 44))).xor(b2);
    b4 = b4.add(b3); b3 = ((b3.shiftLeft(47)).or(b3.shiftRightUnsigned(64 - 47))).xor(b4);
    b6 = b6.add(b1); b1 = ((b1.shiftLeft(46)).or(b1.shiftRightUnsigned(64 - 46))).xor(b6);
    b12 = b12.add(b15); b15 = ((b15.shiftLeft(19)).or(b15.shiftRightUnsigned(64 - 19))).xor(b12);
    b14 = b14.add(b13); b13 = ((b13.shiftLeft(42)).or(b13.shiftRightUnsigned(64 - 42))).xor(b14);
    b8 = b8.add(b11); b11 = ((b11.shiftLeft(44)).or(b11.shiftRightUnsigned(64 - 44))).xor(b8);
    b10 = b10.add(b9); b9 = ((b9.shiftLeft(25)).or(b9.shiftRightUnsigned(64 - 25))).xor(b10);
    b0 = b0.add(b15); b15 = ((b15.shiftLeft(9)).or(b15.shiftRightUnsigned(64 - 9))).xor(b0);
    b2 = b2.add(b11); b11 = ((b11.shiftLeft(48)).or(b11.shiftRightUnsigned(64 - 48))).xor(b2);
    b6 = b6.add(b13); b13 = ((b13.shiftLeft(35)).or(b13.shiftRightUnsigned(64 - 35))).xor(b6);
    b4 = b4.add(b9); b9 = ((b9.shiftLeft(52)).or(b9.shiftRightUnsigned(64 - 52))).xor(b4);
    b14 = b14.add(b1); b1 = ((b1.shiftLeft(23)).or(b1.shiftRightUnsigned(64 - 23))).xor(b14);
    b8 = b8.add(b5); b5 = ((b5.shiftLeft(31)).or(b5.shiftRightUnsigned(64 - 31))).xor(b8);
    b10 = b10.add(b3); b3 = ((b3.shiftLeft(37)).or(b3.shiftRightUnsigned(64 - 37))).xor(b10);
    b12 = b12.add(b7); b7 = ((b7.shiftLeft(20)).or(b7.shiftRightUnsigned(64 - 20))).xor(b12);
    b1 = b1.add(k0); b0 = b0.add(b1).add(k16); b1 = ((b1.shiftLeft(24)).or(b1.shiftRightUnsigned(64 - 24))).xor(b0);
    b3 = b3.add(k2); b2 = b2.add(b3).add(k1); b3 = ((b3.shiftLeft(13)).or(b3.shiftRightUnsigned(64 - 13))).xor(b2);
    b5 = b5.add(k4); b4 = b4.add(b5).add(k3); b5 = ((b5.shiftLeft(8)).or(b5.shiftRightUnsigned(64 - 8))).xor(b4);
    b7 = b7.add(k6); b6 = b6.add(b7).add(k5); b7 = ((b7.shiftLeft(47)).or(b7.shiftRightUnsigned(64 - 47))).xor(b6);
    b9 = b9.add(k8); b8 = b8.add(b9).add(k7); b9 = ((b9.shiftLeft(8)).or(b9.shiftRightUnsigned(64 - 8))).xor(b8);
    b11 = b11.add(k10); b10 = b10.add(b11).add(k9); b11 = ((b11.shiftLeft(17)).or(b11.shiftRightUnsigned(64 - 17))).xor(b10);
    b13 = b13.add(k12).add(t1); b12 = b12.add(b13).add(k11); b13 = ((b13.shiftLeft(22)).or(b13.shiftRightUnsigned(64 - 22))).xor(b12);
    b15 = b15.add(k14).add(new int64(16, 0)); b14 = b14.add(b15).add(k13).add(t2); b15 = ((b15.shiftLeft(37)).or(b15.shiftRightUnsigned(64 - 37))).xor(b14);
    b0 = b0.add(b9); b9 = ((b9.shiftLeft(38)).or(b9.shiftRightUnsigned(64 - 38))).xor(b0);
    b2 = b2.add(b13); b13 = ((b13.shiftLeft(19)).or(b13.shiftRightUnsigned(64 - 19))).xor(b2);
    b6 = b6.add(b11); b11 = ((b11.shiftLeft(10)).or(b11.shiftRightUnsigned(64 - 10))).xor(b6);
    b4 = b4.add(b15); b15 = ((b15.shiftLeft(55)).or(b15.shiftRightUnsigned(64 - 55))).xor(b4);
    b10 = b10.add(b7); b7 = ((b7.shiftLeft(49)).or(b7.shiftRightUnsigned(64 - 49))).xor(b10);
    b12 = b12.add(b3); b3 = ((b3.shiftLeft(18)).or(b3.shiftRightUnsigned(64 - 18))).xor(b12);
    b14 = b14.add(b5); b5 = ((b5.shiftLeft(23)).or(b5.shiftRightUnsigned(64 - 23))).xor(b14);
    b8 = b8.add(b1); b1 = ((b1.shiftLeft(52)).or(b1.shiftRightUnsigned(64 - 52))).xor(b8);
    b0 = b0.add(b7); b7 = ((b7.shiftLeft(33)).or(b7.shiftRightUnsigned(64 - 33))).xor(b0);
    b2 = b2.add(b5); b5 = ((b5.shiftLeft(4)).or(b5.shiftRightUnsigned(64 - 4))).xor(b2);
    b4 = b4.add(b3); b3 = ((b3.shiftLeft(51)).or(b3.shiftRightUnsigned(64 - 51))).xor(b4);
    b6 = b6.add(b1); b1 = ((b1.shiftLeft(13)).or(b1.shiftRightUnsigned(64 - 13))).xor(b6);
    b12 = b12.add(b15); b15 = ((b15.shiftLeft(34)).or(b15.shiftRightUnsigned(64 - 34))).xor(b12);
    b14 = b14.add(b13); b13 = ((b13.shiftLeft(41)).or(b13.shiftRightUnsigned(64 - 41))).xor(b14);
    b8 = b8.add(b11); b11 = ((b11.shiftLeft(59)).or(b11.shiftRightUnsigned(64 - 59))).xor(b8);
    b10 = b10.add(b9); b9 = ((b9.shiftLeft(17)).or(b9.shiftRightUnsigned(64 - 17))).xor(b10);
    b0 = b0.add(b15); b15 = ((b15.shiftLeft(5)).or(b15.shiftRightUnsigned(64 - 5))).xor(b0);
    b2 = b2.add(b11); b11 = ((b11.shiftLeft(20)).or(b11.shiftRightUnsigned(64 - 20))).xor(b2);
    b6 = b6.add(b13); b13 = ((b13.shiftLeft(48)).or(b13.shiftRightUnsigned(64 - 48))).xor(b6);
    b4 = b4.add(b9); b9 = ((b9.shiftLeft(41)).or(b9.shiftRightUnsigned(64 - 41))).xor(b4);
    b14 = b14.add(b1); b1 = ((b1.shiftLeft(47)).or(b1.shiftRightUnsigned(64 - 47))).xor(b14);
    b8 = b8.add(b5); b5 = ((b5.shiftLeft(28)).or(b5.shiftRightUnsigned(64 - 28))).xor(b8);
    b10 = b10.add(b3); b3 = ((b3.shiftLeft(16)).or(b3.shiftRightUnsigned(64 - 16))).xor(b10);
    b12 = b12.add(b7); b7 = ((b7.shiftLeft(25)).or(b7.shiftRightUnsigned(64 - 25))).xor(b12);
    b1 = b1.add(k1); b0 = b0.add(b1).add(k0); b1 = ((b1.shiftLeft(41)).or(b1.shiftRightUnsigned(64 - 41))).xor(b0);
    b3 = b3.add(k3); b2 = b2.add(b3).add(k2); b3 = ((b3.shiftLeft(9)).or(b3.shiftRightUnsigned(64 - 9))).xor(b2);
    b5 = b5.add(k5); b4 = b4.add(b5).add(k4); b5 = ((b5.shiftLeft(37)).or(b5.shiftRightUnsigned(64 - 37))).xor(b4);
    b7 = b7.add(k7); b6 = b6.add(b7).add(k6); b7 = ((b7.shiftLeft(31)).or(b7.shiftRightUnsigned(64 - 31))).xor(b6);
    b9 = b9.add(k9); b8 = b8.add(b9).add(k8); b9 = ((b9.shiftLeft(12)).or(b9.shiftRightUnsigned(64 - 12))).xor(b8);
    b11 = b11.add(k11); b10 = b10.add(b11).add(k10); b11 = ((b11.shiftLeft(47)).or(b11.shiftRightUnsigned(64 - 47))).xor(b10);
    b13 = b13.add(k13).add(t2); b12 = b12.add(b13).add(k12); b13 = ((b13.shiftLeft(44)).or(b13.shiftRightUnsigned(64 - 44))).xor(b12);
    b15 = b15.add(k15).add(new int64(17, 0)); b14 = b14.add(b15).add(k14).add(t0); b15 = ((b15.shiftLeft(30)).or(b15.shiftRightUnsigned(64 - 30))).xor(b14);
    b0 = b0.add(b9); b9 = ((b9.shiftLeft(16)).or(b9.shiftRightUnsigned(64 - 16))).xor(b0);
    b2 = b2.add(b13); b13 = ((b13.shiftLeft(34)).or(b13.shiftRightUnsigned(64 - 34))).xor(b2);
    b6 = b6.add(b11); b11 = ((b11.shiftLeft(56)).or(b11.shiftRightUnsigned(64 - 56))).xor(b6);
    b4 = b4.add(b15); b15 = ((b15.shiftLeft(51)).or(b15.shiftRightUnsigned(64 - 51))).xor(b4);
    b10 = b10.add(b7); b7 = ((b7.shiftLeft(4)).or(b7.shiftRightUnsigned(64 - 4))).xor(b10);
    b12 = b12.add(b3); b3 = ((b3.shiftLeft(53)).or(b3.shiftRightUnsigned(64 - 53))).xor(b12);
    b14 = b14.add(b5); b5 = ((b5.shiftLeft(42)).or(b5.shiftRightUnsigned(64 - 42))).xor(b14);
    b8 = b8.add(b1); b1 = ((b1.shiftLeft(41)).or(b1.shiftRightUnsigned(64 - 41))).xor(b8);
    b0 = b0.add(b7); b7 = ((b7.shiftLeft(31)).or(b7.shiftRightUnsigned(64 - 31))).xor(b0);
    b2 = b2.add(b5); b5 = ((b5.shiftLeft(44)).or(b5.shiftRightUnsigned(64 - 44))).xor(b2);
    b4 = b4.add(b3); b3 = ((b3.shiftLeft(47)).or(b3.shiftRightUnsigned(64 - 47))).xor(b4);
    b6 = b6.add(b1); b1 = ((b1.shiftLeft(46)).or(b1.shiftRightUnsigned(64 - 46))).xor(b6);
    b12 = b12.add(b15); b15 = ((b15.shiftLeft(19)).or(b15.shiftRightUnsigned(64 - 19))).xor(b12);
    b14 = b14.add(b13); b13 = ((b13.shiftLeft(42)).or(b13.shiftRightUnsigned(64 - 42))).xor(b14);
    b8 = b8.add(b11); b11 = ((b11.shiftLeft(44)).or(b11.shiftRightUnsigned(64 - 44))).xor(b8);
    b10 = b10.add(b9); b9 = ((b9.shiftLeft(25)).or(b9.shiftRightUnsigned(64 - 25))).xor(b10);
    b0 = b0.add(b15); b15 = ((b15.shiftLeft(9)).or(b15.shiftRightUnsigned(64 - 9))).xor(b0);
    b2 = b2.add(b11); b11 = ((b11.shiftLeft(48)).or(b11.shiftRightUnsigned(64 - 48))).xor(b2);
    b6 = b6.add(b13); b13 = ((b13.shiftLeft(35)).or(b13.shiftRightUnsigned(64 - 35))).xor(b6);
    b4 = b4.add(b9); b9 = ((b9.shiftLeft(52)).or(b9.shiftRightUnsigned(64 - 52))).xor(b4);
    b14 = b14.add(b1); b1 = ((b1.shiftLeft(23)).or(b1.shiftRightUnsigned(64 - 23))).xor(b14);
    b8 = b8.add(b5); b5 = ((b5.shiftLeft(31)).or(b5.shiftRightUnsigned(64 - 31))).xor(b8);
    b10 = b10.add(b3); b3 = ((b3.shiftLeft(37)).or(b3.shiftRightUnsigned(64 - 37))).xor(b10);
    b12 = b12.add(b7); b7 = ((b7.shiftLeft(20)).or(b7.shiftRightUnsigned(64 - 20))).xor(b12);
    b1 = b1.add(k2); b0 = b0.add(b1).add(k1); b1 = ((b1.shiftLeft(24)).or(b1.shiftRightUnsigned(64 - 24))).xor(b0);
    b3 = b3.add(k4); b2 = b2.add(b3).add(k3); b3 = ((b3.shiftLeft(13)).or(b3.shiftRightUnsigned(64 - 13))).xor(b2);
    b5 = b5.add(k6); b4 = b4.add(b5).add(k5); b5 = ((b5.shiftLeft(8)).or(b5.shiftRightUnsigned(64 - 8))).xor(b4);
    b7 = b7.add(k8); b6 = b6.add(b7).add(k7); b7 = ((b7.shiftLeft(47)).or(b7.shiftRightUnsigned(64 - 47))).xor(b6);
    b9 = b9.add(k10); b8 = b8.add(b9).add(k9); b9 = ((b9.shiftLeft(8)).or(b9.shiftRightUnsigned(64 - 8))).xor(b8);
    b11 = b11.add(k12); b10 = b10.add(b11).add(k11); b11 = ((b11.shiftLeft(17)).or(b11.shiftRightUnsigned(64 - 17))).xor(b10);
    b13 = b13.add(k14).add(t0); b12 = b12.add(b13).add(k13); b13 = ((b13.shiftLeft(22)).or(b13.shiftRightUnsigned(64 - 22))).xor(b12);
    b15 = b15.add(k16).add(new int64(18, 0)); b14 = b14.add(b15).add(k15).add(t1); b15 = ((b15.shiftLeft(37)).or(b15.shiftRightUnsigned(64 - 37))).xor(b14);
    b0 = b0.add(b9); b9 = ((b9.shiftLeft(38)).or(b9.shiftRightUnsigned(64 - 38))).xor(b0);
    b2 = b2.add(b13); b13 = ((b13.shiftLeft(19)).or(b13.shiftRightUnsigned(64 - 19))).xor(b2);
    b6 = b6.add(b11); b11 = ((b11.shiftLeft(10)).or(b11.shiftRightUnsigned(64 - 10))).xor(b6);
    b4 = b4.add(b15); b15 = ((b15.shiftLeft(55)).or(b15.shiftRightUnsigned(64 - 55))).xor(b4);
    b10 = b10.add(b7); b7 = ((b7.shiftLeft(49)).or(b7.shiftRightUnsigned(64 - 49))).xor(b10);
    b12 = b12.add(b3); b3 = ((b3.shiftLeft(18)).or(b3.shiftRightUnsigned(64 - 18))).xor(b12);
    b14 = b14.add(b5); b5 = ((b5.shiftLeft(23)).or(b5.shiftRightUnsigned(64 - 23))).xor(b14);
    b8 = b8.add(b1); b1 = ((b1.shiftLeft(52)).or(b1.shiftRightUnsigned(64 - 52))).xor(b8);
    b0 = b0.add(b7); b7 = ((b7.shiftLeft(33)).or(b7.shiftRightUnsigned(64 - 33))).xor(b0);
    b2 = b2.add(b5); b5 = ((b5.shiftLeft(4)).or(b5.shiftRightUnsigned(64 - 4))).xor(b2);
    b4 = b4.add(b3); b3 = ((b3.shiftLeft(51)).or(b3.shiftRightUnsigned(64 - 51))).xor(b4);
    b6 = b6.add(b1); b1 = ((b1.shiftLeft(13)).or(b1.shiftRightUnsigned(64 - 13))).xor(b6);
    b12 = b12.add(b15); b15 = ((b15.shiftLeft(34)).or(b15.shiftRightUnsigned(64 - 34))).xor(b12);
    b14 = b14.add(b13); b13 = ((b13.shiftLeft(41)).or(b13.shiftRightUnsigned(64 - 41))).xor(b14);
    b8 = b8.add(b11); b11 = ((b11.shiftLeft(59)).or(b11.shiftRightUnsigned(64 - 59))).xor(b8);
    b10 = b10.add(b9); b9 = ((b9.shiftLeft(17)).or(b9.shiftRightUnsigned(64 - 17))).xor(b10);
    b0 = b0.add(b15); b15 = ((b15.shiftLeft(5)).or(b15.shiftRightUnsigned(64 - 5))).xor(b0);
    b2 = b2.add(b11); b11 = ((b11.shiftLeft(20)).or(b11.shiftRightUnsigned(64 - 20))).xor(b2);
    b6 = b6.add(b13); b13 = ((b13.shiftLeft(48)).or(b13.shiftRightUnsigned(64 - 48))).xor(b6);
    b4 = b4.add(b9); b9 = ((b9.shiftLeft(41)).or(b9.shiftRightUnsigned(64 - 41))).xor(b4);
    b14 = b14.add(b1); b1 = ((b1.shiftLeft(47)).or(b1.shiftRightUnsigned(64 - 47))).xor(b14);
    b8 = b8.add(b5); b5 = ((b5.shiftLeft(28)).or(b5.shiftRightUnsigned(64 - 28))).xor(b8);
    b10 = b10.add(b3); b3 = ((b3.shiftLeft(16)).or(b3.shiftRightUnsigned(64 - 16))).xor(b10);
    b12 = b12.add(b7); b7 = ((b7.shiftLeft(25)).or(b7.shiftRightUnsigned(64 - 25))).xor(b12);
    b1 = b1.add(k3); b0 = b0.add(b1).add(k2); b1 = ((b1.shiftLeft(41)).or(b1.shiftRightUnsigned(64 - 41))).xor(b0);
    b3 = b3.add(k5); b2 = b2.add(b3).add(k4); b3 = ((b3.shiftLeft(9)).or(b3.shiftRightUnsigned(64 - 9))).xor(b2);
    b5 = b5.add(k7); b4 = b4.add(b5).add(k6); b5 = ((b5.shiftLeft(37)).or(b5.shiftRightUnsigned(64 - 37))).xor(b4);
    b7 = b7.add(k9); b6 = b6.add(b7).add(k8); b7 = ((b7.shiftLeft(31)).or(b7.shiftRightUnsigned(64 - 31))).xor(b6);
    b9 = b9.add(k11); b8 = b8.add(b9).add(k10); b9 = ((b9.shiftLeft(12)).or(b9.shiftRightUnsigned(64 - 12))).xor(b8);
    b11 = b11.add(k13); b10 = b10.add(b11).add(k12); b11 = ((b11.shiftLeft(47)).or(b11.shiftRightUnsigned(64 - 47))).xor(b10);
    b13 = b13.add(k15).add(t1); b12 = b12.add(b13).add(k14); b13 = ((b13.shiftLeft(44)).or(b13.shiftRightUnsigned(64 - 44))).xor(b12);
    b15 = b15.add(k0).add(new int64(19, 0)); b14 = b14.add(b15).add(k16).add(t2); b15 = ((b15.shiftLeft(30)).or(b15.shiftRightUnsigned(64 - 30))).xor(b14);
    b0 = b0.add(b9); b9 = ((b9.shiftLeft(16)).or(b9.shiftRightUnsigned(64 - 16))).xor(b0);
    b2 = b2.add(b13); b13 = ((b13.shiftLeft(34)).or(b13.shiftRightUnsigned(64 - 34))).xor(b2);
    b6 = b6.add(b11); b11 = ((b11.shiftLeft(56)).or(b11.shiftRightUnsigned(64 - 56))).xor(b6);
    b4 = b4.add(b15); b15 = ((b15.shiftLeft(51)).or(b15.shiftRightUnsigned(64 - 51))).xor(b4);
    b10 = b10.add(b7); b7 = ((b7.shiftLeft(4)).or(b7.shiftRightUnsigned(64 - 4))).xor(b10);
    b12 = b12.add(b3); b3 = ((b3.shiftLeft(53)).or(b3.shiftRightUnsigned(64 - 53))).xor(b12);
    b14 = b14.add(b5); b5 = ((b5.shiftLeft(42)).or(b5.shiftRightUnsigned(64 - 42))).xor(b14);
    b8 = b8.add(b1); b1 = ((b1.shiftLeft(41)).or(b1.shiftRightUnsigned(64 - 41))).xor(b8);
    b0 = b0.add(b7); b7 = ((b7.shiftLeft(31)).or(b7.shiftRightUnsigned(64 - 31))).xor(b0);
    b2 = b2.add(b5); b5 = ((b5.shiftLeft(44)).or(b5.shiftRightUnsigned(64 - 44))).xor(b2);
    b4 = b4.add(b3); b3 = ((b3.shiftLeft(47)).or(b3.shiftRightUnsigned(64 - 47))).xor(b4);
    b6 = b6.add(b1); b1 = ((b1.shiftLeft(46)).or(b1.shiftRightUnsigned(64 - 46))).xor(b6);
    b12 = b12.add(b15); b15 = ((b15.shiftLeft(19)).or(b15.shiftRightUnsigned(64 - 19))).xor(b12);
    b14 = b14.add(b13); b13 = ((b13.shiftLeft(42)).or(b13.shiftRightUnsigned(64 - 42))).xor(b14);
    b8 = b8.add(b11); b11 = ((b11.shiftLeft(44)).or(b11.shiftRightUnsigned(64 - 44))).xor(b8);
    b10 = b10.add(b9); b9 = ((b9.shiftLeft(25)).or(b9.shiftRightUnsigned(64 - 25))).xor(b10);
    b0 = b0.add(b15); b15 = ((b15.shiftLeft(9)).or(b15.shiftRightUnsigned(64 - 9))).xor(b0);
    b2 = b2.add(b11); b11 = ((b11.shiftLeft(48)).or(b11.shiftRightUnsigned(64 - 48))).xor(b2);
    b6 = b6.add(b13); b13 = ((b13.shiftLeft(35)).or(b13.shiftRightUnsigned(64 - 35))).xor(b6);
    b4 = b4.add(b9); b9 = ((b9.shiftLeft(52)).or(b9.shiftRightUnsigned(64 - 52))).xor(b4);
    b14 = b14.add(b1); b1 = ((b1.shiftLeft(23)).or(b1.shiftRightUnsigned(64 - 23))).xor(b14);
    b8 = b8.add(b5); b5 = ((b5.shiftLeft(31)).or(b5.shiftRightUnsigned(64 - 31))).xor(b8);
    b10 = b10.add(b3); b3 = ((b3.shiftLeft(37)).or(b3.shiftRightUnsigned(64 - 37))).xor(b10);
    b12 = b12.add(b7); b7 = ((b7.shiftLeft(20)).or(b7.shiftRightUnsigned(64 - 20))).xor(b12);

    output[0] = b0.add(k3);
    output[1] = b1.add(k4);
    output[2] = b2.add(k5);
    output[3] = b3.add(k6);
    output[4] = b4.add(k7);
    output[5] = b5.add(k8);
    output[6] = b6.add(k9);
    output[7] = b7.add(k10);
    output[8] = b8.add(k11);
    output[9] = b9.add(k12);
    output[10] = b10.add(k13);
    output[11] = b11.add(k14);
    output[12] = b12.add(k15);
    output[13] = b13.add(k16).add(t2);
    output[14] = b14.add(k0).add(t0);
    output[15] = b15.add(k1).add(new int64(20, 0));

    return output;
}



function threefishDecrypt1024(key, tweak, input) {
    var b0 = input[0], b1 = input[1], b2 = input[2], b3 = input[3], b4 = input[4], b5 = input[5], b6 = input[6], b7 = input[7];
    var b8 = input[8], b9 = input[9], b10 = input[10], b11 = input[11], b12 = input[12], b13 = input[13], b14 = input[14], b15 = input[15];
    var k0 = key[0], k1 = key[1], k2 = key[2], k3 = key[3], k4 = key[4], k5 = key[5], k6 = key[6], k7 = key[7];
    var k8 = key[8], k9 = key[9], k10 = key[10], k11 = key[11], k12 = key[12], k13 = key[13], k14 = key[14], k15 = key[15], k16 = keyParity(key);
    var t0 = tweak[0], t1 = tweak[1], t2 = t0.xor(t1);
    
    var tmp;
    var output = [];
    

    b0 = b0.subtract(k3);
    b1 = b1.subtract(k4);
    b2 = b2.subtract(k5);
    b3 = b3.subtract(k6);
    b4 = b4.subtract(k7);
    b5 = b5.subtract(k8);
    b6 = b6.subtract(k9);
    b7 = b7.subtract(k10);
    b8 = b8.subtract(k11);
    b9 = b9.subtract(k12);
    b10 = b10.subtract(k13);
    b11 = b11.subtract(k14);
    b12 = b12.subtract(k15);
    b13 = b13.subtract(k16.add(t2));
    b14 = b14.subtract(k0.add(t0));
    b15 = b15.subtract(k1.add(new int64(20, 0)));
    tmp = b7.xor(b12); b7 = (tmp.shiftRightUnsigned(20)).or(tmp.shiftLeft(64 - 20)); b12 = b12.subtract(b7);
    tmp = b3.xor(b10); b3 = (tmp.shiftRightUnsigned(37)).or(tmp.shiftLeft(64 - 37)); b10 = b10.subtract(b3);
    tmp = b5.xor(b8); b5 = (tmp.shiftRightUnsigned(31)).or(tmp.shiftLeft(64 - 31)); b8 = b8.subtract(b5);
    tmp = b1.xor(b14); b1 = (tmp.shiftRightUnsigned(23)).or(tmp.shiftLeft(64 - 23)); b14 = b14.subtract(b1);
    tmp = b9.xor(b4); b9 = (tmp.shiftRightUnsigned(52)).or(tmp.shiftLeft(64 - 52)); b4 = b4.subtract(b9);
    tmp = b13.xor(b6); b13 = (tmp.shiftRightUnsigned(35)).or(tmp.shiftLeft(64 - 35)); b6 = b6.subtract(b13);
    tmp = b11.xor(b2); b11 = (tmp.shiftRightUnsigned(48)).or(tmp.shiftLeft(64 - 48)); b2 = b2.subtract(b11);
    tmp = b15.xor(b0); b15 = (tmp.shiftRightUnsigned(9)).or(tmp.shiftLeft(64 - 9)); b0 = b0.subtract(b15);
    tmp = b9.xor(b10); b9 = (tmp.shiftRightUnsigned(25)).or(tmp.shiftLeft(64 - 25)); b10 = b10.subtract(b9);
    tmp = b11.xor(b8); b11 = (tmp.shiftRightUnsigned(44)).or(tmp.shiftLeft(64 - 44)); b8 = b8.subtract(b11);
    tmp = b13.xor(b14); b13 = (tmp.shiftRightUnsigned(42)).or(tmp.shiftLeft(64 - 42)); b14 = b14.subtract(b13);
    tmp = b15.xor(b12); b15 = (tmp.shiftRightUnsigned(19)).or(tmp.shiftLeft(64 - 19)); b12 = b12.subtract(b15);
    tmp = b1.xor(b6); b1 = (tmp.shiftRightUnsigned(46)).or(tmp.shiftLeft(64 - 46)); b6 = b6.subtract(b1);
    tmp = b3.xor(b4); b3 = (tmp.shiftRightUnsigned(47)).or(tmp.shiftLeft(64 - 47)); b4 = b4.subtract(b3);
    tmp = b5.xor(b2); b5 = (tmp.shiftRightUnsigned(44)).or(tmp.shiftLeft(64 - 44)); b2 = b2.subtract(b5);
    tmp = b7.xor(b0); b7 = (tmp.shiftRightUnsigned(31)).or(tmp.shiftLeft(64 - 31)); b0 = b0.subtract(b7);
    tmp = b1.xor(b8); b1 = (tmp.shiftRightUnsigned(41)).or(tmp.shiftLeft(64 - 41)); b8 = b8.subtract(b1);
    tmp = b5.xor(b14); b5 = (tmp.shiftRightUnsigned(42)).or(tmp.shiftLeft(64 - 42)); b14 = b14.subtract(b5);
    tmp = b3.xor(b12); b3 = (tmp.shiftRightUnsigned(53)).or(tmp.shiftLeft(64 - 53)); b12 = b12.subtract(b3);
    tmp = b7.xor(b10); b7 = (tmp.shiftRightUnsigned(4)).or(tmp.shiftLeft(64 - 4)); b10 = b10.subtract(b7);
    tmp = b15.xor(b4); b15 = (tmp.shiftRightUnsigned(51)).or(tmp.shiftLeft(64 - 51)); b4 = b4.subtract(b15);
    tmp = b11.xor(b6); b11 = (tmp.shiftRightUnsigned(56)).or(tmp.shiftLeft(64 - 56)); b6 = b6.subtract(b11);
    tmp = b13.xor(b2); b13 = (tmp.shiftRightUnsigned(34)).or(tmp.shiftLeft(64 - 34)); b2 = b2.subtract(b13);
    tmp = b9.xor(b0); b9 = (tmp.shiftRightUnsigned(16)).or(tmp.shiftLeft(64 - 16)); b0 = b0.subtract(b9);
    tmp = b15.xor(b14); b15 = (tmp.shiftRightUnsigned(30)).or(tmp.shiftLeft(64 - 30)); b14 = b14.subtract(b15.add(k16).add(t2)); b15 = b15.subtract(k0.add(new int64(19, 0)));
    tmp = b13.xor(b12); b13 = (tmp.shiftRightUnsigned(44)).or(tmp.shiftLeft(64 - 44)); b12 = b12.subtract(b13.add(k14)); b13 = b13.subtract(k15.add(t1));
    tmp = b11.xor(b10); b11 = (tmp.shiftRightUnsigned(47)).or(tmp.shiftLeft(64 - 47)); b10 = b10.subtract(b11.add(k12)); b11 = b11.subtract(k13);
    tmp = b9.xor(b8); b9 = (tmp.shiftRightUnsigned(12)).or(tmp.shiftLeft(64 - 12)); b8 = b8.subtract(b9.add(k10)); b9 = b9.subtract(k11);
    tmp = b7.xor(b6); b7 = (tmp.shiftRightUnsigned(31)).or(tmp.shiftLeft(64 - 31)); b6 = b6.subtract(b7.add(k8)); b7 = b7.subtract(k9);
    tmp = b5.xor(b4); b5 = (tmp.shiftRightUnsigned(37)).or(tmp.shiftLeft(64 - 37)); b4 = b4.subtract(b5.add(k6)); b5 = b5.subtract(k7);
    tmp = b3.xor(b2); b3 = (tmp.shiftRightUnsigned(9)).or(tmp.shiftLeft(64 - 9)); b2 = b2.subtract(b3.add(k4)); b3 = b3.subtract(k5);
    tmp = b1.xor(b0); b1 = (tmp.shiftRightUnsigned(41)).or(tmp.shiftLeft(64 - 41)); b0 = b0.subtract(b1.add(k2)); b1 = b1.subtract(k3);
    tmp = b7.xor(b12); b7 = (tmp.shiftRightUnsigned(25)).or(tmp.shiftLeft(64 - 25)); b12 = b12.subtract(b7);
    tmp = b3.xor(b10); b3 = (tmp.shiftRightUnsigned(16)).or(tmp.shiftLeft(64 - 16)); b10 = b10.subtract(b3);
    tmp = b5.xor(b8); b5 = (tmp.shiftRightUnsigned(28)).or(tmp.shiftLeft(64 - 28)); b8 = b8.subtract(b5);
    tmp = b1.xor(b14); b1 = (tmp.shiftRightUnsigned(47)).or(tmp.shiftLeft(64 - 47)); b14 = b14.subtract(b1);
    tmp = b9.xor(b4); b9 = (tmp.shiftRightUnsigned(41)).or(tmp.shiftLeft(64 - 41)); b4 = b4.subtract(b9);
    tmp = b13.xor(b6); b13 = (tmp.shiftRightUnsigned(48)).or(tmp.shiftLeft(64 - 48)); b6 = b6.subtract(b13);
    tmp = b11.xor(b2); b11 = (tmp.shiftRightUnsigned(20)).or(tmp.shiftLeft(64 - 20)); b2 = b2.subtract(b11);
    tmp = b15.xor(b0); b15 = (tmp.shiftRightUnsigned(5)).or(tmp.shiftLeft(64 - 5)); b0 = b0.subtract(b15);
    tmp = b9.xor(b10); b9 = (tmp.shiftRightUnsigned(17)).or(tmp.shiftLeft(64 - 17)); b10 = b10.subtract(b9);
    tmp = b11.xor(b8); b11 = (tmp.shiftRightUnsigned(59)).or(tmp.shiftLeft(64 - 59)); b8 = b8.subtract(b11);
    tmp = b13.xor(b14); b13 = (tmp.shiftRightUnsigned(41)).or(tmp.shiftLeft(64 - 41)); b14 = b14.subtract(b13);
    tmp = b15.xor(b12); b15 = (tmp.shiftRightUnsigned(34)).or(tmp.shiftLeft(64 - 34)); b12 = b12.subtract(b15);
    tmp = b1.xor(b6); b1 = (tmp.shiftRightUnsigned(13)).or(tmp.shiftLeft(64 - 13)); b6 = b6.subtract(b1);
    tmp = b3.xor(b4); b3 = (tmp.shiftRightUnsigned(51)).or(tmp.shiftLeft(64 - 51)); b4 = b4.subtract(b3);
    tmp = b5.xor(b2); b5 = (tmp.shiftRightUnsigned(4)).or(tmp.shiftLeft(64 - 4)); b2 = b2.subtract(b5);
    tmp = b7.xor(b0); b7 = (tmp.shiftRightUnsigned(33)).or(tmp.shiftLeft(64 - 33)); b0 = b0.subtract(b7);
    tmp = b1.xor(b8); b1 = (tmp.shiftRightUnsigned(52)).or(tmp.shiftLeft(64 - 52)); b8 = b8.subtract(b1);
    tmp = b5.xor(b14); b5 = (tmp.shiftRightUnsigned(23)).or(tmp.shiftLeft(64 - 23)); b14 = b14.subtract(b5);
    tmp = b3.xor(b12); b3 = (tmp.shiftRightUnsigned(18)).or(tmp.shiftLeft(64 - 18)); b12 = b12.subtract(b3);
    tmp = b7.xor(b10); b7 = (tmp.shiftRightUnsigned(49)).or(tmp.shiftLeft(64 - 49)); b10 = b10.subtract(b7);
    tmp = b15.xor(b4); b15 = (tmp.shiftRightUnsigned(55)).or(tmp.shiftLeft(64 - 55)); b4 = b4.subtract(b15);
    tmp = b11.xor(b6); b11 = (tmp.shiftRightUnsigned(10)).or(tmp.shiftLeft(64 - 10)); b6 = b6.subtract(b11);
    tmp = b13.xor(b2); b13 = (tmp.shiftRightUnsigned(19)).or(tmp.shiftLeft(64 - 19)); b2 = b2.subtract(b13);
    tmp = b9.xor(b0); b9 = (tmp.shiftRightUnsigned(38)).or(tmp.shiftLeft(64 - 38)); b0 = b0.subtract(b9);
    tmp = b15.xor(b14); b15 = (tmp.shiftRightUnsigned(37)).or(tmp.shiftLeft(64 - 37)); b14 = b14.subtract(b15.add(k15).add(t1)); b15 = b15.subtract(k16.add(new int64(18, 0)));
    tmp = b13.xor(b12); b13 = (tmp.shiftRightUnsigned(22)).or(tmp.shiftLeft(64 - 22)); b12 = b12.subtract(b13.add(k13)); b13 = b13.subtract(k14.add(t0));
    tmp = b11.xor(b10); b11 = (tmp.shiftRightUnsigned(17)).or(tmp.shiftLeft(64 - 17)); b10 = b10.subtract(b11.add(k11)); b11 = b11.subtract(k12);
    tmp = b9.xor(b8); b9 = (tmp.shiftRightUnsigned(8)).or(tmp.shiftLeft(64 - 8)); b8 = b8.subtract(b9.add(k9)); b9 = b9.subtract(k10);
    tmp = b7.xor(b6); b7 = (tmp.shiftRightUnsigned(47)).or(tmp.shiftLeft(64 - 47)); b6 = b6.subtract(b7.add(k7)); b7 = b7.subtract(k8);
    tmp = b5.xor(b4); b5 = (tmp.shiftRightUnsigned(8)).or(tmp.shiftLeft(64 - 8)); b4 = b4.subtract(b5.add(k5)); b5 = b5.subtract(k6);
    tmp = b3.xor(b2); b3 = (tmp.shiftRightUnsigned(13)).or(tmp.shiftLeft(64 - 13)); b2 = b2.subtract(b3.add(k3)); b3 = b3.subtract(k4);
    tmp = b1.xor(b0); b1 = (tmp.shiftRightUnsigned(24)).or(tmp.shiftLeft(64 - 24)); b0 = b0.subtract(b1.add(k1)); b1 = b1.subtract(k2);
    tmp = b7.xor(b12); b7 = (tmp.shiftRightUnsigned(20)).or(tmp.shiftLeft(64 - 20)); b12 = b12.subtract(b7);
    tmp = b3.xor(b10); b3 = (tmp.shiftRightUnsigned(37)).or(tmp.shiftLeft(64 - 37)); b10 = b10.subtract(b3);
    tmp = b5.xor(b8); b5 = (tmp.shiftRightUnsigned(31)).or(tmp.shiftLeft(64 - 31)); b8 = b8.subtract(b5);
    tmp = b1.xor(b14); b1 = (tmp.shiftRightUnsigned(23)).or(tmp.shiftLeft(64 - 23)); b14 = b14.subtract(b1);
    tmp = b9.xor(b4); b9 = (tmp.shiftRightUnsigned(52)).or(tmp.shiftLeft(64 - 52)); b4 = b4.subtract(b9);
    tmp = b13.xor(b6); b13 = (tmp.shiftRightUnsigned(35)).or(tmp.shiftLeft(64 - 35)); b6 = b6.subtract(b13);
    tmp = b11.xor(b2); b11 = (tmp.shiftRightUnsigned(48)).or(tmp.shiftLeft(64 - 48)); b2 = b2.subtract(b11);
    tmp = b15.xor(b0); b15 = (tmp.shiftRightUnsigned(9)).or(tmp.shiftLeft(64 - 9)); b0 = b0.subtract(b15);
    tmp = b9.xor(b10); b9 = (tmp.shiftRightUnsigned(25)).or(tmp.shiftLeft(64 - 25)); b10 = b10.subtract(b9);
    tmp = b11.xor(b8); b11 = (tmp.shiftRightUnsigned(44)).or(tmp.shiftLeft(64 - 44)); b8 = b8.subtract(b11);
    tmp = b13.xor(b14); b13 = (tmp.shiftRightUnsigned(42)).or(tmp.shiftLeft(64 - 42)); b14 = b14.subtract(b13);
    tmp = b15.xor(b12); b15 = (tmp.shiftRightUnsigned(19)).or(tmp.shiftLeft(64 - 19)); b12 = b12.subtract(b15);
    tmp = b1.xor(b6); b1 = (tmp.shiftRightUnsigned(46)).or(tmp.shiftLeft(64 - 46)); b6 = b6.subtract(b1);
    tmp = b3.xor(b4); b3 = (tmp.shiftRightUnsigned(47)).or(tmp.shiftLeft(64 - 47)); b4 = b4.subtract(b3);
    tmp = b5.xor(b2); b5 = (tmp.shiftRightUnsigned(44)).or(tmp.shiftLeft(64 - 44)); b2 = b2.subtract(b5);
    tmp = b7.xor(b0); b7 = (tmp.shiftRightUnsigned(31)).or(tmp.shiftLeft(64 - 31)); b0 = b0.subtract(b7);
    tmp = b1.xor(b8); b1 = (tmp.shiftRightUnsigned(41)).or(tmp.shiftLeft(64 - 41)); b8 = b8.subtract(b1);
    tmp = b5.xor(b14); b5 = (tmp.shiftRightUnsigned(42)).or(tmp.shiftLeft(64 - 42)); b14 = b14.subtract(b5);
    tmp = b3.xor(b12); b3 = (tmp.shiftRightUnsigned(53)).or(tmp.shiftLeft(64 - 53)); b12 = b12.subtract(b3);
    tmp = b7.xor(b10); b7 = (tmp.shiftRightUnsigned(4)).or(tmp.shiftLeft(64 - 4)); b10 = b10.subtract(b7);
    tmp = b15.xor(b4); b15 = (tmp.shiftRightUnsigned(51)).or(tmp.shiftLeft(64 - 51)); b4 = b4.subtract(b15);
    tmp = b11.xor(b6); b11 = (tmp.shiftRightUnsigned(56)).or(tmp.shiftLeft(64 - 56)); b6 = b6.subtract(b11);
    tmp = b13.xor(b2); b13 = (tmp.shiftRightUnsigned(34)).or(tmp.shiftLeft(64 - 34)); b2 = b2.subtract(b13);
    tmp = b9.xor(b0); b9 = (tmp.shiftRightUnsigned(16)).or(tmp.shiftLeft(64 - 16)); b0 = b0.subtract(b9);
    tmp = b15.xor(b14); b15 = (tmp.shiftRightUnsigned(30)).or(tmp.shiftLeft(64 - 30)); b14 = b14.subtract(b15.add(k14).add(t0)); b15 = b15.subtract(k15.add(new int64(17, 0)));
    tmp = b13.xor(b12); b13 = (tmp.shiftRightUnsigned(44)).or(tmp.shiftLeft(64 - 44)); b12 = b12.subtract(b13.add(k12)); b13 = b13.subtract(k13.add(t2));
    tmp = b11.xor(b10); b11 = (tmp.shiftRightUnsigned(47)).or(tmp.shiftLeft(64 - 47)); b10 = b10.subtract(b11.add(k10)); b11 = b11.subtract(k11);
    tmp = b9.xor(b8); b9 = (tmp.shiftRightUnsigned(12)).or(tmp.shiftLeft(64 - 12)); b8 = b8.subtract(b9.add(k8)); b9 = b9.subtract(k9);
    tmp = b7.xor(b6); b7 = (tmp.shiftRightUnsigned(31)).or(tmp.shiftLeft(64 - 31)); b6 = b6.subtract(b7.add(k6)); b7 = b7.subtract(k7);
    tmp = b5.xor(b4); b5 = (tmp.shiftRightUnsigned(37)).or(tmp.shiftLeft(64 - 37)); b4 = b4.subtract(b5.add(k4)); b5 = b5.subtract(k5);
    tmp = b3.xor(b2); b3 = (tmp.shiftRightUnsigned(9)).or(tmp.shiftLeft(64 - 9)); b2 = b2.subtract(b3.add(k2)); b3 = b3.subtract(k3);
    tmp = b1.xor(b0); b1 = (tmp.shiftRightUnsigned(41)).or(tmp.shiftLeft(64 - 41)); b0 = b0.subtract(b1.add(k0)); b1 = b1.subtract(k1);
    tmp = b7.xor(b12); b7 = (tmp.shiftRightUnsigned(25)).or(tmp.shiftLeft(64 - 25)); b12 = b12.subtract(b7);
    tmp = b3.xor(b10); b3 = (tmp.shiftRightUnsigned(16)).or(tmp.shiftLeft(64 - 16)); b10 = b10.subtract(b3);
    tmp = b5.xor(b8); b5 = (tmp.shiftRightUnsigned(28)).or(tmp.shiftLeft(64 - 28)); b8 = b8.subtract(b5);
    tmp = b1.xor(b14); b1 = (tmp.shiftRightUnsigned(47)).or(tmp.shiftLeft(64 - 47)); b14 = b14.subtract(b1);
    tmp = b9.xor(b4); b9 = (tmp.shiftRightUnsigned(41)).or(tmp.shiftLeft(64 - 41)); b4 = b4.subtract(b9);
    tmp = b13.xor(b6); b13 = (tmp.shiftRightUnsigned(48)).or(tmp.shiftLeft(64 - 48)); b6 = b6.subtract(b13);
    tmp = b11.xor(b2); b11 = (tmp.shiftRightUnsigned(20)).or(tmp.shiftLeft(64 - 20)); b2 = b2.subtract(b11);
    tmp = b15.xor(b0); b15 = (tmp.shiftRightUnsigned(5)).or(tmp.shiftLeft(64 - 5)); b0 = b0.subtract(b15);
    tmp = b9.xor(b10); b9 = (tmp.shiftRightUnsigned(17)).or(tmp.shiftLeft(64 - 17)); b10 = b10.subtract(b9);
    tmp = b11.xor(b8); b11 = (tmp.shiftRightUnsigned(59)).or(tmp.shiftLeft(64 - 59)); b8 = b8.subtract(b11);
    tmp = b13.xor(b14); b13 = (tmp.shiftRightUnsigned(41)).or(tmp.shiftLeft(64 - 41)); b14 = b14.subtract(b13);
    tmp = b15.xor(b12); b15 = (tmp.shiftRightUnsigned(34)).or(tmp.shiftLeft(64 - 34)); b12 = b12.subtract(b15);
    tmp = b1.xor(b6); b1 = (tmp.shiftRightUnsigned(13)).or(tmp.shiftLeft(64 - 13)); b6 = b6.subtract(b1);
    tmp = b3.xor(b4); b3 = (tmp.shiftRightUnsigned(51)).or(tmp.shiftLeft(64 - 51)); b4 = b4.subtract(b3);
    tmp = b5.xor(b2); b5 = (tmp.shiftRightUnsigned(4)).or(tmp.shiftLeft(64 - 4)); b2 = b2.subtract(b5);
    tmp = b7.xor(b0); b7 = (tmp.shiftRightUnsigned(33)).or(tmp.shiftLeft(64 - 33)); b0 = b0.subtract(b7);
    tmp = b1.xor(b8); b1 = (tmp.shiftRightUnsigned(52)).or(tmp.shiftLeft(64 - 52)); b8 = b8.subtract(b1);
    tmp = b5.xor(b14); b5 = (tmp.shiftRightUnsigned(23)).or(tmp.shiftLeft(64 - 23)); b14 = b14.subtract(b5);
    tmp = b3.xor(b12); b3 = (tmp.shiftRightUnsigned(18)).or(tmp.shiftLeft(64 - 18)); b12 = b12.subtract(b3);
    tmp = b7.xor(b10); b7 = (tmp.shiftRightUnsigned(49)).or(tmp.shiftLeft(64 - 49)); b10 = b10.subtract(b7);
    tmp = b15.xor(b4); b15 = (tmp.shiftRightUnsigned(55)).or(tmp.shiftLeft(64 - 55)); b4 = b4.subtract(b15);
    tmp = b11.xor(b6); b11 = (tmp.shiftRightUnsigned(10)).or(tmp.shiftLeft(64 - 10)); b6 = b6.subtract(b11);
    tmp = b13.xor(b2); b13 = (tmp.shiftRightUnsigned(19)).or(tmp.shiftLeft(64 - 19)); b2 = b2.subtract(b13);
    tmp = b9.xor(b0); b9 = (tmp.shiftRightUnsigned(38)).or(tmp.shiftLeft(64 - 38)); b0 = b0.subtract(b9);
    tmp = b15.xor(b14); b15 = (tmp.shiftRightUnsigned(37)).or(tmp.shiftLeft(64 - 37)); b14 = b14.subtract(b15.add(k13).add(t2)); b15 = b15.subtract(k14.add(new int64(16, 0)));
    tmp = b13.xor(b12); b13 = (tmp.shiftRightUnsigned(22)).or(tmp.shiftLeft(64 - 22)); b12 = b12.subtract(b13.add(k11)); b13 = b13.subtract(k12.add(t1));
    tmp = b11.xor(b10); b11 = (tmp.shiftRightUnsigned(17)).or(tmp.shiftLeft(64 - 17)); b10 = b10.subtract(b11.add(k9)); b11 = b11.subtract(k10);
    tmp = b9.xor(b8); b9 = (tmp.shiftRightUnsigned(8)).or(tmp.shiftLeft(64 - 8)); b8 = b8.subtract(b9.add(k7)); b9 = b9.subtract(k8);
    tmp = b7.xor(b6); b7 = (tmp.shiftRightUnsigned(47)).or(tmp.shiftLeft(64 - 47)); b6 = b6.subtract(b7.add(k5)); b7 = b7.subtract(k6);
    tmp = b5.xor(b4); b5 = (tmp.shiftRightUnsigned(8)).or(tmp.shiftLeft(64 - 8)); b4 = b4.subtract(b5.add(k3)); b5 = b5.subtract(k4);
    tmp = b3.xor(b2); b3 = (tmp.shiftRightUnsigned(13)).or(tmp.shiftLeft(64 - 13)); b2 = b2.subtract(b3.add(k1)); b3 = b3.subtract(k2);
    tmp = b1.xor(b0); b1 = (tmp.shiftRightUnsigned(24)).or(tmp.shiftLeft(64 - 24)); b0 = b0.subtract(b1.add(k16)); b1 = b1.subtract(k0);
    tmp = b7.xor(b12); b7 = (tmp.shiftRightUnsigned(20)).or(tmp.shiftLeft(64 - 20)); b12 = b12.subtract(b7);
    tmp = b3.xor(b10); b3 = (tmp.shiftRightUnsigned(37)).or(tmp.shiftLeft(64 - 37)); b10 = b10.subtract(b3);
    tmp = b5.xor(b8); b5 = (tmp.shiftRightUnsigned(31)).or(tmp.shiftLeft(64 - 31)); b8 = b8.subtract(b5);
    tmp = b1.xor(b14); b1 = (tmp.shiftRightUnsigned(23)).or(tmp.shiftLeft(64 - 23)); b14 = b14.subtract(b1);
    tmp = b9.xor(b4); b9 = (tmp.shiftRightUnsigned(52)).or(tmp.shiftLeft(64 - 52)); b4 = b4.subtract(b9);
    tmp = b13.xor(b6); b13 = (tmp.shiftRightUnsigned(35)).or(tmp.shiftLeft(64 - 35)); b6 = b6.subtract(b13);
    tmp = b11.xor(b2); b11 = (tmp.shiftRightUnsigned(48)).or(tmp.shiftLeft(64 - 48)); b2 = b2.subtract(b11);
    tmp = b15.xor(b0); b15 = (tmp.shiftRightUnsigned(9)).or(tmp.shiftLeft(64 - 9)); b0 = b0.subtract(b15);
    tmp = b9.xor(b10); b9 = (tmp.shiftRightUnsigned(25)).or(tmp.shiftLeft(64 - 25)); b10 = b10.subtract(b9);
    tmp = b11.xor(b8); b11 = (tmp.shiftRightUnsigned(44)).or(tmp.shiftLeft(64 - 44)); b8 = b8.subtract(b11);
    tmp = b13.xor(b14); b13 = (tmp.shiftRightUnsigned(42)).or(tmp.shiftLeft(64 - 42)); b14 = b14.subtract(b13);
    tmp = b15.xor(b12); b15 = (tmp.shiftRightUnsigned(19)).or(tmp.shiftLeft(64 - 19)); b12 = b12.subtract(b15);
    tmp = b1.xor(b6); b1 = (tmp.shiftRightUnsigned(46)).or(tmp.shiftLeft(64 - 46)); b6 = b6.subtract(b1);
    tmp = b3.xor(b4); b3 = (tmp.shiftRightUnsigned(47)).or(tmp.shiftLeft(64 - 47)); b4 = b4.subtract(b3);
    tmp = b5.xor(b2); b5 = (tmp.shiftRightUnsigned(44)).or(tmp.shiftLeft(64 - 44)); b2 = b2.subtract(b5);
    tmp = b7.xor(b0); b7 = (tmp.shiftRightUnsigned(31)).or(tmp.shiftLeft(64 - 31)); b0 = b0.subtract(b7);
    tmp = b1.xor(b8); b1 = (tmp.shiftRightUnsigned(41)).or(tmp.shiftLeft(64 - 41)); b8 = b8.subtract(b1);
    tmp = b5.xor(b14); b5 = (tmp.shiftRightUnsigned(42)).or(tmp.shiftLeft(64 - 42)); b14 = b14.subtract(b5);
    tmp = b3.xor(b12); b3 = (tmp.shiftRightUnsigned(53)).or(tmp.shiftLeft(64 - 53)); b12 = b12.subtract(b3);
    tmp = b7.xor(b10); b7 = (tmp.shiftRightUnsigned(4)).or(tmp.shiftLeft(64 - 4)); b10 = b10.subtract(b7);
    tmp = b15.xor(b4); b15 = (tmp.shiftRightUnsigned(51)).or(tmp.shiftLeft(64 - 51)); b4 = b4.subtract(b15);
    tmp = b11.xor(b6); b11 = (tmp.shiftRightUnsigned(56)).or(tmp.shiftLeft(64 - 56)); b6 = b6.subtract(b11);
    tmp = b13.xor(b2); b13 = (tmp.shiftRightUnsigned(34)).or(tmp.shiftLeft(64 - 34)); b2 = b2.subtract(b13);
    tmp = b9.xor(b0); b9 = (tmp.shiftRightUnsigned(16)).or(tmp.shiftLeft(64 - 16)); b0 = b0.subtract(b9);
    tmp = b15.xor(b14); b15 = (tmp.shiftRightUnsigned(30)).or(tmp.shiftLeft(64 - 30)); b14 = b14.subtract(b15.add(k12).add(t1)); b15 = b15.subtract(k13.add(new int64(15, 0)));
    tmp = b13.xor(b12); b13 = (tmp.shiftRightUnsigned(44)).or(tmp.shiftLeft(64 - 44)); b12 = b12.subtract(b13.add(k10)); b13 = b13.subtract(k11.add(t0));
    tmp = b11.xor(b10); b11 = (tmp.shiftRightUnsigned(47)).or(tmp.shiftLeft(64 - 47)); b10 = b10.subtract(b11.add(k8)); b11 = b11.subtract(k9);
    tmp = b9.xor(b8); b9 = (tmp.shiftRightUnsigned(12)).or(tmp.shiftLeft(64 - 12)); b8 = b8.subtract(b9.add(k6)); b9 = b9.subtract(k7);
    tmp = b7.xor(b6); b7 = (tmp.shiftRightUnsigned(31)).or(tmp.shiftLeft(64 - 31)); b6 = b6.subtract(b7.add(k4)); b7 = b7.subtract(k5);
    tmp = b5.xor(b4); b5 = (tmp.shiftRightUnsigned(37)).or(tmp.shiftLeft(64 - 37)); b4 = b4.subtract(b5.add(k2)); b5 = b5.subtract(k3);
    tmp = b3.xor(b2); b3 = (tmp.shiftRightUnsigned(9)).or(tmp.shiftLeft(64 - 9)); b2 = b2.subtract(b3.add(k0)); b3 = b3.subtract(k1);
    tmp = b1.xor(b0); b1 = (tmp.shiftRightUnsigned(41)).or(tmp.shiftLeft(64 - 41)); b0 = b0.subtract(b1.add(k15)); b1 = b1.subtract(k16);
    tmp = b7.xor(b12); b7 = (tmp.shiftRightUnsigned(25)).or(tmp.shiftLeft(64 - 25)); b12 = b12.subtract(b7);
    tmp = b3.xor(b10); b3 = (tmp.shiftRightUnsigned(16)).or(tmp.shiftLeft(64 - 16)); b10 = b10.subtract(b3);
    tmp = b5.xor(b8); b5 = (tmp.shiftRightUnsigned(28)).or(tmp.shiftLeft(64 - 28)); b8 = b8.subtract(b5);
    tmp = b1.xor(b14); b1 = (tmp.shiftRightUnsigned(47)).or(tmp.shiftLeft(64 - 47)); b14 = b14.subtract(b1);
    tmp = b9.xor(b4); b9 = (tmp.shiftRightUnsigned(41)).or(tmp.shiftLeft(64 - 41)); b4 = b4.subtract(b9);
    tmp = b13.xor(b6); b13 = (tmp.shiftRightUnsigned(48)).or(tmp.shiftLeft(64 - 48)); b6 = b6.subtract(b13);
    tmp = b11.xor(b2); b11 = (tmp.shiftRightUnsigned(20)).or(tmp.shiftLeft(64 - 20)); b2 = b2.subtract(b11);
    tmp = b15.xor(b0); b15 = (tmp.shiftRightUnsigned(5)).or(tmp.shiftLeft(64 - 5)); b0 = b0.subtract(b15);
    tmp = b9.xor(b10); b9 = (tmp.shiftRightUnsigned(17)).or(tmp.shiftLeft(64 - 17)); b10 = b10.subtract(b9);
    tmp = b11.xor(b8); b11 = (tmp.shiftRightUnsigned(59)).or(tmp.shiftLeft(64 - 59)); b8 = b8.subtract(b11);
    tmp = b13.xor(b14); b13 = (tmp.shiftRightUnsigned(41)).or(tmp.shiftLeft(64 - 41)); b14 = b14.subtract(b13);
    tmp = b15.xor(b12); b15 = (tmp.shiftRightUnsigned(34)).or(tmp.shiftLeft(64 - 34)); b12 = b12.subtract(b15);
    tmp = b1.xor(b6); b1 = (tmp.shiftRightUnsigned(13)).or(tmp.shiftLeft(64 - 13)); b6 = b6.subtract(b1);
    tmp = b3.xor(b4); b3 = (tmp.shiftRightUnsigned(51)).or(tmp.shiftLeft(64 - 51)); b4 = b4.subtract(b3);
    tmp = b5.xor(b2); b5 = (tmp.shiftRightUnsigned(4)).or(tmp.shiftLeft(64 - 4)); b2 = b2.subtract(b5);
    tmp = b7.xor(b0); b7 = (tmp.shiftRightUnsigned(33)).or(tmp.shiftLeft(64 - 33)); b0 = b0.subtract(b7);
    tmp = b1.xor(b8); b1 = (tmp.shiftRightUnsigned(52)).or(tmp.shiftLeft(64 - 52)); b8 = b8.subtract(b1);
    tmp = b5.xor(b14); b5 = (tmp.shiftRightUnsigned(23)).or(tmp.shiftLeft(64 - 23)); b14 = b14.subtract(b5);
    tmp = b3.xor(b12); b3 = (tmp.shiftRightUnsigned(18)).or(tmp.shiftLeft(64 - 18)); b12 = b12.subtract(b3);
    tmp = b7.xor(b10); b7 = (tmp.shiftRightUnsigned(49)).or(tmp.shiftLeft(64 - 49)); b10 = b10.subtract(b7);
    tmp = b15.xor(b4); b15 = (tmp.shiftRightUnsigned(55)).or(tmp.shiftLeft(64 - 55)); b4 = b4.subtract(b15);
    tmp = b11.xor(b6); b11 = (tmp.shiftRightUnsigned(10)).or(tmp.shiftLeft(64 - 10)); b6 = b6.subtract(b11);
    tmp = b13.xor(b2); b13 = (tmp.shiftRightUnsigned(19)).or(tmp.shiftLeft(64 - 19)); b2 = b2.subtract(b13);
    tmp = b9.xor(b0); b9 = (tmp.shiftRightUnsigned(38)).or(tmp.shiftLeft(64 - 38)); b0 = b0.subtract(b9);
    tmp = b15.xor(b14); b15 = (tmp.shiftRightUnsigned(37)).or(tmp.shiftLeft(64 - 37)); b14 = b14.subtract(b15.add(k11).add(t0)); b15 = b15.subtract(k12.add(new int64(14, 0)));
    tmp = b13.xor(b12); b13 = (tmp.shiftRightUnsigned(22)).or(tmp.shiftLeft(64 - 22)); b12 = b12.subtract(b13.add(k9)); b13 = b13.subtract(k10.add(t2));
    tmp = b11.xor(b10); b11 = (tmp.shiftRightUnsigned(17)).or(tmp.shiftLeft(64 - 17)); b10 = b10.subtract(b11.add(k7)); b11 = b11.subtract(k8);
    tmp = b9.xor(b8); b9 = (tmp.shiftRightUnsigned(8)).or(tmp.shiftLeft(64 - 8)); b8 = b8.subtract(b9.add(k5)); b9 = b9.subtract(k6);
    tmp = b7.xor(b6); b7 = (tmp.shiftRightUnsigned(47)).or(tmp.shiftLeft(64 - 47)); b6 = b6.subtract(b7.add(k3)); b7 = b7.subtract(k4);
    tmp = b5.xor(b4); b5 = (tmp.shiftRightUnsigned(8)).or(tmp.shiftLeft(64 - 8)); b4 = b4.subtract(b5.add(k1)); b5 = b5.subtract(k2);
    tmp = b3.xor(b2); b3 = (tmp.shiftRightUnsigned(13)).or(tmp.shiftLeft(64 - 13)); b2 = b2.subtract(b3.add(k16)); b3 = b3.subtract(k0);
    tmp = b1.xor(b0); b1 = (tmp.shiftRightUnsigned(24)).or(tmp.shiftLeft(64 - 24)); b0 = b0.subtract(b1.add(k14)); b1 = b1.subtract(k15);
    tmp = b7.xor(b12); b7 = (tmp.shiftRightUnsigned(20)).or(tmp.shiftLeft(64 - 20)); b12 = b12.subtract(b7);
    tmp = b3.xor(b10); b3 = (tmp.shiftRightUnsigned(37)).or(tmp.shiftLeft(64 - 37)); b10 = b10.subtract(b3);
    tmp = b5.xor(b8); b5 = (tmp.shiftRightUnsigned(31)).or(tmp.shiftLeft(64 - 31)); b8 = b8.subtract(b5);
    tmp = b1.xor(b14); b1 = (tmp.shiftRightUnsigned(23)).or(tmp.shiftLeft(64 - 23)); b14 = b14.subtract(b1);
    tmp = b9.xor(b4); b9 = (tmp.shiftRightUnsigned(52)).or(tmp.shiftLeft(64 - 52)); b4 = b4.subtract(b9);
    tmp = b13.xor(b6); b13 = (tmp.shiftRightUnsigned(35)).or(tmp.shiftLeft(64 - 35)); b6 = b6.subtract(b13);
    tmp = b11.xor(b2); b11 = (tmp.shiftRightUnsigned(48)).or(tmp.shiftLeft(64 - 48)); b2 = b2.subtract(b11);
    tmp = b15.xor(b0); b15 = (tmp.shiftRightUnsigned(9)).or(tmp.shiftLeft(64 - 9)); b0 = b0.subtract(b15);
    tmp = b9.xor(b10); b9 = (tmp.shiftRightUnsigned(25)).or(tmp.shiftLeft(64 - 25)); b10 = b10.subtract(b9);
    tmp = b11.xor(b8); b11 = (tmp.shiftRightUnsigned(44)).or(tmp.shiftLeft(64 - 44)); b8 = b8.subtract(b11);
    tmp = b13.xor(b14); b13 = (tmp.shiftRightUnsigned(42)).or(tmp.shiftLeft(64 - 42)); b14 = b14.subtract(b13);
    tmp = b15.xor(b12); b15 = (tmp.shiftRightUnsigned(19)).or(tmp.shiftLeft(64 - 19)); b12 = b12.subtract(b15);
    tmp = b1.xor(b6); b1 = (tmp.shiftRightUnsigned(46)).or(tmp.shiftLeft(64 - 46)); b6 = b6.subtract(b1);
    tmp = b3.xor(b4); b3 = (tmp.shiftRightUnsigned(47)).or(tmp.shiftLeft(64 - 47)); b4 = b4.subtract(b3);
    tmp = b5.xor(b2); b5 = (tmp.shiftRightUnsigned(44)).or(tmp.shiftLeft(64 - 44)); b2 = b2.subtract(b5);
    tmp = b7.xor(b0); b7 = (tmp.shiftRightUnsigned(31)).or(tmp.shiftLeft(64 - 31)); b0 = b0.subtract(b7);
    tmp = b1.xor(b8); b1 = (tmp.shiftRightUnsigned(41)).or(tmp.shiftLeft(64 - 41)); b8 = b8.subtract(b1);
    tmp = b5.xor(b14); b5 = (tmp.shiftRightUnsigned(42)).or(tmp.shiftLeft(64 - 42)); b14 = b14.subtract(b5);
    tmp = b3.xor(b12); b3 = (tmp.shiftRightUnsigned(53)).or(tmp.shiftLeft(64 - 53)); b12 = b12.subtract(b3);
    tmp = b7.xor(b10); b7 = (tmp.shiftRightUnsigned(4)).or(tmp.shiftLeft(64 - 4)); b10 = b10.subtract(b7);
    tmp = b15.xor(b4); b15 = (tmp.shiftRightUnsigned(51)).or(tmp.shiftLeft(64 - 51)); b4 = b4.subtract(b15);
    tmp = b11.xor(b6); b11 = (tmp.shiftRightUnsigned(56)).or(tmp.shiftLeft(64 - 56)); b6 = b6.subtract(b11);
    tmp = b13.xor(b2); b13 = (tmp.shiftRightUnsigned(34)).or(tmp.shiftLeft(64 - 34)); b2 = b2.subtract(b13);
    tmp = b9.xor(b0); b9 = (tmp.shiftRightUnsigned(16)).or(tmp.shiftLeft(64 - 16)); b0 = b0.subtract(b9);
    tmp = b15.xor(b14); b15 = (tmp.shiftRightUnsigned(30)).or(tmp.shiftLeft(64 - 30)); b14 = b14.subtract(b15.add(k10).add(t2)); b15 = b15.subtract(k11.add(new int64(13, 0)));
    tmp = b13.xor(b12); b13 = (tmp.shiftRightUnsigned(44)).or(tmp.shiftLeft(64 - 44)); b12 = b12.subtract(b13.add(k8)); b13 = b13.subtract(k9.add(t1));
    tmp = b11.xor(b10); b11 = (tmp.shiftRightUnsigned(47)).or(tmp.shiftLeft(64 - 47)); b10 = b10.subtract(b11.add(k6)); b11 = b11.subtract(k7);
    tmp = b9.xor(b8); b9 = (tmp.shiftRightUnsigned(12)).or(tmp.shiftLeft(64 - 12)); b8 = b8.subtract(b9.add(k4)); b9 = b9.subtract(k5);
    tmp = b7.xor(b6); b7 = (tmp.shiftRightUnsigned(31)).or(tmp.shiftLeft(64 - 31)); b6 = b6.subtract(b7.add(k2)); b7 = b7.subtract(k3);
    tmp = b5.xor(b4); b5 = (tmp.shiftRightUnsigned(37)).or(tmp.shiftLeft(64 - 37)); b4 = b4.subtract(b5.add(k0)); b5 = b5.subtract(k1);
    tmp = b3.xor(b2); b3 = (tmp.shiftRightUnsigned(9)).or(tmp.shiftLeft(64 - 9)); b2 = b2.subtract(b3.add(k15)); b3 = b3.subtract(k16);
    tmp = b1.xor(b0); b1 = (tmp.shiftRightUnsigned(41)).or(tmp.shiftLeft(64 - 41)); b0 = b0.subtract(b1.add(k13)); b1 = b1.subtract(k14);
    tmp = b7.xor(b12); b7 = (tmp.shiftRightUnsigned(25)).or(tmp.shiftLeft(64 - 25)); b12 = b12.subtract(b7);
    tmp = b3.xor(b10); b3 = (tmp.shiftRightUnsigned(16)).or(tmp.shiftLeft(64 - 16)); b10 = b10.subtract(b3);
    tmp = b5.xor(b8); b5 = (tmp.shiftRightUnsigned(28)).or(tmp.shiftLeft(64 - 28)); b8 = b8.subtract(b5);
    tmp = b1.xor(b14); b1 = (tmp.shiftRightUnsigned(47)).or(tmp.shiftLeft(64 - 47)); b14 = b14.subtract(b1);
    tmp = b9.xor(b4); b9 = (tmp.shiftRightUnsigned(41)).or(tmp.shiftLeft(64 - 41)); b4 = b4.subtract(b9);
    tmp = b13.xor(b6); b13 = (tmp.shiftRightUnsigned(48)).or(tmp.shiftLeft(64 - 48)); b6 = b6.subtract(b13);
    tmp = b11.xor(b2); b11 = (tmp.shiftRightUnsigned(20)).or(tmp.shiftLeft(64 - 20)); b2 = b2.subtract(b11);
    tmp = b15.xor(b0); b15 = (tmp.shiftRightUnsigned(5)).or(tmp.shiftLeft(64 - 5)); b0 = b0.subtract(b15);
    tmp = b9.xor(b10); b9 = (tmp.shiftRightUnsigned(17)).or(tmp.shiftLeft(64 - 17)); b10 = b10.subtract(b9);
    tmp = b11.xor(b8); b11 = (tmp.shiftRightUnsigned(59)).or(tmp.shiftLeft(64 - 59)); b8 = b8.subtract(b11);
    tmp = b13.xor(b14); b13 = (tmp.shiftRightUnsigned(41)).or(tmp.shiftLeft(64 - 41)); b14 = b14.subtract(b13);
    tmp = b15.xor(b12); b15 = (tmp.shiftRightUnsigned(34)).or(tmp.shiftLeft(64 - 34)); b12 = b12.subtract(b15);
    tmp = b1.xor(b6); b1 = (tmp.shiftRightUnsigned(13)).or(tmp.shiftLeft(64 - 13)); b6 = b6.subtract(b1);
    tmp = b3.xor(b4); b3 = (tmp.shiftRightUnsigned(51)).or(tmp.shiftLeft(64 - 51)); b4 = b4.subtract(b3);
    tmp = b5.xor(b2); b5 = (tmp.shiftRightUnsigned(4)).or(tmp.shiftLeft(64 - 4)); b2 = b2.subtract(b5);
    tmp = b7.xor(b0); b7 = (tmp.shiftRightUnsigned(33)).or(tmp.shiftLeft(64 - 33)); b0 = b0.subtract(b7);
    tmp = b1.xor(b8); b1 = (tmp.shiftRightUnsigned(52)).or(tmp.shiftLeft(64 - 52)); b8 = b8.subtract(b1);
    tmp = b5.xor(b14); b5 = (tmp.shiftRightUnsigned(23)).or(tmp.shiftLeft(64 - 23)); b14 = b14.subtract(b5);
    tmp = b3.xor(b12); b3 = (tmp.shiftRightUnsigned(18)).or(tmp.shiftLeft(64 - 18)); b12 = b12.subtract(b3);
    tmp = b7.xor(b10); b7 = (tmp.shiftRightUnsigned(49)).or(tmp.shiftLeft(64 - 49)); b10 = b10.subtract(b7);
    tmp = b15.xor(b4); b15 = (tmp.shiftRightUnsigned(55)).or(tmp.shiftLeft(64 - 55)); b4 = b4.subtract(b15);
    tmp = b11.xor(b6); b11 = (tmp.shiftRightUnsigned(10)).or(tmp.shiftLeft(64 - 10)); b6 = b6.subtract(b11);
    tmp = b13.xor(b2); b13 = (tmp.shiftRightUnsigned(19)).or(tmp.shiftLeft(64 - 19)); b2 = b2.subtract(b13);
    tmp = b9.xor(b0); b9 = (tmp.shiftRightUnsigned(38)).or(tmp.shiftLeft(64 - 38)); b0 = b0.subtract(b9);
    tmp = b15.xor(b14); b15 = (tmp.shiftRightUnsigned(37)).or(tmp.shiftLeft(64 - 37)); b14 = b14.subtract(b15.add(k9).add(t1)); b15 = b15.subtract(k10.add(new int64(12, 0)));
    tmp = b13.xor(b12); b13 = (tmp.shiftRightUnsigned(22)).or(tmp.shiftLeft(64 - 22)); b12 = b12.subtract(b13.add(k7)); b13 = b13.subtract(k8.add(t0));
    tmp = b11.xor(b10); b11 = (tmp.shiftRightUnsigned(17)).or(tmp.shiftLeft(64 - 17)); b10 = b10.subtract(b11.add(k5)); b11 = b11.subtract(k6);
    tmp = b9.xor(b8); b9 = (tmp.shiftRightUnsigned(8)).or(tmp.shiftLeft(64 - 8)); b8 = b8.subtract(b9.add(k3)); b9 = b9.subtract(k4);
    tmp = b7.xor(b6); b7 = (tmp.shiftRightUnsigned(47)).or(tmp.shiftLeft(64 - 47)); b6 = b6.subtract(b7.add(k1)); b7 = b7.subtract(k2);
    tmp = b5.xor(b4); b5 = (tmp.shiftRightUnsigned(8)).or(tmp.shiftLeft(64 - 8)); b4 = b4.subtract(b5.add(k16)); b5 = b5.subtract(k0);
    tmp = b3.xor(b2); b3 = (tmp.shiftRightUnsigned(13)).or(tmp.shiftLeft(64 - 13)); b2 = b2.subtract(b3.add(k14)); b3 = b3.subtract(k15);
    tmp = b1.xor(b0); b1 = (tmp.shiftRightUnsigned(24)).or(tmp.shiftLeft(64 - 24)); b0 = b0.subtract(b1.add(k12)); b1 = b1.subtract(k13);
    tmp = b7.xor(b12); b7 = (tmp.shiftRightUnsigned(20)).or(tmp.shiftLeft(64 - 20)); b12 = b12.subtract(b7);
    tmp = b3.xor(b10); b3 = (tmp.shiftRightUnsigned(37)).or(tmp.shiftLeft(64 - 37)); b10 = b10.subtract(b3);
    tmp = b5.xor(b8); b5 = (tmp.shiftRightUnsigned(31)).or(tmp.shiftLeft(64 - 31)); b8 = b8.subtract(b5);
    tmp = b1.xor(b14); b1 = (tmp.shiftRightUnsigned(23)).or(tmp.shiftLeft(64 - 23)); b14 = b14.subtract(b1);
    tmp = b9.xor(b4); b9 = (tmp.shiftRightUnsigned(52)).or(tmp.shiftLeft(64 - 52)); b4 = b4.subtract(b9);
    tmp = b13.xor(b6); b13 = (tmp.shiftRightUnsigned(35)).or(tmp.shiftLeft(64 - 35)); b6 = b6.subtract(b13);
    tmp = b11.xor(b2); b11 = (tmp.shiftRightUnsigned(48)).or(tmp.shiftLeft(64 - 48)); b2 = b2.subtract(b11);
    tmp = b15.xor(b0); b15 = (tmp.shiftRightUnsigned(9)).or(tmp.shiftLeft(64 - 9)); b0 = b0.subtract(b15);
    tmp = b9.xor(b10); b9 = (tmp.shiftRightUnsigned(25)).or(tmp.shiftLeft(64 - 25)); b10 = b10.subtract(b9);
    tmp = b11.xor(b8); b11 = (tmp.shiftRightUnsigned(44)).or(tmp.shiftLeft(64 - 44)); b8 = b8.subtract(b11);
    tmp = b13.xor(b14); b13 = (tmp.shiftRightUnsigned(42)).or(tmp.shiftLeft(64 - 42)); b14 = b14.subtract(b13);
    tmp = b15.xor(b12); b15 = (tmp.shiftRightUnsigned(19)).or(tmp.shiftLeft(64 - 19)); b12 = b12.subtract(b15);
    tmp = b1.xor(b6); b1 = (tmp.shiftRightUnsigned(46)).or(tmp.shiftLeft(64 - 46)); b6 = b6.subtract(b1);
    tmp = b3.xor(b4); b3 = (tmp.shiftRightUnsigned(47)).or(tmp.shiftLeft(64 - 47)); b4 = b4.subtract(b3);
    tmp = b5.xor(b2); b5 = (tmp.shiftRightUnsigned(44)).or(tmp.shiftLeft(64 - 44)); b2 = b2.subtract(b5);
    tmp = b7.xor(b0); b7 = (tmp.shiftRightUnsigned(31)).or(tmp.shiftLeft(64 - 31)); b0 = b0.subtract(b7);
    tmp = b1.xor(b8); b1 = (tmp.shiftRightUnsigned(41)).or(tmp.shiftLeft(64 - 41)); b8 = b8.subtract(b1);
    tmp = b5.xor(b14); b5 = (tmp.shiftRightUnsigned(42)).or(tmp.shiftLeft(64 - 42)); b14 = b14.subtract(b5);
    tmp = b3.xor(b12); b3 = (tmp.shiftRightUnsigned(53)).or(tmp.shiftLeft(64 - 53)); b12 = b12.subtract(b3);
    tmp = b7.xor(b10); b7 = (tmp.shiftRightUnsigned(4)).or(tmp.shiftLeft(64 - 4)); b10 = b10.subtract(b7);
    tmp = b15.xor(b4); b15 = (tmp.shiftRightUnsigned(51)).or(tmp.shiftLeft(64 - 51)); b4 = b4.subtract(b15);
    tmp = b11.xor(b6); b11 = (tmp.shiftRightUnsigned(56)).or(tmp.shiftLeft(64 - 56)); b6 = b6.subtract(b11);
    tmp = b13.xor(b2); b13 = (tmp.shiftRightUnsigned(34)).or(tmp.shiftLeft(64 - 34)); b2 = b2.subtract(b13);
    tmp = b9.xor(b0); b9 = (tmp.shiftRightUnsigned(16)).or(tmp.shiftLeft(64 - 16)); b0 = b0.subtract(b9);
    tmp = b15.xor(b14); b15 = (tmp.shiftRightUnsigned(30)).or(tmp.shiftLeft(64 - 30)); b14 = b14.subtract(b15.add(k8).add(t0)); b15 = b15.subtract(k9.add(new int64(11, 0)));
    tmp = b13.xor(b12); b13 = (tmp.shiftRightUnsigned(44)).or(tmp.shiftLeft(64 - 44)); b12 = b12.subtract(b13.add(k6)); b13 = b13.subtract(k7.add(t2));
    tmp = b11.xor(b10); b11 = (tmp.shiftRightUnsigned(47)).or(tmp.shiftLeft(64 - 47)); b10 = b10.subtract(b11.add(k4)); b11 = b11.subtract(k5);
    tmp = b9.xor(b8); b9 = (tmp.shiftRightUnsigned(12)).or(tmp.shiftLeft(64 - 12)); b8 = b8.subtract(b9.add(k2)); b9 = b9.subtract(k3);
    tmp = b7.xor(b6); b7 = (tmp.shiftRightUnsigned(31)).or(tmp.shiftLeft(64 - 31)); b6 = b6.subtract(b7.add(k0)); b7 = b7.subtract(k1);
    tmp = b5.xor(b4); b5 = (tmp.shiftRightUnsigned(37)).or(tmp.shiftLeft(64 - 37)); b4 = b4.subtract(b5.add(k15)); b5 = b5.subtract(k16);
    tmp = b3.xor(b2); b3 = (tmp.shiftRightUnsigned(9)).or(tmp.shiftLeft(64 - 9)); b2 = b2.subtract(b3.add(k13)); b3 = b3.subtract(k14);
    tmp = b1.xor(b0); b1 = (tmp.shiftRightUnsigned(41)).or(tmp.shiftLeft(64 - 41)); b0 = b0.subtract(b1.add(k11)); b1 = b1.subtract(k12);
    tmp = b7.xor(b12); b7 = (tmp.shiftRightUnsigned(25)).or(tmp.shiftLeft(64 - 25)); b12 = b12.subtract(b7);
    tmp = b3.xor(b10); b3 = (tmp.shiftRightUnsigned(16)).or(tmp.shiftLeft(64 - 16)); b10 = b10.subtract(b3);
    tmp = b5.xor(b8); b5 = (tmp.shiftRightUnsigned(28)).or(tmp.shiftLeft(64 - 28)); b8 = b8.subtract(b5);
    tmp = b1.xor(b14); b1 = (tmp.shiftRightUnsigned(47)).or(tmp.shiftLeft(64 - 47)); b14 = b14.subtract(b1);
    tmp = b9.xor(b4); b9 = (tmp.shiftRightUnsigned(41)).or(tmp.shiftLeft(64 - 41)); b4 = b4.subtract(b9);
    tmp = b13.xor(b6); b13 = (tmp.shiftRightUnsigned(48)).or(tmp.shiftLeft(64 - 48)); b6 = b6.subtract(b13);
    tmp = b11.xor(b2); b11 = (tmp.shiftRightUnsigned(20)).or(tmp.shiftLeft(64 - 20)); b2 = b2.subtract(b11);
    tmp = b15.xor(b0); b15 = (tmp.shiftRightUnsigned(5)).or(tmp.shiftLeft(64 - 5)); b0 = b0.subtract(b15);
    tmp = b9.xor(b10); b9 = (tmp.shiftRightUnsigned(17)).or(tmp.shiftLeft(64 - 17)); b10 = b10.subtract(b9);
    tmp = b11.xor(b8); b11 = (tmp.shiftRightUnsigned(59)).or(tmp.shiftLeft(64 - 59)); b8 = b8.subtract(b11);
    tmp = b13.xor(b14); b13 = (tmp.shiftRightUnsigned(41)).or(tmp.shiftLeft(64 - 41)); b14 = b14.subtract(b13);
    tmp = b15.xor(b12); b15 = (tmp.shiftRightUnsigned(34)).or(tmp.shiftLeft(64 - 34)); b12 = b12.subtract(b15);
    tmp = b1.xor(b6); b1 = (tmp.shiftRightUnsigned(13)).or(tmp.shiftLeft(64 - 13)); b6 = b6.subtract(b1);
    tmp = b3.xor(b4); b3 = (tmp.shiftRightUnsigned(51)).or(tmp.shiftLeft(64 - 51)); b4 = b4.subtract(b3);
    tmp = b5.xor(b2); b5 = (tmp.shiftRightUnsigned(4)).or(tmp.shiftLeft(64 - 4)); b2 = b2.subtract(b5);
    tmp = b7.xor(b0); b7 = (tmp.shiftRightUnsigned(33)).or(tmp.shiftLeft(64 - 33)); b0 = b0.subtract(b7);
    tmp = b1.xor(b8); b1 = (tmp.shiftRightUnsigned(52)).or(tmp.shiftLeft(64 - 52)); b8 = b8.subtract(b1);
    tmp = b5.xor(b14); b5 = (tmp.shiftRightUnsigned(23)).or(tmp.shiftLeft(64 - 23)); b14 = b14.subtract(b5);
    tmp = b3.xor(b12); b3 = (tmp.shiftRightUnsigned(18)).or(tmp.shiftLeft(64 - 18)); b12 = b12.subtract(b3);
    tmp = b7.xor(b10); b7 = (tmp.shiftRightUnsigned(49)).or(tmp.shiftLeft(64 - 49)); b10 = b10.subtract(b7);
    tmp = b15.xor(b4); b15 = (tmp.shiftRightUnsigned(55)).or(tmp.shiftLeft(64 - 55)); b4 = b4.subtract(b15);
    tmp = b11.xor(b6); b11 = (tmp.shiftRightUnsigned(10)).or(tmp.shiftLeft(64 - 10)); b6 = b6.subtract(b11);
    tmp = b13.xor(b2); b13 = (tmp.shiftRightUnsigned(19)).or(tmp.shiftLeft(64 - 19)); b2 = b2.subtract(b13);
    tmp = b9.xor(b0); b9 = (tmp.shiftRightUnsigned(38)).or(tmp.shiftLeft(64 - 38)); b0 = b0.subtract(b9);
    tmp = b15.xor(b14); b15 = (tmp.shiftRightUnsigned(37)).or(tmp.shiftLeft(64 - 37)); b14 = b14.subtract(b15.add(k7).add(t2)); b15 = b15.subtract(k8.add(new int64(10, 0)));
    tmp = b13.xor(b12); b13 = (tmp.shiftRightUnsigned(22)).or(tmp.shiftLeft(64 - 22)); b12 = b12.subtract(b13.add(k5)); b13 = b13.subtract(k6.add(t1));
    tmp = b11.xor(b10); b11 = (tmp.shiftRightUnsigned(17)).or(tmp.shiftLeft(64 - 17)); b10 = b10.subtract(b11.add(k3)); b11 = b11.subtract(k4);
    tmp = b9.xor(b8); b9 = (tmp.shiftRightUnsigned(8)).or(tmp.shiftLeft(64 - 8)); b8 = b8.subtract(b9.add(k1)); b9 = b9.subtract(k2);
    tmp = b7.xor(b6); b7 = (tmp.shiftRightUnsigned(47)).or(tmp.shiftLeft(64 - 47)); b6 = b6.subtract(b7.add(k16)); b7 = b7.subtract(k0);
    tmp = b5.xor(b4); b5 = (tmp.shiftRightUnsigned(8)).or(tmp.shiftLeft(64 - 8)); b4 = b4.subtract(b5.add(k14)); b5 = b5.subtract(k15);
    tmp = b3.xor(b2); b3 = (tmp.shiftRightUnsigned(13)).or(tmp.shiftLeft(64 - 13)); b2 = b2.subtract(b3.add(k12)); b3 = b3.subtract(k13);
    tmp = b1.xor(b0); b1 = (tmp.shiftRightUnsigned(24)).or(tmp.shiftLeft(64 - 24)); b0 = b0.subtract(b1.add(k10)); b1 = b1.subtract(k11);
    tmp = b7.xor(b12); b7 = (tmp.shiftRightUnsigned(20)).or(tmp.shiftLeft(64 - 20)); b12 = b12.subtract(b7);
    tmp = b3.xor(b10); b3 = (tmp.shiftRightUnsigned(37)).or(tmp.shiftLeft(64 - 37)); b10 = b10.subtract(b3);
    tmp = b5.xor(b8); b5 = (tmp.shiftRightUnsigned(31)).or(tmp.shiftLeft(64 - 31)); b8 = b8.subtract(b5);
    tmp = b1.xor(b14); b1 = (tmp.shiftRightUnsigned(23)).or(tmp.shiftLeft(64 - 23)); b14 = b14.subtract(b1);
    tmp = b9.xor(b4); b9 = (tmp.shiftRightUnsigned(52)).or(tmp.shiftLeft(64 - 52)); b4 = b4.subtract(b9);
    tmp = b13.xor(b6); b13 = (tmp.shiftRightUnsigned(35)).or(tmp.shiftLeft(64 - 35)); b6 = b6.subtract(b13);
    tmp = b11.xor(b2); b11 = (tmp.shiftRightUnsigned(48)).or(tmp.shiftLeft(64 - 48)); b2 = b2.subtract(b11);
    tmp = b15.xor(b0); b15 = (tmp.shiftRightUnsigned(9)).or(tmp.shiftLeft(64 - 9)); b0 = b0.subtract(b15);
    tmp = b9.xor(b10); b9 = (tmp.shiftRightUnsigned(25)).or(tmp.shiftLeft(64 - 25)); b10 = b10.subtract(b9);
    tmp = b11.xor(b8); b11 = (tmp.shiftRightUnsigned(44)).or(tmp.shiftLeft(64 - 44)); b8 = b8.subtract(b11);
    tmp = b13.xor(b14); b13 = (tmp.shiftRightUnsigned(42)).or(tmp.shiftLeft(64 - 42)); b14 = b14.subtract(b13);
    tmp = b15.xor(b12); b15 = (tmp.shiftRightUnsigned(19)).or(tmp.shiftLeft(64 - 19)); b12 = b12.subtract(b15);
    tmp = b1.xor(b6); b1 = (tmp.shiftRightUnsigned(46)).or(tmp.shiftLeft(64 - 46)); b6 = b6.subtract(b1);
    tmp = b3.xor(b4); b3 = (tmp.shiftRightUnsigned(47)).or(tmp.shiftLeft(64 - 47)); b4 = b4.subtract(b3);
    tmp = b5.xor(b2); b5 = (tmp.shiftRightUnsigned(44)).or(tmp.shiftLeft(64 - 44)); b2 = b2.subtract(b5);
    tmp = b7.xor(b0); b7 = (tmp.shiftRightUnsigned(31)).or(tmp.shiftLeft(64 - 31)); b0 = b0.subtract(b7);
    tmp = b1.xor(b8); b1 = (tmp.shiftRightUnsigned(41)).or(tmp.shiftLeft(64 - 41)); b8 = b8.subtract(b1);
    tmp = b5.xor(b14); b5 = (tmp.shiftRightUnsigned(42)).or(tmp.shiftLeft(64 - 42)); b14 = b14.subtract(b5);
    tmp = b3.xor(b12); b3 = (tmp.shiftRightUnsigned(53)).or(tmp.shiftLeft(64 - 53)); b12 = b12.subtract(b3);
    tmp = b7.xor(b10); b7 = (tmp.shiftRightUnsigned(4)).or(tmp.shiftLeft(64 - 4)); b10 = b10.subtract(b7);
    tmp = b15.xor(b4); b15 = (tmp.shiftRightUnsigned(51)).or(tmp.shiftLeft(64 - 51)); b4 = b4.subtract(b15);
    tmp = b11.xor(b6); b11 = (tmp.shiftRightUnsigned(56)).or(tmp.shiftLeft(64 - 56)); b6 = b6.subtract(b11);
    tmp = b13.xor(b2); b13 = (tmp.shiftRightUnsigned(34)).or(tmp.shiftLeft(64 - 34)); b2 = b2.subtract(b13);
    tmp = b9.xor(b0); b9 = (tmp.shiftRightUnsigned(16)).or(tmp.shiftLeft(64 - 16)); b0 = b0.subtract(b9);
    tmp = b15.xor(b14); b15 = (tmp.shiftRightUnsigned(30)).or(tmp.shiftLeft(64 - 30)); b14 = b14.subtract(b15.add(k6).add(t1)); b15 = b15.subtract(k7.add(new int64(9, 0)));
    tmp = b13.xor(b12); b13 = (tmp.shiftRightUnsigned(44)).or(tmp.shiftLeft(64 - 44)); b12 = b12.subtract(b13.add(k4)); b13 = b13.subtract(k5.add(t0));
    tmp = b11.xor(b10); b11 = (tmp.shiftRightUnsigned(47)).or(tmp.shiftLeft(64 - 47)); b10 = b10.subtract(b11.add(k2)); b11 = b11.subtract(k3);
    tmp = b9.xor(b8); b9 = (tmp.shiftRightUnsigned(12)).or(tmp.shiftLeft(64 - 12)); b8 = b8.subtract(b9.add(k0)); b9 = b9.subtract(k1);
    tmp = b7.xor(b6); b7 = (tmp.shiftRightUnsigned(31)).or(tmp.shiftLeft(64 - 31)); b6 = b6.subtract(b7.add(k15)); b7 = b7.subtract(k16);
    tmp = b5.xor(b4); b5 = (tmp.shiftRightUnsigned(37)).or(tmp.shiftLeft(64 - 37)); b4 = b4.subtract(b5.add(k13)); b5 = b5.subtract(k14);
    tmp = b3.xor(b2); b3 = (tmp.shiftRightUnsigned(9)).or(tmp.shiftLeft(64 - 9)); b2 = b2.subtract(b3.add(k11)); b3 = b3.subtract(k12);
    tmp = b1.xor(b0); b1 = (tmp.shiftRightUnsigned(41)).or(tmp.shiftLeft(64 - 41)); b0 = b0.subtract(b1.add(k9)); b1 = b1.subtract(k10);
    tmp = b7.xor(b12); b7 = (tmp.shiftRightUnsigned(25)).or(tmp.shiftLeft(64 - 25)); b12 = b12.subtract(b7);
    tmp = b3.xor(b10); b3 = (tmp.shiftRightUnsigned(16)).or(tmp.shiftLeft(64 - 16)); b10 = b10.subtract(b3);
    tmp = b5.xor(b8); b5 = (tmp.shiftRightUnsigned(28)).or(tmp.shiftLeft(64 - 28)); b8 = b8.subtract(b5);
    tmp = b1.xor(b14); b1 = (tmp.shiftRightUnsigned(47)).or(tmp.shiftLeft(64 - 47)); b14 = b14.subtract(b1);
    tmp = b9.xor(b4); b9 = (tmp.shiftRightUnsigned(41)).or(tmp.shiftLeft(64 - 41)); b4 = b4.subtract(b9);
    tmp = b13.xor(b6); b13 = (tmp.shiftRightUnsigned(48)).or(tmp.shiftLeft(64 - 48)); b6 = b6.subtract(b13);
    tmp = b11.xor(b2); b11 = (tmp.shiftRightUnsigned(20)).or(tmp.shiftLeft(64 - 20)); b2 = b2.subtract(b11);
    tmp = b15.xor(b0); b15 = (tmp.shiftRightUnsigned(5)).or(tmp.shiftLeft(64 - 5)); b0 = b0.subtract(b15);
    tmp = b9.xor(b10); b9 = (tmp.shiftRightUnsigned(17)).or(tmp.shiftLeft(64 - 17)); b10 = b10.subtract(b9);
    tmp = b11.xor(b8); b11 = (tmp.shiftRightUnsigned(59)).or(tmp.shiftLeft(64 - 59)); b8 = b8.subtract(b11);
    tmp = b13.xor(b14); b13 = (tmp.shiftRightUnsigned(41)).or(tmp.shiftLeft(64 - 41)); b14 = b14.subtract(b13);
    tmp = b15.xor(b12); b15 = (tmp.shiftRightUnsigned(34)).or(tmp.shiftLeft(64 - 34)); b12 = b12.subtract(b15);
    tmp = b1.xor(b6); b1 = (tmp.shiftRightUnsigned(13)).or(tmp.shiftLeft(64 - 13)); b6 = b6.subtract(b1);
    tmp = b3.xor(b4); b3 = (tmp.shiftRightUnsigned(51)).or(tmp.shiftLeft(64 - 51)); b4 = b4.subtract(b3);
    tmp = b5.xor(b2); b5 = (tmp.shiftRightUnsigned(4)).or(tmp.shiftLeft(64 - 4)); b2 = b2.subtract(b5);
    tmp = b7.xor(b0); b7 = (tmp.shiftRightUnsigned(33)).or(tmp.shiftLeft(64 - 33)); b0 = b0.subtract(b7);
    tmp = b1.xor(b8); b1 = (tmp.shiftRightUnsigned(52)).or(tmp.shiftLeft(64 - 52)); b8 = b8.subtract(b1);
    tmp = b5.xor(b14); b5 = (tmp.shiftRightUnsigned(23)).or(tmp.shiftLeft(64 - 23)); b14 = b14.subtract(b5);
    tmp = b3.xor(b12); b3 = (tmp.shiftRightUnsigned(18)).or(tmp.shiftLeft(64 - 18)); b12 = b12.subtract(b3);
    tmp = b7.xor(b10); b7 = (tmp.shiftRightUnsigned(49)).or(tmp.shiftLeft(64 - 49)); b10 = b10.subtract(b7);
    tmp = b15.xor(b4); b15 = (tmp.shiftRightUnsigned(55)).or(tmp.shiftLeft(64 - 55)); b4 = b4.subtract(b15);
    tmp = b11.xor(b6); b11 = (tmp.shiftRightUnsigned(10)).or(tmp.shiftLeft(64 - 10)); b6 = b6.subtract(b11);
    tmp = b13.xor(b2); b13 = (tmp.shiftRightUnsigned(19)).or(tmp.shiftLeft(64 - 19)); b2 = b2.subtract(b13);
    tmp = b9.xor(b0); b9 = (tmp.shiftRightUnsigned(38)).or(tmp.shiftLeft(64 - 38)); b0 = b0.subtract(b9);
    tmp = b15.xor(b14); b15 = (tmp.shiftRightUnsigned(37)).or(tmp.shiftLeft(64 - 37)); b14 = b14.subtract(b15.add(k5).add(t0)); b15 = b15.subtract(k6.add(new int64(8, 0)));
    tmp = b13.xor(b12); b13 = (tmp.shiftRightUnsigned(22)).or(tmp.shiftLeft(64 - 22)); b12 = b12.subtract(b13.add(k3)); b13 = b13.subtract(k4.add(t2));
    tmp = b11.xor(b10); b11 = (tmp.shiftRightUnsigned(17)).or(tmp.shiftLeft(64 - 17)); b10 = b10.subtract(b11.add(k1)); b11 = b11.subtract(k2);
    tmp = b9.xor(b8); b9 = (tmp.shiftRightUnsigned(8)).or(tmp.shiftLeft(64 - 8)); b8 = b8.subtract(b9.add(k16)); b9 = b9.subtract(k0);
    tmp = b7.xor(b6); b7 = (tmp.shiftRightUnsigned(47)).or(tmp.shiftLeft(64 - 47)); b6 = b6.subtract(b7.add(k14)); b7 = b7.subtract(k15);
    tmp = b5.xor(b4); b5 = (tmp.shiftRightUnsigned(8)).or(tmp.shiftLeft(64 - 8)); b4 = b4.subtract(b5.add(k12)); b5 = b5.subtract(k13);
    tmp = b3.xor(b2); b3 = (tmp.shiftRightUnsigned(13)).or(tmp.shiftLeft(64 - 13)); b2 = b2.subtract(b3.add(k10)); b3 = b3.subtract(k11);
    tmp = b1.xor(b0); b1 = (tmp.shiftRightUnsigned(24)).or(tmp.shiftLeft(64 - 24)); b0 = b0.subtract(b1.add(k8)); b1 = b1.subtract(k9);
    tmp = b7.xor(b12); b7 = (tmp.shiftRightUnsigned(20)).or(tmp.shiftLeft(64 - 20)); b12 = b12.subtract(b7);
    tmp = b3.xor(b10); b3 = (tmp.shiftRightUnsigned(37)).or(tmp.shiftLeft(64 - 37)); b10 = b10.subtract(b3);
    tmp = b5.xor(b8); b5 = (tmp.shiftRightUnsigned(31)).or(tmp.shiftLeft(64 - 31)); b8 = b8.subtract(b5);
    tmp = b1.xor(b14); b1 = (tmp.shiftRightUnsigned(23)).or(tmp.shiftLeft(64 - 23)); b14 = b14.subtract(b1);
    tmp = b9.xor(b4); b9 = (tmp.shiftRightUnsigned(52)).or(tmp.shiftLeft(64 - 52)); b4 = b4.subtract(b9);
    tmp = b13.xor(b6); b13 = (tmp.shiftRightUnsigned(35)).or(tmp.shiftLeft(64 - 35)); b6 = b6.subtract(b13);
    tmp = b11.xor(b2); b11 = (tmp.shiftRightUnsigned(48)).or(tmp.shiftLeft(64 - 48)); b2 = b2.subtract(b11);
    tmp = b15.xor(b0); b15 = (tmp.shiftRightUnsigned(9)).or(tmp.shiftLeft(64 - 9)); b0 = b0.subtract(b15);
    tmp = b9.xor(b10); b9 = (tmp.shiftRightUnsigned(25)).or(tmp.shiftLeft(64 - 25)); b10 = b10.subtract(b9);
    tmp = b11.xor(b8); b11 = (tmp.shiftRightUnsigned(44)).or(tmp.shiftLeft(64 - 44)); b8 = b8.subtract(b11);
    tmp = b13.xor(b14); b13 = (tmp.shiftRightUnsigned(42)).or(tmp.shiftLeft(64 - 42)); b14 = b14.subtract(b13);
    tmp = b15.xor(b12); b15 = (tmp.shiftRightUnsigned(19)).or(tmp.shiftLeft(64 - 19)); b12 = b12.subtract(b15);
    tmp = b1.xor(b6); b1 = (tmp.shiftRightUnsigned(46)).or(tmp.shiftLeft(64 - 46)); b6 = b6.subtract(b1);
    tmp = b3.xor(b4); b3 = (tmp.shiftRightUnsigned(47)).or(tmp.shiftLeft(64 - 47)); b4 = b4.subtract(b3);
    tmp = b5.xor(b2); b5 = (tmp.shiftRightUnsigned(44)).or(tmp.shiftLeft(64 - 44)); b2 = b2.subtract(b5);
    tmp = b7.xor(b0); b7 = (tmp.shiftRightUnsigned(31)).or(tmp.shiftLeft(64 - 31)); b0 = b0.subtract(b7);
    tmp = b1.xor(b8); b1 = (tmp.shiftRightUnsigned(41)).or(tmp.shiftLeft(64 - 41)); b8 = b8.subtract(b1);
    tmp = b5.xor(b14); b5 = (tmp.shiftRightUnsigned(42)).or(tmp.shiftLeft(64 - 42)); b14 = b14.subtract(b5);
    tmp = b3.xor(b12); b3 = (tmp.shiftRightUnsigned(53)).or(tmp.shiftLeft(64 - 53)); b12 = b12.subtract(b3);
    tmp = b7.xor(b10); b7 = (tmp.shiftRightUnsigned(4)).or(tmp.shiftLeft(64 - 4)); b10 = b10.subtract(b7);
    tmp = b15.xor(b4); b15 = (tmp.shiftRightUnsigned(51)).or(tmp.shiftLeft(64 - 51)); b4 = b4.subtract(b15);
    tmp = b11.xor(b6); b11 = (tmp.shiftRightUnsigned(56)).or(tmp.shiftLeft(64 - 56)); b6 = b6.subtract(b11);
    tmp = b13.xor(b2); b13 = (tmp.shiftRightUnsigned(34)).or(tmp.shiftLeft(64 - 34)); b2 = b2.subtract(b13);
    tmp = b9.xor(b0); b9 = (tmp.shiftRightUnsigned(16)).or(tmp.shiftLeft(64 - 16)); b0 = b0.subtract(b9);
    tmp = b15.xor(b14); b15 = (tmp.shiftRightUnsigned(30)).or(tmp.shiftLeft(64 - 30)); b14 = b14.subtract(b15.add(k4).add(t2)); b15 = b15.subtract(k5.add(new int64(7, 0)));
    tmp = b13.xor(b12); b13 = (tmp.shiftRightUnsigned(44)).or(tmp.shiftLeft(64 - 44)); b12 = b12.subtract(b13.add(k2)); b13 = b13.subtract(k3.add(t1));
    tmp = b11.xor(b10); b11 = (tmp.shiftRightUnsigned(47)).or(tmp.shiftLeft(64 - 47)); b10 = b10.subtract(b11.add(k0)); b11 = b11.subtract(k1);
    tmp = b9.xor(b8); b9 = (tmp.shiftRightUnsigned(12)).or(tmp.shiftLeft(64 - 12)); b8 = b8.subtract(b9.add(k15)); b9 = b9.subtract(k16);
    tmp = b7.xor(b6); b7 = (tmp.shiftRightUnsigned(31)).or(tmp.shiftLeft(64 - 31)); b6 = b6.subtract(b7.add(k13)); b7 = b7.subtract(k14);
    tmp = b5.xor(b4); b5 = (tmp.shiftRightUnsigned(37)).or(tmp.shiftLeft(64 - 37)); b4 = b4.subtract(b5.add(k11)); b5 = b5.subtract(k12);
    tmp = b3.xor(b2); b3 = (tmp.shiftRightUnsigned(9)).or(tmp.shiftLeft(64 - 9)); b2 = b2.subtract(b3.add(k9)); b3 = b3.subtract(k10);
    tmp = b1.xor(b0); b1 = (tmp.shiftRightUnsigned(41)).or(tmp.shiftLeft(64 - 41)); b0 = b0.subtract(b1.add(k7)); b1 = b1.subtract(k8);
    tmp = b7.xor(b12); b7 = (tmp.shiftRightUnsigned(25)).or(tmp.shiftLeft(64 - 25)); b12 = b12.subtract(b7);
    tmp = b3.xor(b10); b3 = (tmp.shiftRightUnsigned(16)).or(tmp.shiftLeft(64 - 16)); b10 = b10.subtract(b3);
    tmp = b5.xor(b8); b5 = (tmp.shiftRightUnsigned(28)).or(tmp.shiftLeft(64 - 28)); b8 = b8.subtract(b5);
    tmp = b1.xor(b14); b1 = (tmp.shiftRightUnsigned(47)).or(tmp.shiftLeft(64 - 47)); b14 = b14.subtract(b1);
    tmp = b9.xor(b4); b9 = (tmp.shiftRightUnsigned(41)).or(tmp.shiftLeft(64 - 41)); b4 = b4.subtract(b9);
    tmp = b13.xor(b6); b13 = (tmp.shiftRightUnsigned(48)).or(tmp.shiftLeft(64 - 48)); b6 = b6.subtract(b13);
    tmp = b11.xor(b2); b11 = (tmp.shiftRightUnsigned(20)).or(tmp.shiftLeft(64 - 20)); b2 = b2.subtract(b11);
    tmp = b15.xor(b0); b15 = (tmp.shiftRightUnsigned(5)).or(tmp.shiftLeft(64 - 5)); b0 = b0.subtract(b15);
    tmp = b9.xor(b10); b9 = (tmp.shiftRightUnsigned(17)).or(tmp.shiftLeft(64 - 17)); b10 = b10.subtract(b9);
    tmp = b11.xor(b8); b11 = (tmp.shiftRightUnsigned(59)).or(tmp.shiftLeft(64 - 59)); b8 = b8.subtract(b11);
    tmp = b13.xor(b14); b13 = (tmp.shiftRightUnsigned(41)).or(tmp.shiftLeft(64 - 41)); b14 = b14.subtract(b13);
    tmp = b15.xor(b12); b15 = (tmp.shiftRightUnsigned(34)).or(tmp.shiftLeft(64 - 34)); b12 = b12.subtract(b15);
    tmp = b1.xor(b6); b1 = (tmp.shiftRightUnsigned(13)).or(tmp.shiftLeft(64 - 13)); b6 = b6.subtract(b1);
    tmp = b3.xor(b4); b3 = (tmp.shiftRightUnsigned(51)).or(tmp.shiftLeft(64 - 51)); b4 = b4.subtract(b3);
    tmp = b5.xor(b2); b5 = (tmp.shiftRightUnsigned(4)).or(tmp.shiftLeft(64 - 4)); b2 = b2.subtract(b5);
    tmp = b7.xor(b0); b7 = (tmp.shiftRightUnsigned(33)).or(tmp.shiftLeft(64 - 33)); b0 = b0.subtract(b7);
    tmp = b1.xor(b8); b1 = (tmp.shiftRightUnsigned(52)).or(tmp.shiftLeft(64 - 52)); b8 = b8.subtract(b1);
    tmp = b5.xor(b14); b5 = (tmp.shiftRightUnsigned(23)).or(tmp.shiftLeft(64 - 23)); b14 = b14.subtract(b5);
    tmp = b3.xor(b12); b3 = (tmp.shiftRightUnsigned(18)).or(tmp.shiftLeft(64 - 18)); b12 = b12.subtract(b3);
    tmp = b7.xor(b10); b7 = (tmp.shiftRightUnsigned(49)).or(tmp.shiftLeft(64 - 49)); b10 = b10.subtract(b7);
    tmp = b15.xor(b4); b15 = (tmp.shiftRightUnsigned(55)).or(tmp.shiftLeft(64 - 55)); b4 = b4.subtract(b15);
    tmp = b11.xor(b6); b11 = (tmp.shiftRightUnsigned(10)).or(tmp.shiftLeft(64 - 10)); b6 = b6.subtract(b11);
    tmp = b13.xor(b2); b13 = (tmp.shiftRightUnsigned(19)).or(tmp.shiftLeft(64 - 19)); b2 = b2.subtract(b13);
    tmp = b9.xor(b0); b9 = (tmp.shiftRightUnsigned(38)).or(tmp.shiftLeft(64 - 38)); b0 = b0.subtract(b9);
    tmp = b15.xor(b14); b15 = (tmp.shiftRightUnsigned(37)).or(tmp.shiftLeft(64 - 37)); b14 = b14.subtract(b15.add(k3).add(t1)); b15 = b15.subtract(k4.add(new int64(6, 0)));
    tmp = b13.xor(b12); b13 = (tmp.shiftRightUnsigned(22)).or(tmp.shiftLeft(64 - 22)); b12 = b12.subtract(b13.add(k1)); b13 = b13.subtract(k2.add(t0));
    tmp = b11.xor(b10); b11 = (tmp.shiftRightUnsigned(17)).or(tmp.shiftLeft(64 - 17)); b10 = b10.subtract(b11.add(k16)); b11 = b11.subtract(k0);
    tmp = b9.xor(b8); b9 = (tmp.shiftRightUnsigned(8)).or(tmp.shiftLeft(64 - 8)); b8 = b8.subtract(b9.add(k14)); b9 = b9.subtract(k15);
    tmp = b7.xor(b6); b7 = (tmp.shiftRightUnsigned(47)).or(tmp.shiftLeft(64 - 47)); b6 = b6.subtract(b7.add(k12)); b7 = b7.subtract(k13);
    tmp = b5.xor(b4); b5 = (tmp.shiftRightUnsigned(8)).or(tmp.shiftLeft(64 - 8)); b4 = b4.subtract(b5.add(k10)); b5 = b5.subtract(k11);
    tmp = b3.xor(b2); b3 = (tmp.shiftRightUnsigned(13)).or(tmp.shiftLeft(64 - 13)); b2 = b2.subtract(b3.add(k8)); b3 = b3.subtract(k9);
    tmp = b1.xor(b0); b1 = (tmp.shiftRightUnsigned(24)).or(tmp.shiftLeft(64 - 24)); b0 = b0.subtract(b1.add(k6)); b1 = b1.subtract(k7);
    tmp = b7.xor(b12); b7 = (tmp.shiftRightUnsigned(20)).or(tmp.shiftLeft(64 - 20)); b12 = b12.subtract(b7);
    tmp = b3.xor(b10); b3 = (tmp.shiftRightUnsigned(37)).or(tmp.shiftLeft(64 - 37)); b10 = b10.subtract(b3);
    tmp = b5.xor(b8); b5 = (tmp.shiftRightUnsigned(31)).or(tmp.shiftLeft(64 - 31)); b8 = b8.subtract(b5);
    tmp = b1.xor(b14); b1 = (tmp.shiftRightUnsigned(23)).or(tmp.shiftLeft(64 - 23)); b14 = b14.subtract(b1);
    tmp = b9.xor(b4); b9 = (tmp.shiftRightUnsigned(52)).or(tmp.shiftLeft(64 - 52)); b4 = b4.subtract(b9);
    tmp = b13.xor(b6); b13 = (tmp.shiftRightUnsigned(35)).or(tmp.shiftLeft(64 - 35)); b6 = b6.subtract(b13);
    tmp = b11.xor(b2); b11 = (tmp.shiftRightUnsigned(48)).or(tmp.shiftLeft(64 - 48)); b2 = b2.subtract(b11);
    tmp = b15.xor(b0); b15 = (tmp.shiftRightUnsigned(9)).or(tmp.shiftLeft(64 - 9)); b0 = b0.subtract(b15);
    tmp = b9.xor(b10); b9 = (tmp.shiftRightUnsigned(25)).or(tmp.shiftLeft(64 - 25)); b10 = b10.subtract(b9);
    tmp = b11.xor(b8); b11 = (tmp.shiftRightUnsigned(44)).or(tmp.shiftLeft(64 - 44)); b8 = b8.subtract(b11);
    tmp = b13.xor(b14); b13 = (tmp.shiftRightUnsigned(42)).or(tmp.shiftLeft(64 - 42)); b14 = b14.subtract(b13);
    tmp = b15.xor(b12); b15 = (tmp.shiftRightUnsigned(19)).or(tmp.shiftLeft(64 - 19)); b12 = b12.subtract(b15);
    tmp = b1.xor(b6); b1 = (tmp.shiftRightUnsigned(46)).or(tmp.shiftLeft(64 - 46)); b6 = b6.subtract(b1);
    tmp = b3.xor(b4); b3 = (tmp.shiftRightUnsigned(47)).or(tmp.shiftLeft(64 - 47)); b4 = b4.subtract(b3);
    tmp = b5.xor(b2); b5 = (tmp.shiftRightUnsigned(44)).or(tmp.shiftLeft(64 - 44)); b2 = b2.subtract(b5);
    tmp = b7.xor(b0); b7 = (tmp.shiftRightUnsigned(31)).or(tmp.shiftLeft(64 - 31)); b0 = b0.subtract(b7);
    tmp = b1.xor(b8); b1 = (tmp.shiftRightUnsigned(41)).or(tmp.shiftLeft(64 - 41)); b8 = b8.subtract(b1);
    tmp = b5.xor(b14); b5 = (tmp.shiftRightUnsigned(42)).or(tmp.shiftLeft(64 - 42)); b14 = b14.subtract(b5);
    tmp = b3.xor(b12); b3 = (tmp.shiftRightUnsigned(53)).or(tmp.shiftLeft(64 - 53)); b12 = b12.subtract(b3);
    tmp = b7.xor(b10); b7 = (tmp.shiftRightUnsigned(4)).or(tmp.shiftLeft(64 - 4)); b10 = b10.subtract(b7);
    tmp = b15.xor(b4); b15 = (tmp.shiftRightUnsigned(51)).or(tmp.shiftLeft(64 - 51)); b4 = b4.subtract(b15);
    tmp = b11.xor(b6); b11 = (tmp.shiftRightUnsigned(56)).or(tmp.shiftLeft(64 - 56)); b6 = b6.subtract(b11);
    tmp = b13.xor(b2); b13 = (tmp.shiftRightUnsigned(34)).or(tmp.shiftLeft(64 - 34)); b2 = b2.subtract(b13);
    tmp = b9.xor(b0); b9 = (tmp.shiftRightUnsigned(16)).or(tmp.shiftLeft(64 - 16)); b0 = b0.subtract(b9);
    tmp = b15.xor(b14); b15 = (tmp.shiftRightUnsigned(30)).or(tmp.shiftLeft(64 - 30)); b14 = b14.subtract(b15.add(k2).add(t0)); b15 = b15.subtract(k3.add(new int64(5, 0)));
    tmp = b13.xor(b12); b13 = (tmp.shiftRightUnsigned(44)).or(tmp.shiftLeft(64 - 44)); b12 = b12.subtract(b13.add(k0)); b13 = b13.subtract(k1.add(t2));
    tmp = b11.xor(b10); b11 = (tmp.shiftRightUnsigned(47)).or(tmp.shiftLeft(64 - 47)); b10 = b10.subtract(b11.add(k15)); b11 = b11.subtract(k16);
    tmp = b9.xor(b8); b9 = (tmp.shiftRightUnsigned(12)).or(tmp.shiftLeft(64 - 12)); b8 = b8.subtract(b9.add(k13)); b9 = b9.subtract(k14);
    tmp = b7.xor(b6); b7 = (tmp.shiftRightUnsigned(31)).or(tmp.shiftLeft(64 - 31)); b6 = b6.subtract(b7.add(k11)); b7 = b7.subtract(k12);
    tmp = b5.xor(b4); b5 = (tmp.shiftRightUnsigned(37)).or(tmp.shiftLeft(64 - 37)); b4 = b4.subtract(b5.add(k9)); b5 = b5.subtract(k10);
    tmp = b3.xor(b2); b3 = (tmp.shiftRightUnsigned(9)).or(tmp.shiftLeft(64 - 9)); b2 = b2.subtract(b3.add(k7)); b3 = b3.subtract(k8);
    tmp = b1.xor(b0); b1 = (tmp.shiftRightUnsigned(41)).or(tmp.shiftLeft(64 - 41)); b0 = b0.subtract(b1.add(k5)); b1 = b1.subtract(k6);
    tmp = b7.xor(b12); b7 = (tmp.shiftRightUnsigned(25)).or(tmp.shiftLeft(64 - 25)); b12 = b12.subtract(b7);
    tmp = b3.xor(b10); b3 = (tmp.shiftRightUnsigned(16)).or(tmp.shiftLeft(64 - 16)); b10 = b10.subtract(b3);
    tmp = b5.xor(b8); b5 = (tmp.shiftRightUnsigned(28)).or(tmp.shiftLeft(64 - 28)); b8 = b8.subtract(b5);
    tmp = b1.xor(b14); b1 = (tmp.shiftRightUnsigned(47)).or(tmp.shiftLeft(64 - 47)); b14 = b14.subtract(b1);
    tmp = b9.xor(b4); b9 = (tmp.shiftRightUnsigned(41)).or(tmp.shiftLeft(64 - 41)); b4 = b4.subtract(b9);
    tmp = b13.xor(b6); b13 = (tmp.shiftRightUnsigned(48)).or(tmp.shiftLeft(64 - 48)); b6 = b6.subtract(b13);
    tmp = b11.xor(b2); b11 = (tmp.shiftRightUnsigned(20)).or(tmp.shiftLeft(64 - 20)); b2 = b2.subtract(b11);
    tmp = b15.xor(b0); b15 = (tmp.shiftRightUnsigned(5)).or(tmp.shiftLeft(64 - 5)); b0 = b0.subtract(b15);
    tmp = b9.xor(b10); b9 = (tmp.shiftRightUnsigned(17)).or(tmp.shiftLeft(64 - 17)); b10 = b10.subtract(b9);
    tmp = b11.xor(b8); b11 = (tmp.shiftRightUnsigned(59)).or(tmp.shiftLeft(64 - 59)); b8 = b8.subtract(b11);
    tmp = b13.xor(b14); b13 = (tmp.shiftRightUnsigned(41)).or(tmp.shiftLeft(64 - 41)); b14 = b14.subtract(b13);
    tmp = b15.xor(b12); b15 = (tmp.shiftRightUnsigned(34)).or(tmp.shiftLeft(64 - 34)); b12 = b12.subtract(b15);
    tmp = b1.xor(b6); b1 = (tmp.shiftRightUnsigned(13)).or(tmp.shiftLeft(64 - 13)); b6 = b6.subtract(b1);
    tmp = b3.xor(b4); b3 = (tmp.shiftRightUnsigned(51)).or(tmp.shiftLeft(64 - 51)); b4 = b4.subtract(b3);
    tmp = b5.xor(b2); b5 = (tmp.shiftRightUnsigned(4)).or(tmp.shiftLeft(64 - 4)); b2 = b2.subtract(b5);
    tmp = b7.xor(b0); b7 = (tmp.shiftRightUnsigned(33)).or(tmp.shiftLeft(64 - 33)); b0 = b0.subtract(b7);
    tmp = b1.xor(b8); b1 = (tmp.shiftRightUnsigned(52)).or(tmp.shiftLeft(64 - 52)); b8 = b8.subtract(b1);
    tmp = b5.xor(b14); b5 = (tmp.shiftRightUnsigned(23)).or(tmp.shiftLeft(64 - 23)); b14 = b14.subtract(b5);
    tmp = b3.xor(b12); b3 = (tmp.shiftRightUnsigned(18)).or(tmp.shiftLeft(64 - 18)); b12 = b12.subtract(b3);
    tmp = b7.xor(b10); b7 = (tmp.shiftRightUnsigned(49)).or(tmp.shiftLeft(64 - 49)); b10 = b10.subtract(b7);
    tmp = b15.xor(b4); b15 = (tmp.shiftRightUnsigned(55)).or(tmp.shiftLeft(64 - 55)); b4 = b4.subtract(b15);
    tmp = b11.xor(b6); b11 = (tmp.shiftRightUnsigned(10)).or(tmp.shiftLeft(64 - 10)); b6 = b6.subtract(b11);
    tmp = b13.xor(b2); b13 = (tmp.shiftRightUnsigned(19)).or(tmp.shiftLeft(64 - 19)); b2 = b2.subtract(b13);
    tmp = b9.xor(b0); b9 = (tmp.shiftRightUnsigned(38)).or(tmp.shiftLeft(64 - 38)); b0 = b0.subtract(b9);
    tmp = b15.xor(b14); b15 = (tmp.shiftRightUnsigned(37)).or(tmp.shiftLeft(64 - 37)); b14 = b14.subtract(b15.add(k1).add(t2)); b15 = b15.subtract(k2.add(new int64(4, 0)));
    tmp = b13.xor(b12); b13 = (tmp.shiftRightUnsigned(22)).or(tmp.shiftLeft(64 - 22)); b12 = b12.subtract(b13.add(k16)); b13 = b13.subtract(k0.add(t1));
    tmp = b11.xor(b10); b11 = (tmp.shiftRightUnsigned(17)).or(tmp.shiftLeft(64 - 17)); b10 = b10.subtract(b11.add(k14)); b11 = b11.subtract(k15);
    tmp = b9.xor(b8); b9 = (tmp.shiftRightUnsigned(8)).or(tmp.shiftLeft(64 - 8)); b8 = b8.subtract(b9.add(k12)); b9 = b9.subtract(k13);
    tmp = b7.xor(b6); b7 = (tmp.shiftRightUnsigned(47)).or(tmp.shiftLeft(64 - 47)); b6 = b6.subtract(b7.add(k10)); b7 = b7.subtract(k11);
    tmp = b5.xor(b4); b5 = (tmp.shiftRightUnsigned(8)).or(tmp.shiftLeft(64 - 8)); b4 = b4.subtract(b5.add(k8)); b5 = b5.subtract(k9);
    tmp = b3.xor(b2); b3 = (tmp.shiftRightUnsigned(13)).or(tmp.shiftLeft(64 - 13)); b2 = b2.subtract(b3.add(k6)); b3 = b3.subtract(k7);
    tmp = b1.xor(b0); b1 = (tmp.shiftRightUnsigned(24)).or(tmp.shiftLeft(64 - 24)); b0 = b0.subtract(b1.add(k4)); b1 = b1.subtract(k5);
    tmp = b7.xor(b12); b7 = (tmp.shiftRightUnsigned(20)).or(tmp.shiftLeft(64 - 20)); b12 = b12.subtract(b7);
    tmp = b3.xor(b10); b3 = (tmp.shiftRightUnsigned(37)).or(tmp.shiftLeft(64 - 37)); b10 = b10.subtract(b3);
    tmp = b5.xor(b8); b5 = (tmp.shiftRightUnsigned(31)).or(tmp.shiftLeft(64 - 31)); b8 = b8.subtract(b5);
    tmp = b1.xor(b14); b1 = (tmp.shiftRightUnsigned(23)).or(tmp.shiftLeft(64 - 23)); b14 = b14.subtract(b1);
    tmp = b9.xor(b4); b9 = (tmp.shiftRightUnsigned(52)).or(tmp.shiftLeft(64 - 52)); b4 = b4.subtract(b9);
    tmp = b13.xor(b6); b13 = (tmp.shiftRightUnsigned(35)).or(tmp.shiftLeft(64 - 35)); b6 = b6.subtract(b13);
    tmp = b11.xor(b2); b11 = (tmp.shiftRightUnsigned(48)).or(tmp.shiftLeft(64 - 48)); b2 = b2.subtract(b11);
    tmp = b15.xor(b0); b15 = (tmp.shiftRightUnsigned(9)).or(tmp.shiftLeft(64 - 9)); b0 = b0.subtract(b15);
    tmp = b9.xor(b10); b9 = (tmp.shiftRightUnsigned(25)).or(tmp.shiftLeft(64 - 25)); b10 = b10.subtract(b9);
    tmp = b11.xor(b8); b11 = (tmp.shiftRightUnsigned(44)).or(tmp.shiftLeft(64 - 44)); b8 = b8.subtract(b11);
    tmp = b13.xor(b14); b13 = (tmp.shiftRightUnsigned(42)).or(tmp.shiftLeft(64 - 42)); b14 = b14.subtract(b13);
    tmp = b15.xor(b12); b15 = (tmp.shiftRightUnsigned(19)).or(tmp.shiftLeft(64 - 19)); b12 = b12.subtract(b15);
    tmp = b1.xor(b6); b1 = (tmp.shiftRightUnsigned(46)).or(tmp.shiftLeft(64 - 46)); b6 = b6.subtract(b1);
    tmp = b3.xor(b4); b3 = (tmp.shiftRightUnsigned(47)).or(tmp.shiftLeft(64 - 47)); b4 = b4.subtract(b3);
    tmp = b5.xor(b2); b5 = (tmp.shiftRightUnsigned(44)).or(tmp.shiftLeft(64 - 44)); b2 = b2.subtract(b5);
    tmp = b7.xor(b0); b7 = (tmp.shiftRightUnsigned(31)).or(tmp.shiftLeft(64 - 31)); b0 = b0.subtract(b7);
    tmp = b1.xor(b8); b1 = (tmp.shiftRightUnsigned(41)).or(tmp.shiftLeft(64 - 41)); b8 = b8.subtract(b1);
    tmp = b5.xor(b14); b5 = (tmp.shiftRightUnsigned(42)).or(tmp.shiftLeft(64 - 42)); b14 = b14.subtract(b5);
    tmp = b3.xor(b12); b3 = (tmp.shiftRightUnsigned(53)).or(tmp.shiftLeft(64 - 53)); b12 = b12.subtract(b3);
    tmp = b7.xor(b10); b7 = (tmp.shiftRightUnsigned(4)).or(tmp.shiftLeft(64 - 4)); b10 = b10.subtract(b7);
    tmp = b15.xor(b4); b15 = (tmp.shiftRightUnsigned(51)).or(tmp.shiftLeft(64 - 51)); b4 = b4.subtract(b15);
    tmp = b11.xor(b6); b11 = (tmp.shiftRightUnsigned(56)).or(tmp.shiftLeft(64 - 56)); b6 = b6.subtract(b11);
    tmp = b13.xor(b2); b13 = (tmp.shiftRightUnsigned(34)).or(tmp.shiftLeft(64 - 34)); b2 = b2.subtract(b13);
    tmp = b9.xor(b0); b9 = (tmp.shiftRightUnsigned(16)).or(tmp.shiftLeft(64 - 16)); b0 = b0.subtract(b9);
    tmp = b15.xor(b14); b15 = (tmp.shiftRightUnsigned(30)).or(tmp.shiftLeft(64 - 30)); b14 = b14.subtract(b15.add(k0).add(t1)); b15 = b15.subtract(k1.add(new int64(3, 0)));
    tmp = b13.xor(b12); b13 = (tmp.shiftRightUnsigned(44)).or(tmp.shiftLeft(64 - 44)); b12 = b12.subtract(b13.add(k15)); b13 = b13.subtract(k16.add(t0));
    tmp = b11.xor(b10); b11 = (tmp.shiftRightUnsigned(47)).or(tmp.shiftLeft(64 - 47)); b10 = b10.subtract(b11.add(k13)); b11 = b11.subtract(k14);
    tmp = b9.xor(b8); b9 = (tmp.shiftRightUnsigned(12)).or(tmp.shiftLeft(64 - 12)); b8 = b8.subtract(b9.add(k11)); b9 = b9.subtract(k12);
    tmp = b7.xor(b6); b7 = (tmp.shiftRightUnsigned(31)).or(tmp.shiftLeft(64 - 31)); b6 = b6.subtract(b7.add(k9)); b7 = b7.subtract(k10);
    tmp = b5.xor(b4); b5 = (tmp.shiftRightUnsigned(37)).or(tmp.shiftLeft(64 - 37)); b4 = b4.subtract(b5.add(k7)); b5 = b5.subtract(k8);
    tmp = b3.xor(b2); b3 = (tmp.shiftRightUnsigned(9)).or(tmp.shiftLeft(64 - 9)); b2 = b2.subtract(b3.add(k5)); b3 = b3.subtract(k6);
    tmp = b1.xor(b0); b1 = (tmp.shiftRightUnsigned(41)).or(tmp.shiftLeft(64 - 41)); b0 = b0.subtract(b1.add(k3)); b1 = b1.subtract(k4);
    tmp = b7.xor(b12); b7 = (tmp.shiftRightUnsigned(25)).or(tmp.shiftLeft(64 - 25)); b12 = b12.subtract(b7);
    tmp = b3.xor(b10); b3 = (tmp.shiftRightUnsigned(16)).or(tmp.shiftLeft(64 - 16)); b10 = b10.subtract(b3);
    tmp = b5.xor(b8); b5 = (tmp.shiftRightUnsigned(28)).or(tmp.shiftLeft(64 - 28)); b8 = b8.subtract(b5);
    tmp = b1.xor(b14); b1 = (tmp.shiftRightUnsigned(47)).or(tmp.shiftLeft(64 - 47)); b14 = b14.subtract(b1);
    tmp = b9.xor(b4); b9 = (tmp.shiftRightUnsigned(41)).or(tmp.shiftLeft(64 - 41)); b4 = b4.subtract(b9);
    tmp = b13.xor(b6); b13 = (tmp.shiftRightUnsigned(48)).or(tmp.shiftLeft(64 - 48)); b6 = b6.subtract(b13);
    tmp = b11.xor(b2); b11 = (tmp.shiftRightUnsigned(20)).or(tmp.shiftLeft(64 - 20)); b2 = b2.subtract(b11);
    tmp = b15.xor(b0); b15 = (tmp.shiftRightUnsigned(5)).or(tmp.shiftLeft(64 - 5)); b0 = b0.subtract(b15);
    tmp = b9.xor(b10); b9 = (tmp.shiftRightUnsigned(17)).or(tmp.shiftLeft(64 - 17)); b10 = b10.subtract(b9);
    tmp = b11.xor(b8); b11 = (tmp.shiftRightUnsigned(59)).or(tmp.shiftLeft(64 - 59)); b8 = b8.subtract(b11);
    tmp = b13.xor(b14); b13 = (tmp.shiftRightUnsigned(41)).or(tmp.shiftLeft(64 - 41)); b14 = b14.subtract(b13);
    tmp = b15.xor(b12); b15 = (tmp.shiftRightUnsigned(34)).or(tmp.shiftLeft(64 - 34)); b12 = b12.subtract(b15);
    tmp = b1.xor(b6); b1 = (tmp.shiftRightUnsigned(13)).or(tmp.shiftLeft(64 - 13)); b6 = b6.subtract(b1);
    tmp = b3.xor(b4); b3 = (tmp.shiftRightUnsigned(51)).or(tmp.shiftLeft(64 - 51)); b4 = b4.subtract(b3);
    tmp = b5.xor(b2); b5 = (tmp.shiftRightUnsigned(4)).or(tmp.shiftLeft(64 - 4)); b2 = b2.subtract(b5);
    tmp = b7.xor(b0); b7 = (tmp.shiftRightUnsigned(33)).or(tmp.shiftLeft(64 - 33)); b0 = b0.subtract(b7);
    tmp = b1.xor(b8); b1 = (tmp.shiftRightUnsigned(52)).or(tmp.shiftLeft(64 - 52)); b8 = b8.subtract(b1);
    tmp = b5.xor(b14); b5 = (tmp.shiftRightUnsigned(23)).or(tmp.shiftLeft(64 - 23)); b14 = b14.subtract(b5);
    tmp = b3.xor(b12); b3 = (tmp.shiftRightUnsigned(18)).or(tmp.shiftLeft(64 - 18)); b12 = b12.subtract(b3);
    tmp = b7.xor(b10); b7 = (tmp.shiftRightUnsigned(49)).or(tmp.shiftLeft(64 - 49)); b10 = b10.subtract(b7);
    tmp = b15.xor(b4); b15 = (tmp.shiftRightUnsigned(55)).or(tmp.shiftLeft(64 - 55)); b4 = b4.subtract(b15);
    tmp = b11.xor(b6); b11 = (tmp.shiftRightUnsigned(10)).or(tmp.shiftLeft(64 - 10)); b6 = b6.subtract(b11);
    tmp = b13.xor(b2); b13 = (tmp.shiftRightUnsigned(19)).or(tmp.shiftLeft(64 - 19)); b2 = b2.subtract(b13);
    tmp = b9.xor(b0); b9 = (tmp.shiftRightUnsigned(38)).or(tmp.shiftLeft(64 - 38)); b0 = b0.subtract(b9);
    tmp = b15.xor(b14); b15 = (tmp.shiftRightUnsigned(37)).or(tmp.shiftLeft(64 - 37)); b14 = b14.subtract(b15.add(k16).add(t0)); b15 = b15.subtract(k0.add(new int64(2, 0)));
    tmp = b13.xor(b12); b13 = (tmp.shiftRightUnsigned(22)).or(tmp.shiftLeft(64 - 22)); b12 = b12.subtract(b13.add(k14)); b13 = b13.subtract(k15.add(t2));
    tmp = b11.xor(b10); b11 = (tmp.shiftRightUnsigned(17)).or(tmp.shiftLeft(64 - 17)); b10 = b10.subtract(b11.add(k12)); b11 = b11.subtract(k13);
    tmp = b9.xor(b8); b9 = (tmp.shiftRightUnsigned(8)).or(tmp.shiftLeft(64 - 8)); b8 = b8.subtract(b9.add(k10)); b9 = b9.subtract(k11);
    tmp = b7.xor(b6); b7 = (tmp.shiftRightUnsigned(47)).or(tmp.shiftLeft(64 - 47)); b6 = b6.subtract(b7.add(k8)); b7 = b7.subtract(k9);
    tmp = b5.xor(b4); b5 = (tmp.shiftRightUnsigned(8)).or(tmp.shiftLeft(64 - 8)); b4 = b4.subtract(b5.add(k6)); b5 = b5.subtract(k7);
    tmp = b3.xor(b2); b3 = (tmp.shiftRightUnsigned(13)).or(tmp.shiftLeft(64 - 13)); b2 = b2.subtract(b3.add(k4)); b3 = b3.subtract(k5);
    tmp = b1.xor(b0); b1 = (tmp.shiftRightUnsigned(24)).or(tmp.shiftLeft(64 - 24)); b0 = b0.subtract(b1.add(k2)); b1 = b1.subtract(k3);
    tmp = b7.xor(b12); b7 = (tmp.shiftRightUnsigned(20)).or(tmp.shiftLeft(64 - 20)); b12 = b12.subtract(b7);
    tmp = b3.xor(b10); b3 = (tmp.shiftRightUnsigned(37)).or(tmp.shiftLeft(64 - 37)); b10 = b10.subtract(b3);
    tmp = b5.xor(b8); b5 = (tmp.shiftRightUnsigned(31)).or(tmp.shiftLeft(64 - 31)); b8 = b8.subtract(b5);
    tmp = b1.xor(b14); b1 = (tmp.shiftRightUnsigned(23)).or(tmp.shiftLeft(64 - 23)); b14 = b14.subtract(b1);
    tmp = b9.xor(b4); b9 = (tmp.shiftRightUnsigned(52)).or(tmp.shiftLeft(64 - 52)); b4 = b4.subtract(b9);
    tmp = b13.xor(b6); b13 = (tmp.shiftRightUnsigned(35)).or(tmp.shiftLeft(64 - 35)); b6 = b6.subtract(b13);
    tmp = b11.xor(b2); b11 = (tmp.shiftRightUnsigned(48)).or(tmp.shiftLeft(64 - 48)); b2 = b2.subtract(b11);
    tmp = b15.xor(b0); b15 = (tmp.shiftRightUnsigned(9)).or(tmp.shiftLeft(64 - 9)); b0 = b0.subtract(b15);
    tmp = b9.xor(b10); b9 = (tmp.shiftRightUnsigned(25)).or(tmp.shiftLeft(64 - 25)); b10 = b10.subtract(b9);
    tmp = b11.xor(b8); b11 = (tmp.shiftRightUnsigned(44)).or(tmp.shiftLeft(64 - 44)); b8 = b8.subtract(b11);
    tmp = b13.xor(b14); b13 = (tmp.shiftRightUnsigned(42)).or(tmp.shiftLeft(64 - 42)); b14 = b14.subtract(b13);
    tmp = b15.xor(b12); b15 = (tmp.shiftRightUnsigned(19)).or(tmp.shiftLeft(64 - 19)); b12 = b12.subtract(b15);
    tmp = b1.xor(b6); b1 = (tmp.shiftRightUnsigned(46)).or(tmp.shiftLeft(64 - 46)); b6 = b6.subtract(b1);
    tmp = b3.xor(b4); b3 = (tmp.shiftRightUnsigned(47)).or(tmp.shiftLeft(64 - 47)); b4 = b4.subtract(b3);
    tmp = b5.xor(b2); b5 = (tmp.shiftRightUnsigned(44)).or(tmp.shiftLeft(64 - 44)); b2 = b2.subtract(b5);
    tmp = b7.xor(b0); b7 = (tmp.shiftRightUnsigned(31)).or(tmp.shiftLeft(64 - 31)); b0 = b0.subtract(b7);
    tmp = b1.xor(b8); b1 = (tmp.shiftRightUnsigned(41)).or(tmp.shiftLeft(64 - 41)); b8 = b8.subtract(b1);
    tmp = b5.xor(b14); b5 = (tmp.shiftRightUnsigned(42)).or(tmp.shiftLeft(64 - 42)); b14 = b14.subtract(b5);
    tmp = b3.xor(b12); b3 = (tmp.shiftRightUnsigned(53)).or(tmp.shiftLeft(64 - 53)); b12 = b12.subtract(b3);
    tmp = b7.xor(b10); b7 = (tmp.shiftRightUnsigned(4)).or(tmp.shiftLeft(64 - 4)); b10 = b10.subtract(b7);
    tmp = b15.xor(b4); b15 = (tmp.shiftRightUnsigned(51)).or(tmp.shiftLeft(64 - 51)); b4 = b4.subtract(b15);
    tmp = b11.xor(b6); b11 = (tmp.shiftRightUnsigned(56)).or(tmp.shiftLeft(64 - 56)); b6 = b6.subtract(b11);
    tmp = b13.xor(b2); b13 = (tmp.shiftRightUnsigned(34)).or(tmp.shiftLeft(64 - 34)); b2 = b2.subtract(b13);
    tmp = b9.xor(b0); b9 = (tmp.shiftRightUnsigned(16)).or(tmp.shiftLeft(64 - 16)); b0 = b0.subtract(b9);
    tmp = b15.xor(b14); b15 = (tmp.shiftRightUnsigned(30)).or(tmp.shiftLeft(64 - 30)); b14 = b14.subtract(b15.add(k15).add(t2)); b15 = b15.subtract(k16.add(new int64(1, 0)));
    tmp = b13.xor(b12); b13 = (tmp.shiftRightUnsigned(44)).or(tmp.shiftLeft(64 - 44)); b12 = b12.subtract(b13.add(k13)); b13 = b13.subtract(k14.add(t1));
    tmp = b11.xor(b10); b11 = (tmp.shiftRightUnsigned(47)).or(tmp.shiftLeft(64 - 47)); b10 = b10.subtract(b11.add(k11)); b11 = b11.subtract(k12);
    tmp = b9.xor(b8); b9 = (tmp.shiftRightUnsigned(12)).or(tmp.shiftLeft(64 - 12)); b8 = b8.subtract(b9.add(k9)); b9 = b9.subtract(k10);
    tmp = b7.xor(b6); b7 = (tmp.shiftRightUnsigned(31)).or(tmp.shiftLeft(64 - 31)); b6 = b6.subtract(b7.add(k7)); b7 = b7.subtract(k8);
    tmp = b5.xor(b4); b5 = (tmp.shiftRightUnsigned(37)).or(tmp.shiftLeft(64 - 37)); b4 = b4.subtract(b5.add(k5)); b5 = b5.subtract(k6);
    tmp = b3.xor(b2); b3 = (tmp.shiftRightUnsigned(9)).or(tmp.shiftLeft(64 - 9)); b2 = b2.subtract(b3.add(k3)); b3 = b3.subtract(k4);
    tmp = b1.xor(b0); b1 = (tmp.shiftRightUnsigned(41)).or(tmp.shiftLeft(64 - 41)); b0 = b0.subtract(b1.add(k1)); b1 = b1.subtract(k2);
    tmp = b7.xor(b12); b7 = (tmp.shiftRightUnsigned(25)).or(tmp.shiftLeft(64 - 25)); b12 = b12.subtract(b7);
    tmp = b3.xor(b10); b3 = (tmp.shiftRightUnsigned(16)).or(tmp.shiftLeft(64 - 16)); b10 = b10.subtract(b3);
    tmp = b5.xor(b8); b5 = (tmp.shiftRightUnsigned(28)).or(tmp.shiftLeft(64 - 28)); b8 = b8.subtract(b5);
    tmp = b1.xor(b14); b1 = (tmp.shiftRightUnsigned(47)).or(tmp.shiftLeft(64 - 47)); b14 = b14.subtract(b1);
    tmp = b9.xor(b4); b9 = (tmp.shiftRightUnsigned(41)).or(tmp.shiftLeft(64 - 41)); b4 = b4.subtract(b9);
    tmp = b13.xor(b6); b13 = (tmp.shiftRightUnsigned(48)).or(tmp.shiftLeft(64 - 48)); b6 = b6.subtract(b13);
    tmp = b11.xor(b2); b11 = (tmp.shiftRightUnsigned(20)).or(tmp.shiftLeft(64 - 20)); b2 = b2.subtract(b11);
    tmp = b15.xor(b0); b15 = (tmp.shiftRightUnsigned(5)).or(tmp.shiftLeft(64 - 5)); b0 = b0.subtract(b15);
    tmp = b9.xor(b10); b9 = (tmp.shiftRightUnsigned(17)).or(tmp.shiftLeft(64 - 17)); b10 = b10.subtract(b9);
    tmp = b11.xor(b8); b11 = (tmp.shiftRightUnsigned(59)).or(tmp.shiftLeft(64 - 59)); b8 = b8.subtract(b11);
    tmp = b13.xor(b14); b13 = (tmp.shiftRightUnsigned(41)).or(tmp.shiftLeft(64 - 41)); b14 = b14.subtract(b13);
    tmp = b15.xor(b12); b15 = (tmp.shiftRightUnsigned(34)).or(tmp.shiftLeft(64 - 34)); b12 = b12.subtract(b15);
    tmp = b1.xor(b6); b1 = (tmp.shiftRightUnsigned(13)).or(tmp.shiftLeft(64 - 13)); b6 = b6.subtract(b1);
    tmp = b3.xor(b4); b3 = (tmp.shiftRightUnsigned(51)).or(tmp.shiftLeft(64 - 51)); b4 = b4.subtract(b3);
    tmp = b5.xor(b2); b5 = (tmp.shiftRightUnsigned(4)).or(tmp.shiftLeft(64 - 4)); b2 = b2.subtract(b5);
    tmp = b7.xor(b0); b7 = (tmp.shiftRightUnsigned(33)).or(tmp.shiftLeft(64 - 33)); b0 = b0.subtract(b7);
    tmp = b1.xor(b8); b1 = (tmp.shiftRightUnsigned(52)).or(tmp.shiftLeft(64 - 52)); b8 = b8.subtract(b1);
    tmp = b5.xor(b14); b5 = (tmp.shiftRightUnsigned(23)).or(tmp.shiftLeft(64 - 23)); b14 = b14.subtract(b5);
    tmp = b3.xor(b12); b3 = (tmp.shiftRightUnsigned(18)).or(tmp.shiftLeft(64 - 18)); b12 = b12.subtract(b3);
    tmp = b7.xor(b10); b7 = (tmp.shiftRightUnsigned(49)).or(tmp.shiftLeft(64 - 49)); b10 = b10.subtract(b7);
    tmp = b15.xor(b4); b15 = (tmp.shiftRightUnsigned(55)).or(tmp.shiftLeft(64 - 55)); b4 = b4.subtract(b15);
    tmp = b11.xor(b6); b11 = (tmp.shiftRightUnsigned(10)).or(tmp.shiftLeft(64 - 10)); b6 = b6.subtract(b11);
    tmp = b13.xor(b2); b13 = (tmp.shiftRightUnsigned(19)).or(tmp.shiftLeft(64 - 19)); b2 = b2.subtract(b13);
    tmp = b9.xor(b0); b9 = (tmp.shiftRightUnsigned(38)).or(tmp.shiftLeft(64 - 38)); b0 = b0.subtract(b9);
    tmp = b15.xor(b14); b15 = (tmp.shiftRightUnsigned(37)).or(tmp.shiftLeft(64 - 37)); b14 = b14.subtract(b15.add(k14).add(t1)); b15 = b15.subtract(k15);
    tmp = b13.xor(b12); b13 = (tmp.shiftRightUnsigned(22)).or(tmp.shiftLeft(64 - 22)); b12 = b12.subtract(b13.add(k12)); b13 = b13.subtract(k13.add(t0));
    tmp = b11.xor(b10); b11 = (tmp.shiftRightUnsigned(17)).or(tmp.shiftLeft(64 - 17)); b10 = b10.subtract(b11.add(k10)); b11 = b11.subtract(k11);
    tmp = b9.xor(b8); b9 = (tmp.shiftRightUnsigned(8)).or(tmp.shiftLeft(64 - 8)); b8 = b8.subtract(b9.add(k8)); b9 = b9.subtract(k9);
    tmp = b7.xor(b6); b7 = (tmp.shiftRightUnsigned(47)).or(tmp.shiftLeft(64 - 47)); b6 = b6.subtract(b7.add(k6)); b7 = b7.subtract(k7);
    tmp = b5.xor(b4); b5 = (tmp.shiftRightUnsigned(8)).or(tmp.shiftLeft(64 - 8)); b4 = b4.subtract(b5.add(k4)); b5 = b5.subtract(k5);
    tmp = b3.xor(b2); b3 = (tmp.shiftRightUnsigned(13)).or(tmp.shiftLeft(64 - 13)); b2 = b2.subtract(b3.add(k2)); b3 = b3.subtract(k3);
    tmp = b1.xor(b0); b1 = (tmp.shiftRightUnsigned(24)).or(tmp.shiftLeft(64 - 24)); b0 = b0.subtract(b1.add(k0)); b1 = b1.subtract(k1);

    output[15] = b15;
    output[14] = b14;
    output[13] = b13;
    output[12] = b12;
    output[11] = b11;
    output[10] = b10;
    output[9] = b9;
    output[8] = b8;
    output[7] = b7;
    output[6] = b6;
    output[5] = b5;
    output[4] = b4;
    output[3] = b3;
    output[2] = b2;
    output[1] = b1;
    output[0] = b0;

    return output;
}


